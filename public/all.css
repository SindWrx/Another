@charset "UTF-8";/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */.slick-slider{position:relative;display:block;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-touch-callout:none;-khtml-user-select:none;-ms-touch-action:pan-y;touch-action:pan-y;-webkit-tap-highlight-color:transparent}.slick-list{position:relative;display:block;overflow:hidden;margin:0;padding:0}.slick-list:focus{outline:0}.slick-list.dragging{cursor:pointer;cursor:hand}.slick-slider .slick-list,.slick-slider .slick-track{-webkit-transform:translate3d(0,0,0);-moz-transform:translate3d(0,0,0);-ms-transform:translate3d(0,0,0);-o-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.slick-track{position:relative;top:0;left:0;display:block;margin-left:auto;margin-right:auto}.slick-track:after,.slick-track:before{display:table;content:''}.slick-track:after{clear:both}.slick-loading .slick-track{visibility:hidden}.slick-slide{display:none;float:left;height:100%;min-height:1px}[dir=rtl] .slick-slide{float:right}.slick-slide img{display:block}.slick-slide.slick-loading img{display:none}.slick-slide.dragging img{pointer-events:none}.slick-initialized .slick-slide{display:block}.slick-loading .slick-slide{visibility:hidden}.slick-vertical .slick-slide{display:block;height:auto;border:1px solid transparent}.slick-arrow.slick-hidden{display:none}@font-face{font-family:'Open Sans';src:url(fonts/OpenSans.woff2) format("woff2"),url(fonts/OpenSans.woff) format("woff"),url(fonts/OpenSans.ttf) format("ttf");font-weight:400;font-style:normal}@font-face{font-family:'Open Sans';src:url(fonts/OpenSans-Semibold.woff2) format("woff2"),url(fonts/OpenSans-Semibold.woff) format("woff"),url(fonts/OpenSans-Semibold.ttf) format("ttf");font-weight:600;font-style:normal}@font-face{font-family:'Open Sans';src:url(fonts/OpenSans-Bold.woff2) format("woff2"),url(fonts/OpenSans-Bold.woff) format("woff"),url(fonts/OpenSans-Bold.ttf) format("ttf");font-weight:700;font-style:normal}@font-face{font-family:'Open Sans';src:url(fonts/OpenSans-Extrabold.woff2) format("woff2"),url(fonts/OpenSans-Extrabold.woff) format("woff"),url(fonts/OpenSans-Extrabold.ttf) format("ttf");font-weight:800;font-style:normal}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */.aside{background-color:#343037;width:250px}.aside .logo-container{margin-bottom:50px;margin-left:14px}.logo{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-size:25px}.logo .logo__icon{width:40px;height:40px;fill:#fff;margin-right:10px}.logo .logo__text{color:#fff;font-weight:400;text-transform:uppercase}.logo .logo__text span{font-weight:600}.link{color:#fff;text-transform:uppercase;text-decoration:none;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:relative;padding:20px 25px 20px 20px}.link:hover{background-color:#dc107e}.link__icon{width:20px;height:20px;fill:#fff;margin-right:20px}.link__icon-arrow{width:10px;height:10px;fill:#fff;position:absolute;right:20px}.link__text{font-size:13px}.default-button{padding:20px 25px;color:#fff;text-transform:uppercase;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;cursor:pointer}.default-button__icon-bg{width:25px;height:25px;background-color:#dc107e;padding:5px;border-radius:12px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:20px}.default-button__icon{width:10px;height:10px;fill:#fff}.modal-block__curtain{width:100vw;height:100vh;position:fixed;top:0;left:0;background-color:rgba(52,48,55,.7);display:none;z-index:1}.modal{width:768px;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content;top:0;bottom:0;left:0;right:0;position:fixed;padding:100px;background-color:#f3f3f3;margin:auto;text-align:center;display:none;z-index:2}.modal-inner{width:280px;margin:auto;text-align:center}.modal__close{position:absolute;cursor:pointer;top:50px;right:65px;width:25px;height:25px;fill:#343037;z-index:3}.modal__header{font-size:46px;text-transform:uppercase;font-weight:800}.modal__hint{color:#9b9b9b;font-size:14px}.modal__hint_align-left{text-align:left}.modal__accent-text{color:#dc107e}.input{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;position:relative}.input .input__field{padding:10px 15px;border:1px solid #e6e6e6;width:100%}.input .input__field:focus{outline:0;border-color:#9b9b9b}.input .input__field:focus+.input__icon{fill:#9b9b9b;opacity:1}.input .input__icon{width:15px;height:20px;fill:#e6e6e6;opacity:.5;position:absolute;right:20px}.video-block__curtain{width:100vw;height:100vh;position:fixed;top:0;left:0;background-color:rgba(52,48,55,.7);display:none;z-index:1}.video-block__frame{margin:auto;position:absolute;top:0;left:0;right:0;bottom:0;display:block;z-index:2}.video__close{position:absolute;cursor:pointer;top:50px;right:65px;width:25px;height:25px;fill:#fff;z-index:3}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */.header{background-color:#343037;height:50px}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */.navigation{height:210px;background:url(resources/images/navigation-bg.jpg) no-repeat;background-position-x:center;background-size:cover;padding-top:40px;padding-bottom:70px}.link-back{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:#fff;font-size:14px;text-decoration:none}.link-back .link-back__icon{width:15px;height:15px;fill:#fff;margin-right:10px}.link-back:active{text-decoration:underline}.navigation__page{color:#fff;text-transform:uppercase;font-weight:800;font-size:56px}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */.list-box-outer{padding-left:20px}.list-box{padding:0;font-weight:600}.list-box_blue-markers{color:#3b91e6}.list-box_numbers{list-style-type:decimal}.list-box_checkers{list-style-type:none}.list-box__item-icon{width:20px;height:20px;background-color:#3b91e6;border-radius:10px;padding:5px;fill:#fff;position:absolute;-webkit-transform:translate(-100%,10%);transform:translate(-100%,10%)}.list-box__item-icon_check-black{fill:#000}.list-box__item-icon+.list-box__item{padding-left:10px}.list-box .list-box__item .list-box__text{color:#343037;font-weight:400;line-height:24px}.list-box .list-box__item .list-box__text_white{color:#fff}.link-box{color:#3b91e6;fill:#3b91e6;cursor:pointer;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.link-box__icon{width:20px;height:20px;margin-right:10px}.link-box__text{font-size:17px;text-decoration:underline}.link-box:visited{color:#78b5f0}.gradient-box{padding:15px 20px}.gradient-box_gradient1{background:-webkit-gradient(linear,left top,right top,from(#3b91e6),color-stop(70%,#7b5fc6),to(transparent));background:linear-gradient(90deg,#3b91e6 0,#7b5fc6 70%,transparent 100%)}.gradient-box_gradient2{background:-webkit-gradient(linear,left top,right top,from(#e9c7d4),to(transparent));background:linear-gradient(90deg,#e9c7d4 0,transparent 100%)}.gradient-box_w270{width:270px}.gradient-box_w500{width:500px}.gradient-box_center{text-align:center}.gradient-box__text{color:#fff;font-weight:600}.gradient-box__text_dark{color:#343037}.gradient-box__text_upper{text-transform:uppercase}.gradient-box__text_fat{font-weight:900}.btn-box-outer{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;width:674px}.button{height:50px;width:100%;text-align:center;background-color:#dc107e;color:#fff;text-transform:uppercase;-webkit-box-shadow:0 5px 10px 0 rgba(0,0,0,.4);box-shadow:0 5px 10px 0 rgba(0,0,0,.4);border:0;display:block;cursor:pointer;position:relative}.button_sm{width:210px;font-weight:400;font-size:15px}.button_lg{width:325px;font-weight:600}.button_radius{border-radius:30px}.button_m-auto{margin:auto}.button_white{background-color:#fff;color:#dc107e;border:3px solid #dc107e}.button:focus{outline:0}.check,.radio{display:-webkit-box;display:-ms-flexbox;display:flex}.option{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.option_vtop{-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}.option__title{margin:0;font-size:15px}.option__string{display:block;margin-top:15px}.option__input{display:none}.option__input_check:checked+.option__item .option__tick{visibility:visible}.option__input_radio:checked+.option__item .option__dot{visibility:visible}.option__item{width:24px;height:24px;border-width:2px;border-style:solid;margin-right:15px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;border-radius:3px}.option__item_circle{border-radius:50%}.option__item_white{border-color:#fff}.option__item_white .option__dot{background-color:#fff}.option__item_white .option__tick{fill:#fff}.option__item_white+.option__title{color:#fff}.option__tick{width:20px;height:20px;padding:5px;display:block;visibility:hidden;fill:#dc107e}.option__dot{display:block;visibility:hidden;width:10px;height:10px;border-radius:10px;background-color:#dc107e}.toogle{width:565px;background:-webkit-gradient(linear,left top,right top,from(#b5446e),to(#9d44b4));background:linear-gradient(90deg,#b5446e 0,#9d44b4 100%);padding:40px 25px 25px}.accordeon{border:1px solid #ececec}.accordeon__item{border-left:3px solid transparent;cursor:pointer}.accordeon__item:not(:last-child){border-bottom:1px solid #ececec}.accordeon__item:hover{-webkit-box-shadow:0 0 35px 0 rgba(0,0,0,.14);box-shadow:0 0 35px 0 rgba(0,0,0,.14);border-left-color:#dc107e}.accordeon-title{height:75px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 30px}.accordeon-title__icon{width:20px;fill:#d1d1d1;-ms-flex-negative:0;flex-shrink:0}.accordeon-content{padding:0 30px;display:none}.accordeon-content__text{line-height:22px;margin:0;padding-bottom:30px;padding-top:10px}.accordeon-content__subtitle{font-weight:600}.article__img_mt35{margin-top:35px}.message-inner{margin:0 auto}.message-inner_lg{width:580px}.message-inner_sm{width:414px}.message__phone{color:#fff;font-size:45px;padding:20px 0;border:3px solid #dc107e;font-weight:400;text-align:center}.message__phone span{font-weight:800}.textarea{resize:none;border:1px solid #e6e6e6;width:100%;padding:10px 15px;height:100%}.textarea:focus{outline:0;border-color:#9b9b9b}.box-col2{display:grid;grid-template-columns:50% 50%;grid-column-gap:25px}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */.container_slider-container{position:relative}.slider__item{height:400px}.slider-box__arrow{width:36px;height:36px;padding:10px 14px;background-color:#3b91e6;fill:#fff;border-radius:18px;position:absolute;top:50%;cursor:pointer;opacity:1}.slider-box__arrow_next{right:0;-webkit-transform:translate(200%,-100%);transform:translate(200%,-100%)}.slider-box__arrow_prev{left:0;-webkit-transform:translate(-200%,-100%);transform:translate(-200%,-100%)}.slider-box__arrow.slick-disabled{opacity:.3}.slider-box__dots{list-style-type:none;padding:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;cursor:pointer}.slider-box__dots li{background-color:#3b91e6;width:12px;height:12px;border-radius:6px;margin:0 10px;opacity:.3}.slider-box__dots li.slick-active{opacity:1}.slider-box__dots button{display:none}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0;display:grid;grid-template-rows:50px auto;grid-template-columns:250px 1fr;grid-template-areas:"header header" "aside main"}details,main{display:block}h1{font-size:2em}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}*{-webkit-box-sizing:border-box;box-sizing:border-box}html{color:#343037;font-family:'Open Sans',sans-serif;font-size:17px}h1,h2,h3,h4,h5,h6{margin:0}header.header{grid-area:header}aside.aside{grid-area:aside}.container{width:768px;margin:0 auto;padding:0 15px}.container_align-right{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.box_col-2{display:grid;grid-template-columns:1fr 1fr;grid-column-gap:30px}.box_gray{background-color:#f3f3f3}.bg-box{background:url(resources/images/box-bg.jpg) no-repeat;background-size:cover;background-position-x:right}.h1{font-size:56px;text-transform:uppercase;font-weight:800}.h2{font-size:42px;font-weight:800}.h3{font-size:36px;font-weight:700}.h3_white{color:#fff}.h4{font-size:28px}.h5{font-size:22px}.h5_offset-left20{margin-left:-20px}.h5_white{color:#fff}.h6{font-size:17px}.textCenter{text-align:center}.white{color:#fff}.accent{color:#dc107e}.semiBold{font-weight:600}.bold{font-weight:700}.extraBold{font-weight:800}.upper{text-transform:uppercase}.textSize46{font-size:46px}.textSize22{font-size:22px}.textSize14{font-size:14px}.textSize13{font-size:13px}.text{line-height:24px}.text_opacity5{opacity:.5}.mx10{margin-left:10px;margin-right:10px}.mx20{margin-left:20px;margin-right:20px}.my30{margin-top:30px;margin-bottom:30px}.my40{margin-top:40px;margin-bottom:40px}.my50{margin-top:50px;margin-bottom:50px}.my80{margin-top:80px;margin-bottom:80px}.mr30{margin-right:30px}.mr50{margin-right:50px}.mt10{margin-top:10px}.mt20{margin-top:20px}.mt30{margin-top:30px}.mt60{margin-top:60px}.mb15{margin-bottom:15px}.mb20{margin-bottom:20px}.mb30{margin-bottom:30px}.mb35{margin-bottom:35px}.mb40{margin-bottom:40px}.mb50{margin-bottom:50px}.mb55{margin-bottom:55px}.mb75{margin-bottom:75px}.mb90{margin-bottom:90px}.p60{padding:60px}.px20{padding-left:20px;padding-right:20px}.py60{padding-top:60px;padding-bottom:60px}.py80{padding-top:80px;padding-bottom:80px}.pt80{padding-top:80px}.pb120{padding-bottom:120px}.pl20{padding-left:20px}.cityes{color:#fff;fill:#fff;background-color:#343037}.cityes_w250{width:250px}.cityes_height50{height:50px}.item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;cursor:pointer;height:50px;background-color:#343037;position:relative}.item_flex-end{-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.item_offset{position:relative;left:230px;top:-50px}.item .item__city-name_uppercase{text-transform:uppercase}.item span{font-weight:600}.item .item__arrow{width:10px;height:10px}.item .item__arrow_align-right{position:absolute;right:20px}.item .item__icon-phone{width:16px;height:16px}.item:not(.active){display:none}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
