@charset "UTF-8";/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */.slick-slider{position:relative;display:block;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-touch-callout:none;-khtml-user-select:none;-ms-touch-action:pan-y;touch-action:pan-y;-webkit-tap-highlight-color:transparent}.slick-list{position:relative;display:block;overflow:hidden;margin:0;padding:0}.slick-list:focus{outline:0}.slick-list.dragging{cursor:pointer;cursor:hand}.slick-slider .slick-list,.slick-slider .slick-track{-webkit-transform:translate3d(0,0,0);-moz-transform:translate3d(0,0,0);-ms-transform:translate3d(0,0,0);-o-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.slick-track{position:relative;top:0;left:0;display:block;margin-left:auto;margin-right:auto}.slick-track:after,.slick-track:before{display:table;content:''}.slick-track:after{clear:both}.slick-loading .slick-track{visibility:hidden}.slick-slide{display:none;float:left;height:100%;min-height:1px}[dir=rtl] .slick-slide{float:right}.slick-slide img{display:block}.slick-slide.slick-loading img{display:none}.slick-slide.dragging img{pointer-events:none}.slick-initialized .slick-slide{display:block}.slick-loading .slick-slide{visibility:hidden}.slick-vertical .slick-slide{display:block;height:auto;border:1px solid transparent}.slick-arrow.slick-hidden{display:none}@font-face{font-family:'Open Sans';src:url(fonts/OpenSans.woff2) format("woff2"),url(fonts/OpenSans.woff) format("woff"),url(fonts/OpenSans.ttf) format("ttf");font-weight:400;font-style:normal}@font-face{font-family:'Open Sans';src:url(fonts/OpenSans-Semibold.woff2) format("woff2"),url(fonts/OpenSans-Semibold.woff) format("woff"),url(fonts/OpenSans-Semibold.ttf) format("ttf");font-weight:600;font-style:normal}@font-face{font-family:'Open Sans';src:url(fonts/OpenSans-Bold.woff2) format("woff2"),url(fonts/OpenSans-Bold.woff) format("woff"),url(fonts/OpenSans-Bold.ttf) format("ttf");font-weight:700;font-style:normal}@font-face{font-family:'Open Sans';src:url(fonts/OpenSans-Extrabold.woff2) format("woff2"),url(fonts/OpenSans-Extrabold.woff) format("woff"),url(fonts/OpenSans-Extrabold.ttf) format("ttf");font-weight:800;font-style:normal}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */.aside{background-color:#343037}.aside .logo-container{margin-bottom:50px;margin-left:14px}.logo{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;font-size:25px}.logo .logo__icon{width:40px;height:40px;fill:#fff;margin-right:10px}.logo .logo__text{color:#fff;font-weight:400;text-transform:uppercase}.logo .logo__text span{font-weight:600}.link{color:#fff;text-transform:uppercase;text-decoration:none;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;position:relative;padding:20px 25px 20px 20px}.link:hover{background-color:#dd1781}.link__icon{width:20px;height:20px;fill:#fff;margin-right:20px}.link__icon-arrow{width:10px;height:10px;fill:#fff;position:absolute;right:20px}.link__text{font-size:13px}.default-button{padding:20px 25px;color:#fff;text-transform:uppercase;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;cursor:pointer}.default-button__icon-bg{width:25px;height:25px;background-color:#dd1781;padding:5px;border-radius:12px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-right:20px}.default-button__icon{width:10px;height:10px;fill:#fff}.modal-block__curtain{width:100vw;height:100vh;position:fixed;top:0;left:0;background-color:rgba(52,48,55,.7);display:none;z-index:1}.modal{width:768px;height:-webkit-fit-content;height:-moz-fit-content;height:fit-content;top:0;bottom:0;left:0;right:0;position:fixed;padding:100px;background-color:#f3f3f3;margin:auto;text-align:center;display:none;z-index:2}.modal-inner{width:280px;margin:auto;text-align:center}.modal__close{position:absolute;cursor:pointer;top:50px;right:65px;width:25px;height:25px;fill:#343037;z-index:3}.modal__header{font-size:46px;text-transform:uppercase;font-weight:800}.modal__hint{color:#9b9b9b;font-size:14px}.modal__hint_align-left{text-align:left}.modal__accent-text{color:#dd1781}.input{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-wrap:wrap;flex-wrap:wrap;position:relative;width:100%}.input .input__field{padding:10px 15px;border:1px solid #e6e6e6;width:100%}.input .input__field:focus{outline:0;border-color:#9b9b9b}.input .input__field:focus+.input__icon{fill:#9b9b9b;opacity:1}.input .input__icon{width:15px;height:20px;fill:#e6e6e6;opacity:.5;position:absolute;right:20px;top:11px}.input__error{font-size:14px;color:#dd1781;margin:10px 0;display:none}.video-block__curtain{width:100vw;height:100vh;position:fixed;top:0;left:0;background-color:rgba(52,48,55,.7);display:none;z-index:1}.video-block__frame{margin:auto;position:absolute;top:0;left:0;right:0;bottom:0;display:block;z-index:2}.video__close{position:absolute;cursor:pointer;top:50px;right:65px;width:25px;height:25px;fill:#fff;z-index:3}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */.header{background-color:#343037;height:50px}.headerWrapper{max-width:1200px;margin:0 auto;padding-left:10px;padding-right:10px}@media screen and (max-width:768px){.headerWrapper{padding-left:15px;padding-right:15px}}@media screen and (max-width:320px){.headerWrapper{padding-left:15px;padding-right:15px}}.headerRow{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-left:-10px;margin-right:-10px;-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */.navigation{height:210px;background:url(resources/images/navigation-bg.jpg) no-repeat;background-position-x:center;background-size:cover;padding-top:40px;padding-bottom:70px}.link-back{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:#fff;font-size:14px;text-decoration:none}.link-back .link-back__icon{width:15px;height:15px;fill:#fff;margin-right:10px}.link-back:active{text-decoration:underline}.navigation__page{color:#fff;text-transform:uppercase;font-weight:800;font-size:56px}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */.container{max-width:1200px;margin:0 auto;padding-left:10px;padding-right:10px}.textBox-row{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-left:-10px;margin-right:-10px;margin-left:calc(8.33333% + 10px);width:calc(58.33333% - 20px);margin-top:70px;margin-bottom:70px}@media screen and (max-width:768px){.container{padding-left:15px;padding-right:15px}.textBox-row{margin-left:calc(0% + 10px)}}@media screen and (max-width:320px){.container{padding-left:15px;padding-right:15px}.textBox-row{width:calc(33.33333% - 20px)}}.listBox{max-width:1200px;margin:0 auto;padding-left:10px;padding-right:10px;background:url(resources/images/box-bg.jpg) no-repeat;background-size:cover;background-position-x:right}@media screen and (max-width:320px){.listBox{padding-left:15px;padding-right:15px}}.listBox-row{margin-bottom:55px;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-left:-10px;margin-right:-10px;margin-right:calc(8.33333% + 10px);margin-left:calc(8.33333% + 10px)}@media screen and (max-width:768px){.listBox{padding-left:15px;padding-right:15px}.listBox-row{margin-left:calc(0% + 10px)}}.listBox-col{width:calc(41.66667% - 20px)}.listBox-col:first-child{margin-right:80px}.listItem{padding-left:20px;font-weight:600}.listItem_blue-markers{color:#3b91e6}.listItem_numbers{list-style-type:decimal}.listItem_checkers{list-style-type:none}.listItem__itemIcon{width:20px;height:20px;background-color:#3b91e6;border-radius:10px;padding:5px;fill:#fff;position:absolute;-webkit-transform:translate(-100%,10%);transform:translate(-100%,10%)}.listItem__itemIcon_check-black{fill:#000}.listItem__itemIcon+.listItem__item{padding-left:10px}.listItem .listItem__item .listItem__text{color:#343037;font-weight:400;line-height:24px}.listItem .listItem__item .listItem__text_white{color:#fff}.links-row{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-left:-10px;margin-right:-10px;margin-left:calc(8.33333% + 10px);margin-bottom:70px}@media screen and (max-width:768px){.links-row{margin-left:calc(0% + 10px)}}.links-col{-webkit-box-sizing:border-box;box-sizing:border-box;word-wrap:break-word;margin-left:10px;margin-right:40px}.linkBox{color:#3b91e6;fill:#3b91e6;cursor:pointer;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.linkBox__icon{width:20px;height:20px;margin-right:10px}.linkBox__text{font-size:17px;text-decoration:underline}.linkBox:visited{color:#78b5f0}.gradient-row{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-left:-10px;margin-right:-10px;margin-left:calc(8.33333% + 10px);margin-bottom:20px;padding:15px 0;font-size:22px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;color:#fff;font-weight:600}@media screen and (max-width:768px){.gradient-row{margin-left:calc(0% + 10px)}}.gradient-row_gradient1{background:-webkit-gradient(linear,left top,right top,from(#3b91e6),color-stop(70%,#7b5fc6),to(transparent));background:linear-gradient(90deg,#3b91e6 0,#7b5fc6 70%,transparent 100%)}.gradient-row_gradient2{background:-webkit-gradient(linear,left top,right top,from(#e9c7d4),to(transparent));background:linear-gradient(90deg,#e9c7d4 0,transparent 100%)}.gradient-row_gradient3{background:-webkit-gradient(linear,left top,right top,from(#b5446e),to(#9d44b4));background:linear-gradient(90deg,#b5446e 0,#9d44b4 100%)}.gradient-row_dark{color:#343037}.gradient-row_upper{text-transform:uppercase}.gradient-row_fat{font-weight:900}.gradient-row_sm{width:calc(25% - 20px)}.gradient-row_lg{width:calc(41.66667% - 20px)}.gradient-row_mb30{margin-bottom:30px}.btn-box-outer{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-left:-10px;margin-right:-10px;margin-left:calc(8.33333% + 10px);-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-bottom:25px}.debugger{height:100vh;position:fixed;width:100%}.debugger>div{height:inherit;max-width:1200px;margin:0 auto 0 0;padding-left:10px;padding-right:10px}@media screen and (max-width:768px){.btn-box-outer{margin-left:calc(0% + 10px)}.debugger>div{padding-left:15px;padding-right:15px}}.debugger>div>div{height:inherit;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-left:-10px;margin-right:-10px}.debugger>div>div>div{-webkit-box-sizing:border-box;box-sizing:border-box;word-wrap:break-word;margin-left:10px;margin-right:10px;width:calc(8.33333% - 20px);height:inherit;outline:#000;background:rgba(255,166,0,.294)}.button{height:50px;text-align:center;background-color:#dd1781;color:#fff;text-transform:uppercase;-webkit-box-shadow:0 5px 10px 0 rgba(0,0,0,.4);box-shadow:0 5px 10px 0 rgba(0,0,0,.4);border:0;display:block;cursor:pointer;position:relative;margin-right:35px}.button_sm{width:210px;font-weight:400;font-size:15px}.button_lg{width:325px;font-weight:600}.button_radius{border-radius:30px}.button_m-auto{margin:auto}.button_white{background-color:#fff;color:#dd1781;border:3px solid #dd1781}.button:focus{outline:0}.checkRadio{max-width:1200px;margin:100px auto;padding-left:10px;padding-right:10px}@media screen and (max-width:768px){.checkRadio{padding-left:15px;padding-right:15px}}@media screen and (max-width:320px){.checkRadio,.debugger>div{padding-left:15px;padding-right:15px}}.checkRadio-row{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-left:-10px;margin-right:-10px;margin-left:calc(8.33333% + 10px);-webkit-box-align:center;-ms-flex-align:center;align-items:center}.checkRadio-col:first-child{margin-right:calc(8.33333% + 10px)}.check{display:-webkit-box;display:-ms-flexbox;display:flex}.option{display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.option_vtop{-webkit-box-align:start;-ms-flex-align:start;align-items:flex-start}.option__title{margin:0;font-size:15px}.option__string{display:block;margin-top:15px}.option__input{display:none}.option__input_check:checked+.option__item .option__tick{visibility:visible}.option__input_radio:checked+.option__item .option__dot{visibility:visible}.option__item{width:24px;height:24px;border-width:2px;border-style:solid;margin-right:15px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;border-radius:3px}.option__item_circle{border-radius:50%}.option__item_white{border-color:#fff}.option__item_white .option__dot{background-color:#fff}.option__item_white .option__tick{fill:#fff}.option__item_white+.option__title{color:#fff}.option__tick{width:20px;height:20px;padding:5px;display:block;visibility:hidden;fill:#dd1781}.option__dot{display:block;visibility:hidden;width:10px;height:10px;border-radius:10px;background-color:#dd1781}.toogle{width:565px;background:-webkit-gradient(linear,left top,right top,from(#b5446e),to(#9d44b4));background:linear-gradient(90deg,#b5446e 0,#9d44b4 100%);padding:40px 25px 25px}.accordeonBox{max-width:1200px;margin:0 auto 55px;padding-left:10px;padding-right:10px}@media screen and (max-width:768px){.accordeonBox{padding-left:15px;padding-right:15px}}@media screen and (max-width:320px){.accordeonBox{padding-left:15px;padding-right:15px}}.accordeonBox-row{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-left:-10px;margin-right:-10px;margin-left:calc(8.33333% + 10px);width:calc(100% / 12 * 10 - 0)}.accordeon{border:1px solid #ececec}.accordeon__item{border-left:3px solid transparent;cursor:pointer}.accordeon__item:not(:last-child){border-bottom:1px solid #ececec}.accordeon__item:hover{-webkit-box-shadow:0 0 35px 0 rgba(0,0,0,.14);box-shadow:0 0 35px 0 rgba(0,0,0,.14);border-left-color:#dd1781}.accordeon-title{height:75px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;padding:0 30px}.accordeon-title__icon{width:20px;fill:#d1d1d1;-ms-flex-negative:0;flex-shrink:0}.accordeon-content{padding:0 30px;display:none}.accordeon-content__text{line-height:22px;margin:0;padding-bottom:30px;padding-top:10px}.accordeon-content__subtitle{font-weight:600}.article__img_mt35{margin-top:35px}.message-inner{margin:0 auto}.message-inner_lg{width:580px}.message-inner_sm{width:414px}.message__phone{color:#fff;font-size:45px;padding:20px 0;border:3px solid #dd1781;font-weight:400;text-align:center}.message__phone span{font-weight:800}.textarea{resize:none;border:1px solid #e6e6e6;width:100%;padding:10px 15px;height:100%}.textarea:focus{outline:0;border-color:#9b9b9b}.box-col2{display:grid;grid-template-columns:50% 50%;grid-column-gap:25px}.dropdown{cursor:pointer}.dropdown__item{background-color:#fff}.dropdown__item:not(.selected){padding:10px 15px}.dropdown__item:hover:not(.selected){background-color:#f3f3f3}.dropdown.disabled{color:#e6e6e6}.dropdown.disabled .dropdown__arrow{fill:#e6e6e6}.dropdown.disabled .dropdown__head{border-color:#e6e6e6}.dropdown__head{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;border:1px solid #939393;background-color:#fff;padding:10px 15px}.dropdown__head .dropdown__arrow{fill:#343037;width:12px;height:19px}.dropdown__body{border:1px solid #e6e6e6;border-top:0;display:none}.incorrect{border:1px solid #dd1781}.incorrect~.input__icon{fill:#dd1781}.incorrect.input__field:focus{border:1px solid #dd1781}.incorrect.input__field:focus~.input__icon{fill:#dd1781}.correct{border:1px solid #e6e6e6}.correct~.input__icon{fill:#3b91e6}.correct.input__field:focus{border:1px solid #3b91e6}.correct.input__field:focus~.input__icon{fill:#3b91e6}.tumbler{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-pack:distribute;justify-content:space-around;padding:2px 0;border-radius:60px}.tumbler_pink{border:2px solid #dd1781}.tumbler_pink .tumbler__item_active{color:#fff}.tumbler_pink .tumbler__point{background-color:#dd1781}.tumbler_white{border:2px solid #fff;color:#fff}.tumbler_white .tumbler__item_active{color:#343037}.tumbler_white .tumbler__point{background-color:#fff}.tumbler__item{padding:15px 30px;border-radius:60px;cursor:pointer;font-weight:600;-webkit-transition:color .5s;transition:color .5s;z-index:1}.tumbler__point{position:absolute;z-index:0;border-radius:60px}.tarif_white .tarif__option{background-color:rgba(226,226,226,.3);color:#fff}.tarif_white .tarif__option_active{background-color:#fff;color:#dd1781}.tarif_pink .tarif__option_active{background-color:#dd1781;color:#fff}.tarif__option{border:0;cursor:pointer;background-color:#e7e7e7}.tarif__option:focus{outline:0}.tarif__option_lg{width:176px;height:50px;text-transform:uppercase;font-size:15px}.tarif__option_sm{width:87px;height:30px}.infoWrapper{display:grid;grid-template-columns:1fr 1fr}.info{padding:20px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-ms-flex-wrap:wrap;flex-wrap:wrap}.info_bg{background:-webkit-gradient(linear,left top,right top,from(#b5446e),to(#9d44b4));background:linear-gradient(90deg,#b5446e 0,#9d44b4 100%)}.info__title{text-align:center;line-height:22px;margin:0}.info__title_white{color:#fff}.info__icon{display:inline-block;width:20px;height:20px;text-align:center;line-height:19.5px;border-radius:10px;font-size:13px;position:relative;left:5px;bottom:2px;font-weight:600}.info__icon_white{background-color:#fff;color:#343037}.info__icon_pink{border:1px solid #dd1781;color:#dd1781}.info__text{font-size:13px;margin:0}.infoDescription{-webkit-box-shadow:0 0 8px 0 rgba(0,0,0,.3);box-shadow:0 0 8px 0 rgba(0,0,0,.3);padding:15px 25px;background-color:#fff;width:300px}.table{border:3px solid transparent;border-spacing:0}.table__title{margin-bottom:10px;font-weight:600;text-align:left}.table_pink{border-color:#dd1781;color:#343037}.table_pink .table__title-row{background-color:#dd1781;color:#fff}.table_pink .table__row:nth-child(2n+1){background-color:#f0f0f0}.table_pink .table__column:nth-child(2n){border-left:3px solid #e7e7e7;border-right:3px solid #e7e7e7}.table_white{border-color:#fff;color:#fff}.table_white .table__title-row{background-color:#fff;color:#dd1781}.table_white .table__row:nth-child(2n+1){background-color:rgba(255,255,255,.5)}.table_white .table__column:nth-child(2n){border-left:3px solid #fff;border-right:3px solid #fff}.table_white .table__row{background-color:rgba(255,255,255,.2)}.table__title-column{text-align:left;font-weight:400;padding:30px 15px}.table__column{padding:25px 15px}.pagination{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center}.pagination__arrow{width:36px;height:36px;padding:10px 14px;background-color:#3b91e6;fill:#fff;border-radius:18px;cursor:pointer;opacity:1}.pagination__arrow_disabled{opacity:.3}.numbers{display:-webkit-box;display:-ms-flexbox;display:flex}.numbers__item{display:none;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;color:#3b91e6;margin:0;width:50px;height:50px;cursor:pointer}.numbers__item_stub{display:-webkit-box;display:-ms-flexbox;display:flex}.numbers__item_stub .numbers__number{visibility:hidden}.numbers__item_active{border-radius:100%;background-color:#e6eff8;position:relative;top:-3px}.numbers__item_active .numbers__dots{display:none}.numbers__dots{line-height:0;height:10px}.insta .instaBlock{text-align:center}.insta .instaInner{display:-webkit-box;display:-ms-flexbox;display:flex}.insta__title{height:75px}.insta__item img{width:210px}.footer{background-color:#343037;height:125px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.footerInner{display:grid;grid-template-columns:1fr 1fr;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.copyright{color:#fff;font-size:15px}.copyright__company{margin:0 0 5px}.copyright__text{margin:0}.social{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.social__text{font-size:17px;color:#fff}.socialIcons__icon{width:35px;height:35px}.box_col-2{display:grid;grid-template-columns:1fr 1fr;grid-column-gap:30px}.box_gray{background-color:#f3f3f3}.bg-box{background:url(resources/images/box-bg.jpg) no-repeat;background-size:cover;background-position-x:right}.mini-box{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-line-pack:center;align-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-wrap:wrap;flex-wrap:wrap}.mini-box_gray{background-color:#f3f3f3}.mini-box_blue{background-color:#e6eef8}.mini-box_pink{background-color:#f5e0e9}.mini-box_center{margin:auto}.mini-box_big{width:390px;height:300px}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */.slider-box{max-width:1200px;margin:0 auto;padding-left:10px;padding-right:10px}@media screen and (max-width:768px){.slider-box{padding-left:15px;padding-right:15px}}@media screen and (max-width:320px){.slider-box{padding-left:15px;padding-right:15px}}.slider-row{display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap;margin-left:-10px;margin-right:-10px;width:calc(83.33333% - 20px);margin-left:calc(8.33333% + 10px)}.container_slider-container{position:relative}.slider__item{height:400px}.slider-box__arrow{width:36px;height:36px;padding:10px 14px;background-color:#3b91e6;fill:#fff;border-radius:18px;position:absolute;top:50%;cursor:pointer;opacity:1}.slider-box__arrow_next{right:0;-webkit-transform:translate(200%,-100%);transform:translate(200%,-100%)}.slider-box__arrow_prev{left:0;-webkit-transform:translate(-200%,-100%);transform:translate(-200%,-100%)}.slider-box__arrow.slick-disabled{opacity:.3}.slider-box__dots{list-style-type:none;padding:0;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;cursor:pointer}.slider-box__dots li{background-color:#3b91e6;width:12px;height:12px;border-radius:6px;margin:0 10px;opacity:.3}.slider-box__dots li.slick-active{opacity:1}.slider-box__dots button{display:none}/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0;display:-webkit-box;display:-ms-flexbox;display:flex}details,main{display:block}h1{font-size:2em}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0;overflow:visible}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}*{-webkit-box-sizing:border-box;box-sizing:border-box}html{color:#343037;font-family:'Open Sans',sans-serif;font-size:17px}h1,h2,h3,h4,h5,h6{margin:0}header.header{height:50px}aside.aside{width:250px}.content{width:calc(100% - 250px)}.h1{font-size:55px;text-transform:uppercase;font-weight:800}.h2{font-size:42px;font-weight:800}.h3{font-size:36px;font-weight:700}.h3_white{color:#fff}.h4{font-size:28px}.h5{font-size:22px}.h5_white{color:#fff}.h6{font-size:17px}.textCenter{text-align:center}.white{color:#fff}.accent{color:#dd1781}.semiBold{font-weight:600}.bold{font-weight:700}.extraBold{font-weight:800}.upper{text-transform:uppercase}.textSize46{font-size:46px}.textSize22{font-size:22px}.textSize14{font-size:14px}.textSize13{font-size:13px}.text{line-height:24px}.text_opacity5{opacity:.5}.mx10{margin-left:10px;margin-right:10px}.mx20{margin-left:20px;margin-right:20px}.mx30{margin-left:30px;margin-right:30px}.my30{margin-top:30px;margin-bottom:30px}.my40{margin-top:40px;margin-bottom:40px}.my50{margin-top:50px;margin-bottom:50px}.my80{margin-top:80px;margin-bottom:80px}.mr30{margin-right:30px}.mr50{margin-right:50px}.mt10{margin-top:10px}.mt20{margin-top:20px}.mt30{margin-top:30px}.mt60{margin-top:60px}.mb0{margin-bottom:0}.mb10{margin-bottom:10px}.mb15{margin-bottom:15px}.mb20{margin-bottom:20px}.mb30{margin-bottom:30px}.mb35{margin-bottom:35px}.mb40{margin-bottom:40px}.mb50{margin-bottom:50px}.mb55{margin-bottom:55px}.mb75{margin-bottom:75px}.mb90{margin-bottom:90px}.p60{padding:60px}.px20{padding-left:20px;padding-right:20px}.px30{padding-left:30px;padding-right:30px}.px50{padding-left:50px;padding-right:50px}.py10{padding-top:10px;padding-bottom:10px}.py20{padding-top:20px;padding-bottom:20px}.py30{padding-top:30px;padding-bottom:30px}.py35{padding-top:35px;padding-bottom:35px}.py60{padding-top:60px;padding-bottom:60px}.py80{padding-top:80px;padding-bottom:80px}.pt80{padding-top:80px}.pb120{padding-bottom:120px}.pl20{padding-left:20px}.cityes{color:#fff;fill:#fff;background-color:#343037}.cityes_w250{width:250px}.cityes_height50{height:50px}.item{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;cursor:pointer;height:50px;background-color:#343037;position:relative}.item_flex-end{-webkit-box-pack:end;-ms-flex-pack:end;justify-content:flex-end}.item_offset{position:relative;left:230px;top:-50px}.item .item__city-name_uppercase{text-transform:uppercase}.item span{font-weight:600}.item .item__arrow{width:10px;height:10px}.item .item__arrow_align-right{position:absolute;right:20px}.item .item__icon-phone{width:16px;height:16px}.item:not(.active){display:none}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL25vZGVfbW9kdWxlcy9ub2RlLW5vcm1hbGl6ZS1zY3NzL19ub3JtYWxpemUuc2NzcyIsIi4uL25vZGVfbW9kdWxlcy9zbGljay1jYXJvdXNlbC9zbGljay9zbGljay5jc3MiLCJtYWluLnNjc3MiLCJibG9ja3MvYXNpZGUvYXNpZGUuc2NzcyIsImJsb2Nrcy9oZWFkZXIvaGVhZGVyLnNjc3MiLCJzbWFydC1ncmlkLnNjc3MiLCJibG9ja3MvbmF2aWdhdGlvbi9uYXZpZ2F0aW9uLnNjc3MiLCJwYWdlcy9ibG9nL2Jsb2cuc2NzcyIsInBhZ2VzL2Jsb2cvc2xpZGVyLWRlc2lnbi5zY3NzIiwiYWxsLmNzcyIsImJsb2Nrcy9oZWFkZXIvY2l0eWVzL2NpdHllcy5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJpQkFBQSw0RUNDQSxjQUVJLFNBQVUsU0FFVixRQUFTLE1BQ1QsV0FBWSxXQUVaLG9CQUFxQixLQUNsQixpQkFBa0IsS0FDakIsZ0JBQWlCLEtBQ2IsWUFBYSxLQUVyQixzQkFBdUIsS0FDdkIsbUJBQW9CLEtBQ3BCLGlCQUFrQixNQUNkLGFBQWMsTUFDbEIsNEJBQTZCLFlBR2pDLFlBRUksU0FBVSxTQUVWLFFBQVMsTUFDVCxTQUFVLE9BRVYsT0FBUSxFQUNSLFFBQVMsRUFFYixrQkFFSSxRQUFTLEVBRWIscUJBRUksT0FBUSxRQUNSLE9BQVEsS0FJWiwwQkFEQSwyQkFHSSxrQkFBbUIsbUJBQ2hCLGVBQWdCLG1CQUNmLGNBQWUsbUJBQ2QsYUFBYyxtQkFDWCxVQUFXLG1CQUd2QixhQUVJLFNBQVUsU0FDVixJQUFLLEVBQ0wsS0FBTSxFQUVOLFFBQVMsTUFDVCxZQUFhLEtBQ2IsYUFBYyxLQUdsQixtQkFEQSxvQkFHSSxRQUFTLE1BRVQsUUFBUyxHQUViLG1CQUVJLE1BQU8sS0FFWCw0QkFFSSxXQUFZLE9BR2hCLGFBRUksUUFBUyxLQUNULE1BQU8sS0FFUCxPQUFRLEtBQ1IsV0FBWSxJQUVoQix1QkFFSSxNQUFPLE1BRVgsaUJBRUksUUFB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QUFBLEtBS0YsTUFDRSxXQUFBLEtBQ0EsY0FBQSxLQUdGLE1BQ0UsV0FBQSxLQUNBLGNBQUEsS0FHRixNQUNFLFdBQUEsS0FDQSxjQUFBLEtBR0YsTUFDRSxXQUFBLEtBQ0EsY0FBQSxLQUtGLE1BQ0UsYUFBQSxLQUdGLE1BQ0UsYUFBQSxLQUtGLE1BQ0UsV0FBQSxLQUdGLE1BQ0UsV0FBQSxLQUdGLE1BQ0UsV0FBQSxLQUdGLE1BQ0UsV0FBQSxLQUtGLEtBQ0UsY0FBQSxFQUdGLE1BQ0UsY0FBQSxLQUdGLE1BQ0UsY0FBQSxLQUdGLE1BQ0UsY0FBQSxLQUdGLE1BQ0UsY0FBQSxLQUdGLE1BQ0UsY0FBQSxLQUdGLE1BQ0UsY0FBQSxLQUdGLE1BQ0UsY0FBQSxLQUdGLE1BQ0UsY0FBQSxLQUdGLE1BQ0UsY0FBQSxLQUdGLE1BQ0UsY0FBQSxLQUtGLEtBQ0UsUUFBQSxLQUtGLE1BQ0UsYUFBQSxLQUNBLGNBQUEsS0FHRixNQUNFLGFBQUEsS0FDQSxjQUFBLEtBR0YsTUFDRSxhQUFBLEtBQ0EsY0FBQSxLQUtGLE1BQ0UsWUFBQSxLQUNBLGVBQUEsS0FHRixNQUNFLFlBQUEsS0FDQSxlQUFBLEtBR0YsTUFDRSxZQUFBLEtBQ0EsZUFBQSxLQUdGLE1BQ0UsWUFBQSxLQUNBLGVBQUEsS0FHRixNQUNFLFlBQUEsS0FDQSxlQUFBLEtBR0YsTUFDRSxZQUFBLEtBQ0EsZUFBQSxLQUtGLE1BQ0UsWUFBQSxLQUtGLE9BQ0UsZUFBQSxNQUtGLE1BQ0UsYUFBQSxLUS9WRixRQUNFLE1BQUEsS0FDQSxLQUFBLEtBQ0EsaUJBQUEsUUFFQSxhQUNFLE1BQUEsTUFHRixpQkFDRSxPQUFBLEtBSUosTUFDRSxRQUFBLFlBQUEsUUFBQSxZQUFBLFFBQUEsS0FDQSxrQkFBQSxPQUFBLGVBQUEsT0FBQSxZQUFBLE9BQ0EsT0FBQSxRQUNBLE9BQUEsS0FFQSxpQkFBQSxRQUNBLFNBQUEsU0FFQSxlQUNFLGlCQUFBLElBQUEsY0FBQSxJQUFBLGdCQUFBLFNBR0YsYUFDRSxTQUFBLFNBQ0EsS0FBQSxNQUNBLElBQUEsTUFoQkosaUNBc0JNLGVBQUEsVUF0Qk4sV0EyQkksWUFBQSxJQTNCSixtQkErQkksTUFBQSxLQUNBLE9BQUEsS0FoQ0osK0JBbUNNLFNBQUEsU0FDQSxNQUFBLEtBcENOLHdCQXlDSSxNQUFBLEtBQ0EsT0FBQSxLQUlKLG1CQUNFLFFBQUEiLCJmaWxlIjoiYWxsLmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qISBub3JtYWxpemUuY3NzIHY4LjAuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cblxuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXG4gKi9cblxuIGh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDIgKi9cbn1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmJvZHkge1xuICBtYXJnaW46IDA7XG59XG5cbi8qKlxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXG4gKi9cblxubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cblxuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDtcbn1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cblxuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xuICBoZWlnaHQ6IDA7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xufVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cblxuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xufVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5cbmIsIHN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5jb2RlLCBrYmQsIHNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlO1xufVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5cbnN1Yiwgc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxuICovXG5cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLCBpbnB1dCwgb3B0Z3JvdXAsIHNlbGVjdCwgdGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDsgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7ICAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXG4gIG1hcmdpbjogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuXG5idXR0b24sIGlucHV0IHsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuXG5idXR0b24sIHNlbGVjdCB7IC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuXG5idXR0b24sIFt0eXBlPVwiYnV0dG9uXCJdLCBbdHlwZT1cInJlc2V0XCJdLCBbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLCBbdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lciwgW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lciwgW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG59XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5cbmJ1dHRvbjotbW96LWZvY3VzcmluZywgW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsIFt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsIFt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0O1xufVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTsgIC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXG4gIHBhZGRpbmc6IDA7IC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDsgLyogMSAqL1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cblxucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cbiAqL1xuXG5bdHlwZT1cImNoZWNrYm94XCJdLCBbdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdIHtcbiAgJjo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbiwgJjo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICB9XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG4gICY6Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcbiAgfVxufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxuICovXG5cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtO1xufVxuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cbiAqL1xuXG50ZW1wbGF0ZSwgW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxuICovXG4iLCIvKiBTbGlkZXIgKi9cbi5zbGljay1zbGlkZXJcbntcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuXG4gICAgLXdlYmtpdC11c2VyLXNlbGVjdDogbm9uZTtcbiAgICAgICAtbW96LXVzZXItc2VsZWN0OiBub25lO1xuICAgICAgICAtbXMtdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgICAgICAgICB1c2VyLXNlbGVjdDogbm9uZTtcblxuICAgIC13ZWJraXQtdG91Y2gtY2FsbG91dDogbm9uZTtcbiAgICAta2h0bWwtdXNlci1zZWxlY3Q6IG5vbmU7XG4gICAgLW1zLXRvdWNoLWFjdGlvbjogcGFuLXk7XG4gICAgICAgIHRvdWNoLWFjdGlvbjogcGFuLXk7XG4gICAgLXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcbn1cblxuLnNsaWNrLWxpc3RcbntcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG5cbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xuXG4gICAgbWFyZ2luOiAwO1xuICAgIHBhZGRpbmc6IDA7XG59XG4uc2xpY2stbGlzdDpmb2N1c1xue1xuICAgIG91dGxpbmU6IG5vbmU7XG59XG4uc2xpY2stbGlzdC5kcmFnZ2luZ1xue1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBjdXJzb3I6IGhhbmQ7XG59XG5cbi5zbGljay1zbGlkZXIgLnNsaWNrLXRyYWNrLFxuLnNsaWNrLXNsaWRlciAuc2xpY2stbGlzdFxue1xuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgICAgICAtbW96LXRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG4gICAgICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApO1xuICAgICAgICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTtcbiAgICAgICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgMCwgMCk7XG59XG5cbi5zbGljay10cmFja1xue1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcblxuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICAgIG1hcmdpbi1yaWdodDogYXV0bztcbn1cbi5zbGljay10cmFjazpiZWZvcmUsXG4uc2xpY2stdHJhY2s6YWZ0ZXJcbntcbiAgICBkaXNwbGF5OiB0YWJsZTtcblxuICAgIGNvbnRlbnQ6ICcnO1xufVxuLnNsaWNrLXRyYWNrOmFmdGVyXG57XG4gICAgY2xlYXI6IGJvdGg7XG59XG4uc2xpY2stbG9hZGluZyAuc2xpY2stdHJhY2tcbntcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG59XG5cbi5zbGljay1zbGlkZVxue1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgZmxvYXQ6IGxlZnQ7XG5cbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgbWluLWhlaWdodDogMXB4O1xufVxuW2Rpcj0ncnRsJ10gLnNsaWNrLXNsaWRlXG57XG4gICAgZmxvYXQ6IHJpZ2h0O1xufVxuLnNsaWNrLXNsaWRlIGltZ1xue1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuLnNsaWNrLXNsaWRlLnNsaWNrLWxvYWRpbmcgaW1nXG57XG4gICAgZGlzcGxheTogbm9uZTtcbn1cbi5zbGljay1zbGlkZS5kcmFnZ2luZyBpbWdcbntcbiAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcbn1cbi5zbGljay1pbml0aWFsaXplZCAuc2xpY2stc2xpZGVcbntcbiAgICBkaXNwbGF5OiBibG9jaztcbn1cbi5zbGljay1sb2FkaW5nIC5zbGljay1zbGlkZVxue1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbn1cbi5zbGljay12ZXJ0aWNhbCAuc2xpY2stc2xpZGVcbntcbiAgICBkaXNwbGF5OiBibG9jaztcblxuICAgIGhlaWdodDogYXV0bztcblxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xufVxuLnNsaWNrLWFycm93LnNsaWNrLWhpZGRlbiB7XG4gICAgZGlzcGxheTogbm9uZTtcbn1cbiIsIkBpbXBvcnQgJ25vcm1hbGl6ZSc7XHJcbkBpbXBvcnQgJ3NtYXJ0LWdyaWQnO1xyXG5AaW1wb3J0ICcuLi9ub2RlX21vZHVsZXMvc2xpY2stY2Fyb3VzZWwvc2xpY2svc2xpY2suY3NzJztcclxuXHJcbiRmaXJzdDogIzM0MzAzNztcclxuJHdoaXRlOiAjZmZmO1xyXG4kYWNjZW50OiAjREQxNzgxO1xyXG4kZm91cnRoOiAjM0I5MUU2O1xyXG4kdmlzaXRlZExpbms6ICM3OGI1ZjA7XHJcbiRmaWZ0aDogI0U5QzdENDsgXHJcblxyXG4kZ3JhZGllbnQxOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsICMzQjkxRTYgMCUsICM3QjVGQzYgNzAlLCB0cmFuc3BhcmVudCAxMDAlKTtcclxuJGdyYWRpZW50MjogbGluZWFyLWdyYWRpZW50KDkwZGVnLCAjRTlDN0Q0IDAlLCB0cmFuc3BhcmVudCAxMDAlKTtcclxuJGdyYWRpZW50MzogbGluZWFyLWdyYWRpZW50KDkwZGVnLCAjQjU0NDZFIDAlLCAjOUQ0NEI0IDEwMCUpO1xyXG5cclxuKntcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG59XHJcblxyXG5odG1se1xyXG4gIGNvbG9yOiAkZmlyc3Q7XHJcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnLCBzYW5zLXNlcmlmO1xyXG4gIGZvbnQtc2l6ZTogMTdweDtcclxufVxyXG5cclxuaDEsaDIsaDMsaDQsaDUsaDZ7XHJcbiAgbWFyZ2luOiAwO1xyXG59XHJcblxyXG4vKiBMYXlvdXQgKi9cclxuXHJcbmJvZHl7XHJcbiAgZGlzcGxheTogZmxleDtcclxufVxyXG5cclxuaGVhZGVyLmhlYWRlcntcclxuICBoZWlnaHQ6IDUwcHg7XHJcbn1cclxuXHJcbmFzaWRlLmFzaWRle1xyXG4gIHdpZHRoOiAyNTBweDtcclxufVxyXG5cclxuLmNvbnRlbnR7XHJcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDI1MHB4KTtcclxufVxyXG5cclxuLmgxIHtcclxuICBmb250LXNpemU6IDU1cHg7XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICBmb250LXdlaWdodDogODAwO1xyXG59XHJcblxyXG4uaDIge1xyXG4gIGZvbnQtc2l6ZTogNDJweDtcclxuICBmb250LXdlaWdodDogODAwO1xyXG59XHJcbiBcclxuLmgzIHtcclxuICBmb250LXNpemU6IDM2cHg7XHJcbiAgZm9udC13ZWlnaHQ6IDcwMDtcclxuICBcclxuICAmX3doaXRle1xyXG4gICAgY29sb3I6ICR3aGl0ZTtcclxuICB9XHJcbn1cclxuXHJcbi5oNCB7XHJcbiAgZm9udC1zaXplOiAyOHB4O1xyXG59XHJcblxyXG4uaDUge1xyXG4gIGZvbnQtc2l6ZTogMjJweDtcclxuXHJcbiAgJl93aGl0ZSB7XHJcbiAgICBjb2xvcjogJHdoaXRlO1xyXG4gIH1cclxufVxyXG5cclxuLmg2IHtcclxuICBmb250LXNpemU6IDE3cHg7XHJcbn1cclxuXHJcbi50ZXh0Q2VudGVye1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLndoaXRle1xyXG4gIGNvbG9yOiAjZmZmO1xyXG59XHJcblxyXG4uYWNjZW50e1xyXG4gIGNvbG9yOiAkYWNjZW50O1xyXG59XHJcblxyXG4uc2VtaUJvbGR7XHJcbiAgZm9udC13ZWlnaHQ6IDYwMDtcclxufVxyXG5cclxuLmJvbGR7XHJcbiAgZm9udC13ZWlnaHQ6IDcwMDtcclxufVxyXG5cclxuLmV4dHJhQm9sZHtcclxuICBmb250LXdlaWdodDogODAwO1xyXG59XHJcblxyXG4udXBwZXJ7XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxufVxyXG5cclxuLnRleHRTaXplNDZ7XHJcbiAgZm9udC1zaXplOiA0NnB4O1xyXG59XHJcbi50ZXh0U2l6ZTIye1xyXG4gIGZvbnQtc2l6ZTogMjJweDtcclxufVxyXG4udGV4dFNpemUxNHtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbn1cclxuLnRleHRTaXplMTN7XHJcbiAgZm9udC1zaXplOiAxM3B4O1xyXG59XHJcblxyXG4udGV4dCB7XHJcbiAgbGluZS1oZWlnaHQ6IDI0cHg7XHJcblxyXG4gICZfb3BhY2l0eTUge1xyXG4gICAgb3BhY2l0eTogLjU7XHJcbiAgfVxyXG59XHJcblxyXG4vKiDQqNGA0LjRhNGC0YsgKi9cclxuXHJcbkBmb250LWZhY2Uge1xyXG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcclxuICBzcmM6IHVybCgnZm9udHMvT3BlblNhbnMud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXHJcbiAgICAgIHVybCgnZm9udHMvT3BlblNhbnMud29mZicpIGZvcm1hdCgnd29mZicpLFxyXG4gIHVybCgnZm9udHMvT3BlblNhbnMudHRmJykgZm9ybWF0KCd0dGYnKTtcclxuICBmb250LXdlaWdodDogNDAwO1xyXG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcclxufVxyXG5cclxuQGZvbnQtZmFjZSB7XHJcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xyXG4gIHNyYzogdXJsKCdmb250cy9PcGVuU2Fucy1TZW1pYm9sZC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcclxuICAgICAgdXJsKCdmb250cy9PcGVuU2Fucy1TZW1pYm9sZC53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXHJcbiAgdXJsKCdmb250cy9PcGVuU2Fucy1TZW1pYm9sZC50dGYnKSBmb3JtYXQoJ3R0ZicpO1xyXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XHJcbiAgc3JjOiB1cmwoJ2ZvbnRzL09wZW5TYW5zLUJvbGQud29mZjInKSBmb3JtYXQoJ3dvZmYyJyksXHJcbiAgICAgIHVybCgnZm9udHMvT3BlblNhbnMtQm9sZC53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXHJcbiAgICAgIHVybCgnZm9udHMvT3BlblNhbnMtQm9sZC50dGYnKSBmb3JtYXQoJ3R0ZicpO1xyXG4gIGZvbnQtd2VpZ2h0OiA3MDA7XHJcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xyXG59XHJcblxyXG5AZm9udC1mYWNlIHtcclxuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XHJcbiAgc3JjOiB1cmwoJ2ZvbnRzL09wZW5TYW5zLUV4dHJhYm9sZC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcclxuICB1cmwoJ2ZvbnRzL09wZW5TYW5zLUV4dHJhYm9sZC53b2ZmJykgZm9ybWF0KCd3b2ZmJyksXHJcbiAgICAgIHVybCgnZm9udHMvT3BlblNhbnMtRXh0cmFib2xkLnR0ZicpIGZvcm1hdCgndHRmJyk7XHJcbiAgZm9udC13ZWlnaHQ6IDgwMDtcclxuICBmb250LXN0eWxlOiBub3JtYWw7XHJcbn1cclxuXHJcbi8qIE1hcmdpbiBYICovXHJcblxyXG4ubXgxMCB7XHJcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xyXG59XHJcblxyXG4ubXgyMCB7XHJcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiAyMHB4O1xyXG59XHJcblxyXG4ubXgzMCB7XHJcbiAgbWFyZ2luLWxlZnQ6IDMwcHg7XHJcbiAgbWFyZ2luLXJpZ2h0OiAzMHB4O1xyXG59XHJcblxyXG4vKiBNYXJnaW4gWSAqL1xyXG5cclxuLm15MzB7XHJcbiAgbWFyZ2luLXRvcDogMzBweDtcclxuICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG59XHJcblxyXG4ubXk0MHtcclxuICBtYXJnaW4tdG9wOiA0MHB4O1xyXG4gIG1hcmdpbi1ib3R0b206IDQwcHg7XHJcbn1cclxuXHJcbi5teTUwe1xyXG4gIG1hcmdpbi10b3A6IDUwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogNTBweDtcclxufVxyXG5cclxuLm15ODB7XHJcbiAgbWFyZ2luLXRvcDogODBweDtcclxuICBtYXJnaW4tYm90dG9tOiA4MHB4O1xyXG59XHJcblxyXG4vKiBNYXJnaW4gUmlnaHQgKi9cclxuXHJcbi5tcjMwe1xyXG4gIG1hcmdpbi1yaWdodDogMzBweDtcclxufVxyXG5cclxuLm1yNTB7XHJcbiAgbWFyZ2luLXJpZ2h0OiA1MHB4O1xyXG59XHJcblxyXG4vKiBNYXJnaW4gVG9wICovXHJcblxyXG4ubXQxMCB7XHJcbiAgbWFyZ2luLXRvcDogMTBweDtcclxufVxyXG5cclxuLm10MjAge1xyXG4gIG1hcmdpbi10b3A6IDIwcHg7XHJcbn1cclxuXHJcbi5tdDMwIHtcclxuICBtYXJnaW4tdG9wOiAzMHB4O1xyXG59XHJcblxyXG4ubXQ2MCB7XHJcbiAgbWFyZ2luLXRvcDogNjBweDtcclxufVxyXG5cclxuLyogTWFyZ2luIEJvdHRvbSAqL1xyXG5cclxuLm1iMHtcclxuICBtYXJnaW4tYm90dG9tOiAwcHg7XHJcbn1cclxuXHJcbi5tYjEwe1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbn1cclxuXHJcbi5tYjE1e1xyXG4gIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbn1cclxuXHJcbi5tYjIwe1xyXG4gIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbn1cclxuXHJcbi5tYjMwe1xyXG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbn1cclxuXHJcbi5tYjM1e1xyXG4gIG1hcmdpbi1ib3R0b206IDM1cHg7XHJcbn1cclxuXHJcbi5tYjQwe1xyXG4gIG1hcmdpbi1ib3R0b206IDQwcHg7XHJcbn1cclxuXHJcbi5tYjUwIHtcclxuICBtYXJnaW4tYm90dG9tOiA1MHB4O1xyXG59XHJcblxyXG4ubWI1NXtcclxuICBtYXJnaW4tYm90dG9tOiA1NXB4O1xyXG59XHJcblxyXG4ubWI3NXtcclxuICBtYXJnaW4tYm90dG9tOiA3NXB4O1xyXG59XHJcblxyXG4ubWI5MHtcclxuICBtYXJnaW4tYm90dG9tOiA5MHB4O1xyXG59XHJcblxyXG4vKiBQYWRkaW5nICovXHJcblxyXG4ucDYwe1xyXG4gIHBhZGRpbmc6IDYwcHg7XHJcbn1cclxuXHJcbi8qIFBhZGRpbmcgWCAqL1xyXG5cclxuLnB4MjAge1xyXG4gIHBhZGRpbmctbGVmdDogMjBweDtcclxuICBwYWRkaW5nLXJpZ2h0OiAyMHB4O1xyXG59XHJcblxyXG4ucHgzMCB7XHJcbiAgcGFkZGluZy1sZWZ0OiAzMHB4O1xyXG4gIHBhZGRpbmctcmlnaHQ6IDMwcHg7XHJcbn1cclxuXHJcbi5weDUwIHtcclxuICBwYWRkaW5nLWxlZnQ6IDUwcHg7XHJcbiAgcGFkZGluZy1yaWdodDogNTBweDtcclxufVxyXG5cclxuLyogUGFkZGluZyBZICovXHJcblxyXG4ucHkxMCB7XHJcbiAgcGFkZGluZy10b3A6IDEwcHg7XHJcbiAgcGFkZGluZy1ib3R0b206IDEwcHg7XHJcbn1cclxuXHJcbi5weTIwIHtcclxuICBwYWRkaW5nLXRvcDogMjBweDtcclxuICBwYWRkaW5nLWJvdHRvbTogMjBweDtcclxufVxyXG5cclxuLnB5MzAge1xyXG4gIHBhZGRpbmctdG9wOiAzMHB4O1xyXG4gIHBhZGRpbmctYm90dG9tOiAzMHB4O1xyXG59XHJcblxyXG4ucHkzNSB7XHJcbiAgcGFkZGluZy10b3A6IDM1cHg7XHJcbiAgcGFkZGluZy1ib3R0b206IDM1cHg7XHJcbn1cclxuXHJcbi5weTYwIHtcclxuICBwYWRkaW5nLXRvcDogNjBweDtcclxuICBwYWRkaW5nLWJvdHRvbTogNjBweDtcclxufVxyXG5cclxuLnB5ODB7XHJcbiAgcGFkZGluZy10b3A6IDgwcHg7XHJcbiAgcGFkZGluZy1ib3R0b206IDgwcHg7XHJcbn1cclxuXHJcbi8qIFBhZGRpbmcgVG9wICovXHJcblxyXG4ucHQ4MHtcclxuICBwYWRkaW5nLXRvcDogODBweDtcclxufVxyXG5cclxuLyogUGFkZGluZyBCb3R0b20gKi9cclxuXHJcbi5wYjEyMHtcclxuICBwYWRkaW5nLWJvdHRvbTogMTIwcHg7XHJcbn1cclxuXHJcbi8qIFBhZGRpbmcgTGVmdCAqL1xyXG5cclxuLnBsMjAge1xyXG4gIHBhZGRpbmctbGVmdDogMjBweDtcclxufSIsIkBpbXBvcnQgJy4uLy4uL21haW4nO1xyXG5cclxuLmFzaWRlIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkZmlyc3Q7XHJcblxyXG4gIC5sb2dvLWNvbnRhaW5lciB7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDE0cHg7XHJcbiAgfVxyXG59XHJcblxyXG4ubG9nbyB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGZvbnQtc2l6ZTogMjVweDtcclxuXHJcbiAgLmxvZ29fX2ljb24ge1xyXG4gICAgd2lkdGg6IDQwcHg7XHJcbiAgICBoZWlnaHQ6IDQwcHg7XHJcbiAgICBmaWxsOiAkd2hpdGU7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgfVxyXG5cclxuICAubG9nb19fdGV4dCB7XHJcbiAgICBjb2xvcjogJHdoaXRlO1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcblxyXG4gICAgc3BhbiB7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4ubGluayB7XHJcbiAgY29sb3I6ICR3aGl0ZTtcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHBhZGRpbmc6IDIwcHggMjVweCAyMHB4IDIwcHg7XHJcblxyXG4gICY6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGFjY2VudDtcclxuICB9XHJcblxyXG4gICZfX2ljb24ge1xyXG4gICAgd2lkdGg6IDIwcHg7XHJcbiAgICBoZWlnaHQ6IDIwcHg7XHJcbiAgICBmaWxsOiAkd2hpdGU7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbiAgfVxyXG5cclxuICAmX19pY29uLWFycm93IHtcclxuICAgIHdpZHRoOiAxMHB4O1xyXG4gICAgaGVpZ2h0OiAxMHB4O1xyXG4gICAgZmlsbDogJHdoaXRlO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgcmlnaHQ6IDIwcHg7XHJcbiAgfVxyXG5cclxuICAmX190ZXh0IHtcclxuICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICB9XHJcbn1cclxuXHJcbi5kZWZhdWx0LWJ1dHRvbiB7XHJcbiAgcGFkZGluZzogMjBweCAyNXB4O1xyXG4gIGNvbG9yOiAkd2hpdGU7XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG5cclxuICAmX19pY29uLWJnIHtcclxuICAgIHdpZHRoOiAyNXB4O1xyXG4gICAgaGVpZ2h0OiAyNXB4O1xyXG5cclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRhY2NlbnQ7XHJcbiAgICBwYWRkaW5nOiA1cHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMnB4O1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIG1hcmdpbi1yaWdodDogMjBweDtcclxuICB9XHJcblxyXG4gICZfX2ljb24ge1xyXG4gICAgd2lkdGg6IDEwcHg7XHJcbiAgICBoZWlnaHQ6IDEwcHg7XHJcbiAgICBmaWxsOiAkd2hpdGU7XHJcbiAgfVxyXG59XHJcblxyXG4ubW9kYWwtYmxvY2tfX2N1cnRhaW4ge1xyXG4gIHdpZHRoOiAxMDB2dztcclxuICBoZWlnaHQ6IDEwMHZoO1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICB0b3A6IDA7IGxlZnQ6IDA7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSg1MiwgNDgsIDU1LCAuNyk7XHJcbiAgZGlzcGxheTogbm9uZTtcclxuICB6LWluZGV4OiAxO1xyXG59XHJcblxyXG4ubW9kYWwge1xyXG4gIHdpZHRoOiA3NjhweDtcclxuICBoZWlnaHQ6IGZpdC1jb250ZW50O1xyXG4gIHRvcDogMDsgYm90dG9tOiAwO1xyXG4gIGxlZnQ6IDA7IHJpZ2h0OiAwO1xyXG4gIHBvc2l0aW9uOiBmaXhlZDtcclxuICBwYWRkaW5nOiAxMDBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjNmM2YzO1xyXG4gIG1hcmdpbjogYXV0bztcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgZGlzcGxheTogbm9uZTtcclxuICB6LWluZGV4OiAyO1xyXG59XHJcblxyXG4ubW9kYWwtaW5uZXJ7XHJcbiAgd2lkdGg6IDI4MHB4O1xyXG4gIG1hcmdpbjogYXV0bztcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5tb2RhbF9fY2xvc2Uge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgdG9wOiA1MHB4O1xyXG4gIHJpZ2h0OiA2NXB4O1xyXG4gIHdpZHRoOiAyNXB4O1xyXG4gIGhlaWdodDogMjVweDtcclxuICBmaWxsOiAkZmlyc3Q7XHJcbiAgei1pbmRleDogMztcclxufVxyXG5cclxuLm1vZGFsX19oZWFkZXIge1xyXG4gIGZvbnQtc2l6ZTogNDZweDtcclxuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gIGZvbnQtd2VpZ2h0OiA4MDA7XHJcbn1cclxuXHJcbi5tb2RhbF9faGludHtcclxuICBjb2xvcjogIzliOWI5YjtcclxuICBmb250LXNpemU6IDE0cHg7XHJcblxyXG4gICZfYWxpZ24tbGVmdHtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgfVxyXG59XHJcblxyXG4ubW9kYWxfX2FjY2VudC10ZXh0e1xyXG4gIGNvbG9yOiAkYWNjZW50O1xyXG59XHJcblxyXG4uaW5wdXQge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG5cclxuICAuaW5wdXRfX2ZpZWxkIHtcclxuICAgIHBhZGRpbmc6IDEwcHggMTVweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNlNmU2ZTY7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuXHJcbiAgICAmOmZvY3VzIHtcclxuICAgICAgb3V0bGluZTogMDtcclxuICAgICAgYm9yZGVyLWNvbG9yOiAjOWI5YjliO1xyXG4gICAgfVxyXG5cclxuICAgICY6Zm9jdXMrLmlucHV0X19pY29uIHtcclxuICAgICAgZmlsbDogIzliOWI5YjtcclxuICAgICAgb3BhY2l0eTogMTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5pbnB1dF9faWNvbiB7XHJcbiAgICB3aWR0aDogMTVweDtcclxuICAgIGhlaWdodDogMjBweDtcclxuICAgIGZpbGw6ICNlNmU2ZTY7XHJcbiAgICBvcGFjaXR5OiAuNTtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHJpZ2h0OiAyMHB4O1xyXG4gICAgdG9wOiAxMXB4O1xyXG4gIH1cclxuXHJcbiAgJl9fZXJyb3J7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICBjb2xvcjogJGFjY2VudDtcclxuICAgIG1hcmdpbjogMTBweCAwO1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICB9XHJcbn1cclxuXHJcbi52aWRlby1ibG9ja19fY3VydGFpbntcclxuICB3aWR0aDogMTAwdnc7XHJcbiAgaGVpZ2h0OiAxMDB2aDtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgdG9wOiAwOyBsZWZ0OiAwO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNTIsIDQ4LCA1NSwgLjcpO1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbiAgei1pbmRleDogMTtcclxufVxyXG5cclxuLnZpZGVvLWJsb2NrX19mcmFtZXtcclxuICBkaXNwbGF5OiBub25lO1xyXG4gIG1hcmdpbjogYXV0bztcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiAwO1xyXG4gIGxlZnQ6IDA7XHJcbiAgcmlnaHQ6IDA7XHJcbiAgYm90dG9tOiAwO1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIHotaW5kZXg6IDI7XHJcbn1cclxuXHJcbi52aWRlb19fY2xvc2Uge1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgdG9wOiA1MHB4O1xyXG4gIHJpZ2h0OiA2NXB4O1xyXG4gIHdpZHRoOiAyNXB4O1xyXG4gIGhlaWdodDogMjVweDtcclxuICBmaWxsOiAkd2hpdGU7XHJcbiAgei1pbmRleDogMztcclxufSIsIkBpbXBvcnQgJy4uLy4uL21haW4nO1xyXG5cclxuLmhlYWRlcntcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkZmlyc3Q7XHJcbiAgaGVpZ2h0OiA1MHB4O1xyXG5cclxuICAmV3JhcHBlcntcclxuICAgIEBpbmNsdWRlIHdyYXBwZXIoKTtcclxuICB9XHJcblxyXG4gICZSb3d7XHJcbiAgICBAaW5jbHVkZSByb3ctZmxleCgpO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICB9XHJcbn0iLCIkY29sdW1uczogMTI7XG4kYXRvbTogKDEwMCUgLyAkY29sdW1ucyk7XG5cbiRicmVha19tZDogNzY4cHg7XG4kYnJlYWtfeHM6IDMyMHB4O1xuXG4kb2Zmc2V0OiAyMHB4O1xuJG9mZnNldF9tZDogJG9mZnNldDtcbiRvZmZzZXRfeHM6ICRvZmZzZXQ7XG5cbiRvZmZzZXRfb25lX3NpZGU6ICgkb2Zmc2V0IC8gMik7XG4kb2Zmc2V0X21kX29uZV9zaWRlOiAoJG9mZnNldF9tZCAvIDIpO1xuJG9mZnNldF94c19vbmVfc2lkZTogKCRvZmZzZXRfeHMgLyAyKTtcblxuJGZpZWxkczogMTBweDtcbiRmaWVsZHNfbWQ6IDE1cHg7XG4kZmllbGRzX3hzOiAxNXB4O1xuXG5AbWl4aW4gd3JhcHBlci1mdWxsKCl7XG4gICAgcGFkZGluZy1sZWZ0OiAkZmllbGRzO1xuICAgIHBhZGRpbmctcmlnaHQ6ICRmaWVsZHM7XG5cbiAgICBAaW5jbHVkZSBtZC1ibG9jaygpe1xuICAgICAgICBwYWRkaW5nLWxlZnQ6ICRmaWVsZHNfbWQ7XG4gICAgICAgIHBhZGRpbmctcmlnaHQ6ICRmaWVsZHNfbWQ7XG4gICAgfVxuXG4gICAgQGluY2x1ZGUgeHMtYmxvY2soKXtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAkZmllbGRzX3hzO1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAkZmllbGRzX3hzO1xuICAgIH1cbn1cblxuQG1peGluIHJvdy1vZmZzZXRzKCl7XG4gICAgbWFyZ2luLWxlZnQ6ICgkb2Zmc2V0X29uZV9zaWRlICogLTEpO1xuICAgIG1hcmdpbi1yaWdodDogKCRvZmZzZXRfb25lX3NpZGUgKiAtMSk7XG59XG5cbkBtaXhpbiBjb2wtb2Zmc2V0cygkdHlwZSl7XG4gICAgI3skdHlwZX0tbGVmdDogJG9mZnNldF9vbmVfc2lkZTtcbiAgICAjeyR0eXBlfS1yaWdodDogJG9mZnNldF9vbmVfc2lkZTtcbn1cblxuQG1peGluIHdyYXBwZXIoKXtcbiAgICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBAaW5jbHVkZSB3cmFwcGVyLWZ1bGwoKTtcbn1cblxuQG1peGluIHJvdy1mbGV4KCl7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgQGluY2x1ZGUgcm93LW9mZnNldHMoKTtcbn1cblxuQG1peGluIHJvdy1mbG9hdCgpe1xuICAgIEBpbmNsdWRlIHJvdy1vZmZzZXRzKCk7XG4gICAgQGluY2x1ZGUgY2xlYXJmaXgoKTtcbn1cblxuQG1peGluIHJvdy1pYigpe1xuICAgIEBpbmNsdWRlIHJvdy1vZmZzZXRzKCk7XG59XG5cbkBtaXhpbiBjb2woKXtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgICBAaW5jbHVkZSBjb2wtb2Zmc2V0cyhtYXJnaW4pO1xufVxuXG5AbWl4aW4gY29sLWZsb2F0KCl7XG4gICAgZmxvYXQ6IGxlZnQ7XG59XG5cbkBtaXhpbiBjb2wtaWIoKXtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgdmVydGljYWwtYWxpZ246IHRvcDtcbn1cblxuQG1peGluIGNvbC1wYWRkaW5nKCl7XG4gICAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICAgIEBpbmNsdWRlIGNvbC1vZmZzZXRzKHBhZGRpbmcpO1xufVxuXG5AbWl4aW4gc2l6ZSgkbil7XG4gICAgJHZhbDogMTAwJSAvICRjb2x1bW5zICogJG47XG4gICAgd2lkdGg6ICN7Y2FsYygjeyR2YWx9IC0gI3skb2Zmc2V0fSl9O1xufVxuXG5AbWl4aW4gc2l6ZS1tZCgkbil7XG4gICAgJHZhbDogMTAwJSAvICRjb2x1bW5zICogJG47XG4gICAgQGluY2x1ZGUgbWQod2lkdGgsICN7Y2FsYygjeyR2YWx9IC0gI3skb2Zmc2V0X21kfSl9KTtcbn1cblxuQG1peGluIHNpemUteHMoJG4pe1xuICAgICR2YWw6IDEwMCUgLyAkY29sdW1ucyAqICRuO1xuICAgIEBpbmNsdWRlIHhzKHdpZHRoLCAje2NhbGMoI3skdmFsfSAtICN7JG9mZnNldF94c30pfSk7XG59XG5cbkBtaXhpbiBzaGlmdCgkbil7XG4gICAgJHZhbDogMTAwJSAvICRjb2x1bW5zICogJG47XG4gICAgbWFyZ2luLWxlZnQ6ICN7Y2FsYygjeyR2YWx9ICsgI3skb2Zmc2V0X29uZV9zaWRlfSl9O1xuICAgIG1hcmdpbi1yaWdodDogI3tjYWxjKCN7JHZhbH0gKyAjeyRvZmZzZXRfb25lX3NpZGV9KX07XG59XG5cbkBtaXhpbiBzaGlmdC1sZWZ0KCRuKXtcbiAgICAkdmFsOiAxMDAlIC8gJGNvbHVtbnMgKiAkbjtcbiAgICBtYXJnaW4tbGVmdDogI3tjYWxjKCN7JHZhbH0gKyAjeyRvZmZzZXRfb25lX3NpZGV9KX07XG59XG5cbkBtaXhpbiBzaGlmdC1yaWdodCgkbil7XG4gICAgJHZhbDogMTAwJSAvICRjb2x1bW5zICogJG47XG4gICAgbWFyZ2luLXJpZ2h0OiAje2NhbGMoI3skdmFsfSArICN7JG9mZnNldF9vbmVfc2lkZX0pfTtcbn1cblxuQG1peGluIHNoaWZ0LXBhZGRpbmcoJG4pe1xuICAgICR2YWw6IDEwMCUgLyAkY29sdW1ucyAqICRuO1xuICAgIHBhZGRpbmctbGVmdDogI3tjYWxjKCN7JHZhbH0gKyAjeyRvZmZzZXRfb25lX3NpZGV9KX07XG4gICAgcGFkZGluZy1yaWdodDogI3tjYWxjKCN7JHZhbH0gKyAjeyRvZmZzZXRfb25lX3NpZGV9KX07XG59XG5cbkBtaXhpbiBzaGlmdC1wYWRkaW5nLWxlZnQoJG4pe1xuICAgICR2YWw6IDEwMCUgLyAkY29sdW1ucyAqICRuO1xuICAgIHBhZGRpbmctbGVmdDogI3tjYWxjKCN7JHZhbH0gKyAjeyRvZmZzZXRfb25lX3NpZGV9KX07XG59XG5cbkBtaXhpbiBzaGlmdC1wYWRkaW5nLXJpZ2h0KCRuKXtcbiAgICAkdmFsOiAxMDAlIC8gJGNvbHVtbnMgKiAkbjtcbiAgICBwYWRkaW5nLXJpZ2h0OiAje2NhbGMoI3skdmFsfSArICN7JG9mZnNldF9vbmVfc2lkZX0pfTtcbn1cblxuQG1peGluIHNoaWZ0LW1kKCRuKXtcbiAgICAkdmFsOiAxMDAlIC8gJGNvbHVtbnMgKiAkbjtcbiAgICBAaW5jbHVkZSBtZChtYXJnaW4tbGVmdCwgI3tjYWxjKCN7JHZhbH0gKyAjeyRvZmZzZXRfbWRfb25lX3NpZGV9KX0pO1xuICAgIEBpbmNsdWRlIG1kKG1hcmdpbi1yaWdodCwgI3tjYWxjKCN7JHZhbH0gKyAjeyRvZmZzZXRfbWRfb25lX3NpZGV9KX0pO1xufVxuXG5AbWl4aW4gc2hpZnQtbWQtbGVmdCgkbil7XG4gICAgJHZhbDogMTAwJSAvICRjb2x1bW5zICogJG47XG4gICAgQGluY2x1ZGUgbWQobWFyZ2luLWxlZnQsICN7Y2FsYygjeyR2YWx9ICsgI3skb2Zmc2V0X21kX29uZV9zaWRlfSl9KTtcbn1cblxuQG1peGluIHNoaWZ0LW1kLXJpZ2h0KCRuKXtcbiAgICAkdmFsOiAxMDAlIC8gJGNvbHVtbnMgKiAkbjtcbiAgICBAaW5jbHVkZSBtZChtYXJnaW4tcmlnaHQsICN7Y2FsYygjeyR2YWx9ICsgI3skb2Zmc2V0X21kX29uZV9zaWRlfSl9KTtcbn1cblxuQG1peGluIHNoaWZ0LW1kLXBhZGRpbmcoJG4pe1xuICAgICR2YWw6IDEwMCUgLyAkY29sdW1ucyAqICRuO1xuICAgIEBpbmNsdWRlIG1kKHBhZGRpbmctbGVmdCwgI3tjYWxjKCN7JHZhbH0gKyAjeyRvZmZzZXRfbWRfb25lX3NpZGV9KX0pO1xuICAgIEBpbmNsdWRlIG1kKHBhZGRpbmctcmlnaHQsICN7Y2FsYygjeyR2YWx9ICsgI3skb2Zmc2V0X21kX29uZV9zaWRlfSl9KTtcbn1cblxuQG1peGluIHNoaWZ0LW1kLXBhZGRpbmctbGVmdCgkbil7XG4gICAgJHZhbDogMTAwJSAvICRjb2x1bW5zICogJG47XG4gICAgQGluY2x1ZGUgbWQocGFkZGluZy1sZWZ0LCAje2NhbGMoI3skdmFsfSArICN7JG9mZnNldF9tZF9vbmVfc2lkZX0pfSk7XG59XG5cbkBtaXhpbiBzaGlmdC1tZC1wYWRkaW5nLXJpZ2h0KCRuKXtcbiAgICAkdmFsOiAxMDAlIC8gJGNvbHVtbnMgKiAkbjtcbiAgICBAaW5jbHVkZSBtZChwYWRkaW5nLXJpZ2h0LCAje2NhbGMoI3skdmFsfSArICN7JG9mZnNldF9tZF9vbmVfc2lkZX0pfSk7XG59XG5cbkBtaXhpbiBzaGlmdC14cygkbil7XG4gICAgJHZhbDogMTAwJSAvICRjb2x1bW5zICogJG47XG4gICAgQGluY2x1ZGUgeHMobWFyZ2luLWxlZnQsICN7Y2FsYygjeyR2YWx9ICsgI3skb2Zmc2V0X3hzX29uZV9zaWRlfSl9KTtcbiAgICBAaW5jbHVkZSB4cyhtYXJnaW4tcmlnaHQsICN7Y2FsYygjeyR2YWx9ICsgI3skb2Zmc2V0X3hzX29uZV9zaWRlfSl9KTtcbn1cblxuQG1peGluIHNoaWZ0LXhzLWxlZnQoJG4pe1xuICAgICR2YWw6IDEwMCUgLyAkY29sdW1ucyAqICRuO1xuICAgIEBpbmNsdWRlIHhzKG1hcmdpbi1sZWZ0LCAje2NhbGMoI3skdmFsfSArICN7JG9mZnNldF94c19vbmVfc2lkZX0pfSk7XG59XG5cbkBtaXhpbiBzaGlmdC14cy1yaWdodCgkbil7XG4gICAgJHZhbDogMTAwJSAvICRjb2x1bW5zICogJG47XG4gICAgQGluY2x1ZGUgeHMobWFyZ2luLXJpZ2h0LCAje2NhbGMoI3skdmFsfSArICN7JG9mZnNldF94c19vbmVfc2lkZX0pfSk7XG59XG5cbkBtaXhpbiBzaGlmdC14cy1wYWRkaW5nKCRuKXtcbiAgICAkdmFsOiAxMDAlIC8gJGNvbHVtbnMgKiAkbjtcbiAgICBAaW5jbHVkZSB4cyhwYWRkaW5nLWxlZnQsICN7Y2FsYygjeyR2YWx9ICsgI3skb2Zmc2V0X3hzX29uZV9zaWRlfSl9KTtcbiAgICBAaW5jbHVkZSB4cyhwYWRkaW5nLXJpZ2h0LCAje2NhbGMoI3skdmFsfSArICN7JG9mZnNldF94c19vbmVfc2lkZX0pfSk7XG59XG5cbkBtaXhpbiBzaGlmdC14cy1wYWRkaW5nLWxlZnQoJG4pe1xuICAgICR2YWw6IDEwMCUgLyAkY29sdW1ucyAqICRuO1xuICAgIEBpbmNsdWRlIHhzKHBhZGRpbmctbGVmdCwgI3tjYWxjKCN7JHZhbH0gKyAjeyRvZmZzZXRfeHNfb25lX3NpZGV9KX0pO1xufVxuXG5AbWl4aW4gc2hpZnQteHMtcGFkZGluZy1yaWdodCgkbil7XG4gICAgJHZhbDogMTAwJSAvICRjb2x1bW5zICogJG47XG4gICAgQGluY2x1ZGUgeHMocGFkZGluZy1yaWdodCwgI3tjYWxjKCN7JHZhbH0gKyAjeyRvZmZzZXRfeHNfb25lX3NpZGV9KX0pO1xufVxuXG5AbWl4aW4gbWQoJG5hbWUsICR2YWx1ZSl7XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogJGJyZWFrX21kKXtcbiAgICAgICAgI3skbmFtZX06ICR2YWx1ZTtcbiAgICB9XG59XG5cbkBtaXhpbiBtZC1ibG9jaygpe1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICRicmVha19tZCl7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbn1cblxuQG1peGluIHhzKCRuYW1lLCAkdmFsdWUpe1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6ICRicmVha194cyl7XG4gICAgICAgICN7JG5hbWV9OiAkdmFsdWU7XG4gICAgfVxufVxuXG5AbWl4aW4geHMtYmxvY2soKXtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAkYnJlYWtfeHMpe1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG59XG5cbkBtaXhpbiBmcm9tKCRtaW5fd2lkdGgpe1xuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICRtaW5fd2lkdGgpe1xuICAgICAgICBAY29udGVudDtcbiAgICB9XG59XG5cbkBtaXhpbiB0bygkbWF4X3dpZHRoKXtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAkbWF4X3dpZHRoKXtcbiAgICAgICAgQGNvbnRlbnQ7XG4gICAgfVxufVxuXG5AbWl4aW4gZnJvbS10bygkbWluX3dpZHRoLCAkbWF4X3dpZHRoKXtcbiAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAkbWluX3dpZHRoKSBhbmQgKG1heC13aWR0aDogJG1heF93aWR0aCl7XG4gICAgICAgIEBjb250ZW50O1xuICAgIH1cbn1cblxuQG1peGluIHUtcm93LWZsZXgoJG9mZnNldCl7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgbWFyZ2luLWxlZnQ6ICgkb2Zmc2V0IC8gLTIpO1xuICAgIG1hcmdpbi1yaWdodDogKCRvZmZzZXQgLyAtMik7XG59XG5cbkBtaXhpbiB1LWNvbCgkb2Zmc2V0KXtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIHdvcmQtd3JhcDogYnJlYWstd29yZDtcbiAgICBtYXJnaW4tbGVmdDogKCRvZmZzZXQgLyAyKTtcbiAgICBtYXJnaW4tcmlnaHQ6ICgkb2Zmc2V0IC8gMik7XG59XG5cbkBtaXhpbiB1LXNpemUoJG4sICRjb2x1bW5zLCAkb2Zmc2V0KXtcbiAgICB3aWR0aDogI3tjYWxjKDEwMCUgLyAjeyRjb2x1bW5zfSAqICN7JG59IC0gI3skb2Zmc2V0fSl9O1xufVxuXG5AbWl4aW4gcmVzZXQoKXtcbiAgICBib2R5LGRpdixkbCxkdCxkZCx1bCxsaSxoMSxoMixoMyxoNCxoNSxoNixwcmUsY29kZSxmb3JtLGZpZWxkc2V0LGlucHV0LHRleHRhcmVhLHAsYmxvY2txdW90ZSx0aCx0ZHtcbiAgICAgICAgbWFyZ2luOiAwO1xuICAgICAgICBwYWRkaW5nOiAwO1xuICAgIH1cbiAgICB0YWJsZXtcbiAgICAgICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgICAgICAgYm9yZGVyLXNwYWNpbmc6IDA7XG4gICAgfVxuICAgIGZpZWxkc2V0LGltZyxhYmJye1xuICAgICAgICBib3JkZXI6IDA7XG4gICAgfVxuICAgIGFkZHJlc3MsY2FwdGlvbixjaXRlLGNvZGUsZGZuLGVtLHN0cm9uZyx0aCx2YXJ7XG4gICAgICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgICAgICAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgICB9XG4gICAgdWwgbGl7XG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgfVxuICAgIGNhcHRpb24sdGh7XG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XG4gICAgfVxuICAgIGgxLGgyLGgzLGg0LGg1LGg2e1xuICAgICAgICBmb250LXNpemU6IDEwMCU7XG4gICAgICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgfVxuICAgIHN1cHtcbiAgICAgICAgdmVydGljYWwtYWxpZ246IHRleHQtdG9wO1xuICAgIH1cbiAgICBzdWJ7XG4gICAgICAgIHZlcnRpY2FsLWFsaWduOiB0ZXh0LWJvdHRvbTtcbiAgICB9XG4gICAgaW5wdXQsdGV4dGFyZWEsc2VsZWN0e1xuICAgICAgICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgICAgICAgZm9udC1zaXplOiBpbmhlcml0O1xuICAgICAgICBmb250LXdlaWdodDogaW5oZXJpdDtcbiAgICB9XG4gICAgbGVnZW5ke1xuICAgICAgICBjb2xvcjogIzAwMDtcbiAgICB9XG4gICAgYXJ0aWNsZSxhc2lkZSxkZXRhaWxzLGZpZ2NhcHRpb24sZmlndXJlLGZvb3RlcixoZWFkZXIsaGdyb3VwLG1lbnUsbmF2LHNlY3Rpb24sbWFpbntcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxuICAgIGltZ3tcbiAgICAgICAgbWF4LXdpZHRoOiAxMDAlO1xuICAgICAgICBoZWlnaHQ6IGF1dG87XG4gICAgfVxufVxuXG5AbWl4aW4gZGVidWcoJGJhY2tncm91bmQsICRvdXRsaW5lKXtcbiAgICBoZWlnaHQ6IDEwMHZoO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBcbiAgICA+IGRpdntcbiAgICAgICAgaGVpZ2h0OiBpbmhlcml0O1xuICAgICAgICBAaW5jbHVkZSB3cmFwcGVyKCk7XG4gICAgICAgIFxuICAgICAgICA+IGRpdntcbiAgICAgICAgICAgIGhlaWdodDogaW5oZXJpdDtcbiAgICAgICAgICAgIEBpbmNsdWRlIHJvdy1mbGV4KCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgID4gZGl2e1xuICAgICAgICAgICAgICAgIEBpbmNsdWRlIGNvbCgpO1xuICAgICAgICAgICAgICAgIEBpbmNsdWRlIHNpemUoMSk7XG4gICAgICAgICAgICAgICAgaGVpZ2h0OiBpbmhlcml0O1xuICAgICAgICAgICAgICAgIG91dGxpbmU6ICRvdXRsaW5lO1xuICAgICAgICAgICAgICAgIGJhY2tncm91bmQ6ICRiYWNrZ3JvdW5kO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWl4aW4gY2xlYXJmaXgoKXtcbiAgICAmOjphZnRlcntcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGNvbnRlbnQ6IFwiXCI7XG4gICAgICAgIGNsZWFyOiBib3RoO1xuICAgIH1cbn0iLCJAaW1wb3J0ICcuLi8uLi9tYWluLnNjc3MnO1xyXG5cclxuLm5hdmlnYXRpb24ge1xyXG4gIGhlaWdodDogMjEwcHg7XHJcbiAgYmFja2dyb3VuZDogdXJsKCcuL3Jlc291cmNlcy9pbWFnZXMvbmF2aWdhdGlvbi1iZy5qcGcnKSBuby1yZXBlYXQ7XHJcbiAgYmFja2dyb3VuZC1wb3NpdGlvbi14OiBjZW50ZXI7XHJcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICBwYWRkaW5nLXRvcDogNDBweDtcclxuICBwYWRkaW5nLWJvdHRvbTogNzBweDtcclxufVxyXG5cclxuLmxpbmstYmFjayB7XHJcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBjb2xvcjogJHdoaXRlO1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcblxyXG4gIC5saW5rLWJhY2tfX2ljb24ge1xyXG4gICAgd2lkdGg6IDE1cHg7XHJcbiAgICBoZWlnaHQ6IDE1cHg7XHJcbiAgICBmaWxsOiAkd2hpdGU7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgfVxyXG5cclxuICAmOmFjdGl2ZXtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gIH1cclxufVxyXG5cclxuLm5hdmlnYXRpb25fX3BhZ2Uge1xyXG4gIGNvbG9yOiAkd2hpdGU7XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICBmb250LXdlaWdodDogODAwO1xyXG4gIGZvbnQtc2l6ZTogNTZweDtcclxufSIsIkBpbXBvcnQgJy4uLy4uL21haW4uc2Nzcyc7XHJcblxyXG4uY29udGFpbmVyIHtcclxuICBAaW5jbHVkZSB3cmFwcGVyKCk7XHJcbn1cclxuXHJcbi50ZXh0Qm94LXJvdyB7XHJcbiAgQGluY2x1ZGUgcm93LWZsZXgoKTtcclxuICBAaW5jbHVkZSBzaGlmdC1sZWZ0KDEpO1xyXG4gIEBpbmNsdWRlIHNoaWZ0LW1kLWxlZnQoMCk7XHJcbiAgQGluY2x1ZGUgc2l6ZSg3KTtcclxuICBAaW5jbHVkZSBzaXplLXhzKDQpO1xyXG4gIG1hcmdpbi10b3A6IDcwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogNzBweDtcclxufVxyXG5cclxuLmxpc3RCb3h7XHJcbiAgQGluY2x1ZGUgd3JhcHBlcigpO1xyXG4gIGJhY2tncm91bmQ6IHVybCgnLi9yZXNvdXJjZXMvaW1hZ2VzL2JveC1iZy5qcGcnKSBuby1yZXBlYXQ7XHJcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uLXg6IHJpZ2h0O1xyXG59XHJcblxyXG4ubGlzdEJveC1yb3cge1xyXG4gIG1hcmdpbi1ib3R0b206IDU1cHg7XHJcbiAgQGluY2x1ZGUgcm93LWZsZXgoKTtcclxuICBAaW5jbHVkZSBzaGlmdC1yaWdodCgxKTtcclxuICBAaW5jbHVkZSBzaGlmdC1sZWZ0KDEpO1xyXG4gIEBpbmNsdWRlIHNoaWZ0LW1kLWxlZnQoMCk7XHJcbn1cclxuXHJcbi5saXN0Qm94LWNvbCB7XHJcbiAgQGluY2x1ZGUgc2l6ZSg1KTsgIFxyXG4gICY6Zmlyc3QtY2hpbGR7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDgwcHg7XHJcbiAgfVxyXG59XHJcblxyXG4ubGlzdEl0ZW0ge1xyXG4gIHBhZGRpbmctbGVmdDogMjBweDtcclxuICBmb250LXdlaWdodDogNjAwO1xyXG5cclxuICAmX2JsdWUtbWFya2VycyB7XHJcbiAgICBjb2xvcjogJGZvdXJ0aDtcclxuICB9XHJcbiAgJl9udW1iZXJzIHtcclxuICAgIGxpc3Qtc3R5bGUtdHlwZTogZGVjaW1hbDtcclxuICB9XHJcbiAgJl9jaGVja2VycyB7XHJcbiAgICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbiAgfVxyXG5cclxuICAmX19pdGVtSWNvbiB7XHJcbiAgICB3aWR0aDogMjBweDtcclxuICAgIGhlaWdodDogMjBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRmb3VydGg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG4gICAgZmlsbDogJHdoaXRlO1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTEwMCUsIDEwJSk7XHJcblxyXG4gICAgJl9jaGVjay1ibGFjayB7XHJcbiAgICAgIGZpbGw6ICMwMDA7XHJcbiAgICB9XHJcblxyXG4gICAgJisubGlzdEl0ZW1fX2l0ZW0ge1xyXG4gICAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAubGlzdEl0ZW1fX2l0ZW0ge1xyXG4gICAgLmxpc3RJdGVtX190ZXh0IHtcclxuICAgICAgY29sb3I6ICRmaXJzdDtcclxuICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgICAgbGluZS1oZWlnaHQ6IDI0cHg7XHJcblxyXG4gICAgICAmX3doaXRlIHtcclxuICAgICAgICBjb2xvcjogJHdoaXRlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5cclxuLmxpbmtzLXJvd3tcclxuICBAaW5jbHVkZSByb3ctZmxleCgpO1xyXG4gIEBpbmNsdWRlIHNoaWZ0LWxlZnQoMSk7XHJcbiAgQGluY2x1ZGUgc2hpZnQtbWQtbGVmdCgwKTtcclxuICBtYXJnaW4tYm90dG9tOiA3MHB4O1xyXG59XHJcblxyXG4ubGlua3MtY29se1xyXG4gIEBpbmNsdWRlIGNvbCgpO1xyXG4gIG1hcmdpbi1yaWdodDogNDBweDtcclxufVxyXG5cclxuLmxpbmtCb3gge1xyXG4gIGNvbG9yOiAkZm91cnRoO1xyXG4gIGZpbGw6ICRmb3VydGg7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblxyXG4gICZfX2ljb24ge1xyXG4gICAgd2lkdGg6IDIwcHg7XHJcbiAgICBoZWlnaHQ6IDIwcHg7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgfVxyXG5cclxuICAmX190ZXh0IHtcclxuICAgIGZvbnQtc2l6ZTogMTdweDtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gIH1cclxuXHJcbiAgJjp2aXNpdGVkIHtcclxuICAgIGNvbG9yOiAkdmlzaXRlZExpbms7XHJcbiAgfVxyXG59XHJcblxyXG4uZ3JhZGllbnQtcm93IHtcclxuICBAaW5jbHVkZSByb3ctZmxleCgpO1xyXG4gIEBpbmNsdWRlIHNoaWZ0LWxlZnQoMSk7XHJcbiAgQGluY2x1ZGUgc2hpZnQtbWQtbGVmdCgwKTtcclxuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG5cclxuICBwYWRkaW5nOiAxNXB4IDA7XHJcbiAgZm9udC1zaXplOiAyMnB4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGNvbG9yOiAkd2hpdGU7XHJcbiAgZm9udC13ZWlnaHQ6IDYwMDtcclxuXHJcbiAgJl9ncmFkaWVudDEge1xyXG4gICAgYmFja2dyb3VuZDogJGdyYWRpZW50MTtcclxuICB9XHJcblxyXG4gICZfZ3JhZGllbnQyIHtcclxuICAgIGJhY2tncm91bmQ6ICRncmFkaWVudDI7XHJcbiAgfVxyXG4gIFxyXG4gICZfZ3JhZGllbnQzIHtcclxuICAgIGJhY2tncm91bmQ6ICRncmFkaWVudDM7XHJcbiAgfVxyXG5cclxuICAmX2Rhcmsge1xyXG4gICAgY29sb3I6ICRmaXJzdDtcclxuICB9XHJcblxyXG4gICZfdXBwZXIge1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICB9XHJcblxyXG4gICZfZmF0IHtcclxuICAgIGZvbnQtd2VpZ2h0OiA5MDA7XHJcbiAgfVxyXG5cclxuICAmX3Nte1xyXG4gICAgQGluY2x1ZGUgc2l6ZSgzKTtcclxuICB9XHJcblxyXG4gICZfbGd7XHJcbiAgICBAaW5jbHVkZSBzaXplKDUpO1xyXG4gIH1cclxuXHJcbiAgJl9tYjMwe1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxuICB9XHJcbn1cclxuXHJcbi5idG4tYm94LW91dGVyIHtcclxuICBAaW5jbHVkZSByb3ctZmxleCgpO1xyXG4gIEBpbmNsdWRlIHNoaWZ0LWxlZnQoMSk7XHJcbiAgQGluY2x1ZGUgc2hpZnQtbWQtbGVmdCgwKTtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICBtYXJnaW4tYm90dG9tOiAyNXB4O1xyXG59XHJcblxyXG4uZGVidWdnZXJ7XHJcbiAgQGluY2x1ZGUgZGVidWcocmdiYSgyNTUsIDE2NiwgMCwgMC4yOTQpLCAjMDAwKTtcclxuICAmID4gZGl2e21hcmdpbi1sZWZ0OiAwO31cclxufVxyXG5cclxuLmJ1dHRvbiB7XHJcbiAgaGVpZ2h0OiA1MHB4O1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkYWNjZW50O1xyXG4gIGNvbG9yOiAkd2hpdGU7XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICBib3gtc2hhZG93OiAwcHggNXB4IDEwcHggMHB4IHJnYmEoMCwgMCwgMCwgMC40KTtcclxuICBib3JkZXI6IDA7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBtYXJnaW4tcmlnaHQ6IDM1cHg7XHJcblxyXG4gICZfc20ge1xyXG4gICAgd2lkdGg6IDIxMHB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICB9XHJcblxyXG4gICZfbGcge1xyXG4gICAgd2lkdGg6IDMyNXB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICB9XHJcblxyXG4gICZfcmFkaXVzIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDMwcHg7XHJcbiAgfVxyXG5cclxuICAmX20tYXV0byB7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgfVxyXG5cclxuICAmX3doaXRlIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcclxuICAgIGNvbG9yOiAkYWNjZW50O1xyXG4gICAgYm9yZGVyOiAzcHggc29saWQgJGFjY2VudDtcclxuICB9XHJcblxyXG4gICY6Zm9jdXMge1xyXG4gICAgb3V0bGluZTogMDtcclxuICB9XHJcbn1cclxuXHJcbi5jaGVja1JhZGlve1xyXG4gIEBpbmNsdWRlIHdyYXBwZXIoKTtcclxuICBtYXJnaW4tdG9wOiAxMDBweDtcclxuICBtYXJnaW4tYm90dG9tOiAxMDBweDtcclxuXHJcbiAgJi1yb3d7XHJcbiAgICBAaW5jbHVkZSByb3ctZmxleCgpO1xyXG4gICAgQGluY2x1ZGUgc2hpZnQtbGVmdCgxKTtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgfVxyXG5cclxuICAmLWNvbDpmaXJzdC1jaGlsZHtcclxuICAgIEBpbmNsdWRlIHNoaWZ0LXJpZ2h0KDEpO1xyXG4gIH1cclxufVxyXG5cclxuLmNoZWNre1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbn1cclxuXHJcbi5vcHRpb24ge1xyXG4gIGRpc3BsYXk6IGlubGluZS1mbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblxyXG4gICZfdnRvcCB7XHJcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxuICB9XHJcblxyXG4gICZfX3RpdGxlIHtcclxuICAgIG1hcmdpbjogMDtcclxuICB9XHJcblxyXG4gICZfX3N0cmluZyB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcbiAgfVxyXG5cclxuICAmX19pbnB1dCB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG5cclxuICAgICZfY2hlY2sge1xyXG4gICAgICAmOmNoZWNrZWQrLm9wdGlvbl9faXRlbSAub3B0aW9uX190aWNrIHtcclxuICAgICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgJl9yYWRpbyB7XHJcbiAgICAgICY6Y2hlY2tlZCsub3B0aW9uX19pdGVtIC5vcHRpb25fX2RvdCB7XHJcbiAgICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJl9faXRlbSB7XHJcbiAgICB3aWR0aDogMjRweDtcclxuICAgIGhlaWdodDogMjRweDtcclxuICAgIGJvcmRlci13aWR0aDogMnB4O1xyXG4gICAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuICAgIG1hcmdpbi1yaWdodDogMTVweDtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBib3JkZXItcmFkaXVzOiAzcHg7XHJcblxyXG4gICAgJl9jaXJjbGUge1xyXG4gICAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICB9XHJcblxyXG4gICAgJl93aGl0ZSB7XHJcbiAgICAgIGJvcmRlci1jb2xvcjogJHdoaXRlO1xyXG5cclxuICAgICAgLm9wdGlvbl9fZG90IHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC5vcHRpb25fX3RpY2sge1xyXG4gICAgICAgIGZpbGw6ICR3aGl0ZTtcclxuICAgICAgfVxyXG5cclxuICAgICAgJisub3B0aW9uX190aXRsZSB7XHJcbiAgICAgICAgY29sb3I6ICR3aGl0ZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJl9fdGljayB7XHJcbiAgICB3aWR0aDogMjBweDtcclxuICAgIGhlaWdodDogMjBweDtcclxuICAgIHBhZGRpbmc6IDVweDtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgdmlzaWJpbGl0eTogaGlkZGVuO1xyXG4gICAgZmlsbDogJGFjY2VudDtcclxuICB9XHJcblxyXG4gICZfX2RvdCB7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcclxuICAgIHdpZHRoOiAxMHB4O1xyXG4gICAgaGVpZ2h0OiAxMHB4O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRhY2NlbnQ7XHJcbiAgfVxyXG5cclxuICAmX190aXRsZSB7XHJcbiAgICBmb250LXNpemU6IDE1cHg7XHJcbiAgfVxyXG59XHJcblxyXG4udG9vZ2xlIHtcclxuICB3aWR0aDogNTY1cHg7XHJcbiAgYmFja2dyb3VuZDogJGdyYWRpZW50MztcclxuICBwYWRkaW5nOiA0MHB4IDI1cHggMjVweCAyNXB4O1xyXG59XHJcblxyXG4uYWNjb3JkZW9uQm94e1xyXG4gIEBpbmNsdWRlIHdyYXBwZXIoKTtcclxuICBtYXJnaW4tYm90dG9tOiA1NXB4O1xyXG5cclxuICAmLXJvd3tcclxuICAgIEBpbmNsdWRlIHJvdy1mbGV4KCk7XHJcbiAgICBAaW5jbHVkZSBzaGlmdC1sZWZ0KDEpO1xyXG4gICAgQGluY2x1ZGUgdS1zaXplKDEwLCAxMiwgMCk7XHJcbiAgfVxyXG59XHJcblxyXG4uYWNjb3JkZW9uIHtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjRUNFQ0VDO1xyXG5cclxuICAmX19pdGVtIHtcclxuICAgIGJvcmRlci1sZWZ0OiAzcHggc29saWQgdHJhbnNwYXJlbnQ7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgfVxyXG5cclxuICAmX19pdGVtOm5vdCg6bGFzdC1jaGlsZCkge1xyXG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNFQ0VDRUM7XHJcbiAgfVxyXG5cclxuICAmX19pdGVtOmhvdmVyIHtcclxuICAgIGJveC1zaGFkb3c6IDBweCAwcHggMzVweCAwcHggcmdiYSgwLCAwLCAwLCAwLjE0KTtcclxuICAgIGJvcmRlci1sZWZ0LWNvbG9yOiAkYWNjZW50O1xyXG4gIH1cclxufVxyXG5cclxuLmFjY29yZGVvbi10aXRsZSB7XHJcbiAgaGVpZ2h0OiA3NXB4O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgcGFkZGluZzogMCAzMHB4O1xyXG5cclxuICAmX19pY29uIHtcclxuICAgIHdpZHRoOiAyMHB4O1xyXG4gICAgZmlsbDogI0QxRDFEMTtcclxuICAgIGZsZXgtc2hyaW5rOiAwO1xyXG4gIH1cclxufVxyXG5cclxuLmFjY29yZGVvbi1jb250ZW50IHtcclxuICBwYWRkaW5nOiAwIDMwcHg7XHJcbiAgZGlzcGxheTogbm9uZTtcclxuXHJcbiAgJl9fdGV4dCB7XHJcbiAgICBsaW5lLWhlaWdodDogMjJweDtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmctYm90dG9tOiAzMHB4O1xyXG4gICAgcGFkZGluZy10b3A6IDEwcHg7XHJcbiAgfVxyXG5cclxuICAmX19zdWJ0aXRsZSB7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG4gIH1cclxufVxyXG5cclxuLmFydGljbGUge1xyXG4gICZfX2ltZyB7XHJcbiAgICAmX210MzUge1xyXG4gICAgICBtYXJnaW4tdG9wOiAzNXB4O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLm1lc3NhZ2Uge1xyXG4gICYtaW5uZXIge1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcblxyXG4gICAgJl9sZyB7XHJcbiAgICAgIHdpZHRoOiA1ODBweDtcclxuICAgIH1cclxuXHJcbiAgICAmX3NtIHtcclxuICAgICAgd2lkdGg6IDQxNHB4O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJl9fcGhvbmUge1xyXG4gICAgY29sb3I6ICR3aGl0ZTtcclxuICAgIGZvbnQtc2l6ZTogNDVweDtcclxuICAgIHBhZGRpbmc6IDIwcHggMHB4O1xyXG4gICAgYm9yZGVyOiAzcHggc29saWQgJGFjY2VudDtcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gICAgc3BhbiB7XHJcbiAgICAgIGZvbnQtd2VpZ2h0OiA4MDA7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4udGV4dGFyZWF7XHJcbiAgcmVzaXplOiBub25lO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNlNmU2ZTY7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcGFkZGluZzogMTBweCAxNXB4O1xyXG4gIGhlaWdodDogMTAwJTtcclxuXHJcbiAgJjpmb2N1c3tcclxuICAgIG91dGxpbmU6IDA7XHJcbiAgICBib3JkZXItY29sb3I6ICM5YjliOWI7XHJcbiAgfVxyXG59XHJcblxyXG4uYm94LWNvbDJ7XHJcbiAgZGlzcGxheTogZ3JpZDtcclxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDUwJSA1MCU7XHJcbiAgZ3JpZC1jb2x1bW4tZ2FwOiAyNXB4O1xyXG59XHJcblxyXG4uZHJvcGRvd257XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICZfX2l0ZW17XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XHJcbiAgfVxyXG5cclxuICAmX19pdGVtOm5vdCguc2VsZWN0ZWQpe1xyXG4gICAgcGFkZGluZzogMTBweCAxNXB4O1xyXG4gIH1cclxuXHJcbiAgJl9faXRlbTpob3Zlcjpub3QoLnNlbGVjdGVkKXtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNGM0YzRjM7XHJcbiAgfVxyXG5cclxuICAmLmRpc2FibGVke1xyXG4gICAgY29sb3I6ICNFNkU2RTY7XHJcbiAgICBcclxuICAgICYgLmRyb3Bkb3duX19hcnJvd3tcclxuICAgICAgZmlsbDogI0U2RTZFNjtcclxuICAgIH1cclxuXHJcbiAgICAmIC5kcm9wZG93bl9faGVhZHtcclxuICAgICAgYm9yZGVyLWNvbG9yOiAjRTZFNkU2O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLmRyb3Bkb3duX19oZWFke1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICM5MzkzOTM7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xyXG4gIHBhZGRpbmc6IDEwcHggMTVweDtcclxuXHJcbiAgLmRyb3Bkb3duX19hcnJvd3tcclxuICAgIGZpbGw6ICRmaXJzdDtcclxuICAgIHdpZHRoOiAxMnB4O1xyXG4gICAgaGVpZ2h0OiAxOXB4O1xyXG4gIH1cclxufVxyXG5cclxuLmRyb3Bkb3duX19ib2R5e1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICNFNkU2RTY7XHJcbiAgYm9yZGVyLXRvcDogMDtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG4uaW5jb3JyZWN0e1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICRhY2NlbnQ7XHJcbiAgXHJcbiAgJiB+IC5pbnB1dF9faWNvbntcclxuICAgIGZpbGw6ICRhY2NlbnQ7XHJcbiAgfVxyXG5cclxuICAmLmlucHV0X19maWVsZDpmb2N1c3tcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICRhY2NlbnQ7XHJcbiAgfVxyXG5cclxuICAmLmlucHV0X19maWVsZDpmb2N1cyB+IC5pbnB1dF9faWNvbntcclxuICAgIGZpbGw6ICRhY2NlbnQ7XHJcbiAgfVxyXG59XHJcblxyXG4uY29ycmVjdHtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjZTZlNmU2O1xyXG4gIFxyXG4gICYgfiAuaW5wdXRfX2ljb257XHJcbiAgICBmaWxsOiAkZm91cnRoO1xyXG4gIH1cclxuXHJcbiAgJi5pbnB1dF9fZmllbGQ6Zm9jdXMgfiAuaW5wdXRfX2ljb257XHJcbiAgICBmaWxsOiAkZm91cnRoO1xyXG4gIH1cclxuXHJcbiAgJi5pbnB1dF9fZmllbGQ6Zm9jdXN7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkZm91cnRoO1xyXG4gIH1cclxuXHJcbiAgJi5pbnB1dF9fZmllbGQ6Zm9jdXMgfiAuaW5wdXRfX2ljb257XHJcbiAgICBmaWxsOiAkZm91cnRoO1xyXG4gIH1cclxufVxyXG5cclxuLnR1bWJsZXJ7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcclxuICBwYWRkaW5nOiAycHggMDtcclxuICBib3JkZXItcmFkaXVzOiA2MHB4O1xyXG5cclxuICAmX3Bpbmt7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCAkYWNjZW50O1xyXG5cclxuICAgIC50dW1ibGVyX19pdGVtX2FjdGl2ZXtcclxuICAgICAgY29sb3I6ICR3aGl0ZTtcclxuICAgIH1cclxuXHJcbiAgICAudHVtYmxlcl9fcG9pbnR7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICRhY2NlbnQ7XHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gICZfd2hpdGV7XHJcbiAgICAgIGJvcmRlcjogMnB4IHNvbGlkICR3aGl0ZTtcclxuICAgICAgY29sb3I6ICR3aGl0ZTtcclxuXHJcbiAgICAudHVtYmxlcl9faXRlbV9hY3RpdmV7XHJcbiAgICAgIGNvbG9yOiAkZmlyc3Q7XHJcbiAgICB9XHJcblxyXG4gICAgLnR1bWJsZXJfX3BvaW50e1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7ICBcclxuICAgIH1cclxuICB9XHJcblxyXG4gICZfX2l0ZW17XHJcbiAgICBwYWRkaW5nOiAxNXB4IDMwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA2MHB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICAgIHRyYW5zaXRpb246IGNvbG9yIC41cztcclxuICAgIHotaW5kZXg6IDE7XHJcbiAgfVxyXG5cclxuICAmX19wb2ludHtcclxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICAgIHotaW5kZXg6IDA7XHJcbiAgICBib3JkZXItcmFkaXVzOiA2MHB4O1xyXG4gIH1cclxufVxyXG5cclxuLnRhcmlme1xyXG4gICZfd2hpdGV7XHJcbiAgICAudGFyaWZfX29wdGlvbntcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMjYsIDIyNiwgMjI2LCAwLjMpO1xyXG4gICAgICBjb2xvcjogJHdoaXRlO1xyXG4gICAgfVxyXG5cclxuICAgIC50YXJpZl9fb3B0aW9uX2FjdGl2ZXtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xyXG4gICAgICBjb2xvcjogJGFjY2VudDtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICZfcGlua3tcclxuICAgIC50YXJpZl9fb3B0aW9uX2FjdGl2ZXtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGFjY2VudDtcclxuICAgICAgY29sb3I6ICR3aGl0ZTtcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi50YXJpZl9fb3B0aW9ue1xyXG4gIGJvcmRlcjogMDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI0U3RTdFNztcclxuICB0cmFuc2l0aW9uOiBhbGwgLjUgZWFzZTtcclxuXHJcbiAgJjpmb2N1c3tcclxuICAgIG91dGxpbmU6IDA7XHJcbiAgfVxyXG5cclxuICAmX2xne1xyXG4gICAgd2lkdGg6IDE3NnB4O1xyXG4gICAgaGVpZ2h0OiA1MHB4O1xyXG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgIGZvbnQtc2l6ZTogMTVweDtcclxuICB9XHJcblxyXG4gICZfc217XHJcbiAgICB3aWR0aDogODdweDtcclxuICAgIGhlaWdodDogMzBweDtcclxuICB9XHJcbn1cclxuXHJcbi5pbmZvV3JhcHBlcntcclxuICBkaXNwbGF5OiBncmlkO1xyXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcclxufVxyXG5cclxuLmluZm97XHJcbiAgcGFkZGluZzogMjBweDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGZsZXgtd3JhcDogd3JhcDtcclxuICBcclxuICAmX2Jne1xyXG4gICAgYmFja2dyb3VuZDogJGdyYWRpZW50MztcclxuICB9XHJcblxyXG4gICZfX3RpdGxle1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgbGluZS1oZWlnaHQ6IDIycHg7XHJcbiAgICBtYXJnaW46IDA7XHJcblxyXG4gICAgJl93aGl0ZXtcclxuICAgICAgY29sb3I6ICR3aGl0ZTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gICZfX2ljb257XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB3aWR0aDogMjBweDtcclxuICAgIGhlaWdodDogMjBweDtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGxpbmUtaGVpZ2h0OiAxOS41cHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gICAgZm9udC1zaXplOiAxM3B4O1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgbGVmdDogNXB4O1xyXG4gICAgYm90dG9tOiAycHg7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgXHJcbiAgICAmX3doaXRle1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XHJcbiAgICAgIGNvbG9yOiAkZmlyc3Q7XHJcbiAgICB9XHJcbiAgICAmX3Bpbmt7XHJcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICRhY2NlbnQ7XHJcbiAgICAgIGNvbG9yOiAkYWNjZW50O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgJl9fdGV4dHtcclxuICAgIGZvbnQtc2l6ZTogMTNweDtcclxuICAgIG1hcmdpbjogMDtcclxuICB9XHJcbn1cclxuXHJcbi5pbmZvRGVzY3JpcHRpb257XHJcbiAgYm94LXNoYWRvdzogMHB4IDBweCA4cHggMHB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcclxuICBwYWRkaW5nOiAxNXB4IDI1cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xyXG4gIHdpZHRoOiAzMDBweDtcclxufVxyXG5cclxuLnRhYmxle1xyXG4gIGJvcmRlcjogM3B4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gIGJvcmRlci1zcGFjaW5nOiAwO1xyXG5cclxuICAmX190aXRsZXtcclxuICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG4gIH1cclxuXHJcbiAgJl9waW5re1xyXG4gICAgYm9yZGVyLWNvbG9yOiAkYWNjZW50O1xyXG4gICAgY29sb3I6ICRmaXJzdDtcclxuXHJcbiAgICAmIC50YWJsZV9fdGl0bGUtcm93e1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYWNjZW50O1xyXG4gICAgICBjb2xvcjogJHdoaXRlO1xyXG4gICAgfVxyXG5cclxuICAgICYgLnRhYmxlX19yb3c6bnRoLWNoaWxkKDJuICsgMSl7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNGMEYwRjA7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICYgLnRhYmxlX19jb2x1bW46bnRoLWNoaWxkKDJuKXtcclxuICAgICAgYm9yZGVyLWxlZnQ6IDNweCBzb2xpZCAjRTdFN0U3O1xyXG4gICAgICBib3JkZXItcmlnaHQ6IDNweCBzb2xpZCAjRTdFN0U3O1xyXG4gICAgfVxyXG5cclxuICB9XHJcbiAgXHJcbiAgJl93aGl0ZXtcclxuICAgIGJvcmRlci1jb2xvcjogJHdoaXRlO1xyXG4gICAgY29sb3I6ICR3aGl0ZTtcclxuXHJcbiAgICAmIC50YWJsZV9fdGl0bGUtcm93e1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XHJcbiAgICAgIGNvbG9yOiAkYWNjZW50O1xyXG4gICAgfVxyXG5cclxuICAgICYgLnRhYmxlX19yb3c6bnRoLWNoaWxkKDJuICsgMSl7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC41KTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJiAudGFibGVfX2NvbHVtbjpudGgtY2hpbGQoMm4pe1xyXG4gICAgICBib3JkZXItbGVmdDogM3B4IHNvbGlkICR3aGl0ZTtcclxuICAgICAgYm9yZGVyLXJpZ2h0OiAzcHggc29saWQgJHdoaXRlO1xyXG4gICAgfVxyXG5cclxuICAgICYgLnRhYmxlX19yb3d7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKTtcclxuICAgIH1cclxuXHJcbiAgfVxyXG5cclxuICAmX190aXRsZXtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgfVxyXG5cclxuICAmX190aXRsZS1jb2x1bW57XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIHBhZGRpbmc6IDMwcHggMTVweDtcclxuICB9XHJcblxyXG4gICZfX2NvbHVtbntcclxuICAgIHBhZGRpbmc6IDI1cHggMTVweDtcclxuICB9XHJcbn1cclxuXHJcbi5wYWdpbmF0aW9ue1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblxyXG4gICZfX2Fycm93e1xyXG4gICAgd2lkdGg6IDM2cHg7XHJcbiAgICBoZWlnaHQ6IDM2cHg7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDE0cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZm91cnRoO1xyXG4gICAgZmlsbDogJHdoaXRlO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMThweDtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIG9wYWNpdHk6IDE7XHJcblxyXG4gICAgJl9kaXNhYmxlZHtcclxuICAgICAgb3BhY2l0eTogLjM7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4ubnVtYmVyc3tcclxuICBkaXNwbGF5OiBmbGV4O1xyXG5cclxuICAmX19pdGVte1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIGNvbG9yOiAkZm91cnRoO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgd2lkdGg6IDUwcHg7XHJcbiAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcblxyXG4gICAgJl9zdHVie1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgfVxyXG5cclxuICAgICZfc3R1YiAubnVtYmVyc19fbnVtYmVye1xyXG4gICAgICB2aXNpYmlsaXR5OiBoaWRkZW47XHJcbiAgICB9XHJcblxyXG4gICAgJl9hY3RpdmV7XHJcbiAgICAgIGJvcmRlci1yYWRpdXM6IDEwMCU7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNFNkVGRjg7XHJcbiAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgdG9wOiAtM3B4O1xyXG5cclxuICAgICAgJiAubnVtYmVyc19fZG90c3tcclxuICAgICAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAmX19kb3Rze1xyXG4gICAgbGluZS1oZWlnaHQ6IDBweDtcclxuICAgIGhlaWdodDogMTBweDtcclxuICB9XHJcbn1cclxuXHJcbi5pbnN0YXtcclxuICAuaW5zdGFCbG9ja3tcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICB9XHJcbiAgXHJcbiAgLmluc3RhSW5uZXJ7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gIH1cclxuXHJcbiAgJl9fdGl0bGV7XHJcbiAgICBoZWlnaHQ6IDc1cHg7XHJcbiAgfVxyXG5cclxuICAmX19pdGVtIGltZ3tcclxuICAgIHdpZHRoOiAyMTBweDtcclxuICB9XHJcbn1cclxuXHJcbi5mb290ZXJ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJGZpcnN0O1xyXG4gIGhlaWdodDogMTI1cHg7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAmSW5uZXJ7XHJcbiAgICBkaXNwbGF5OiBncmlkO1xyXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICB9XHJcbn1cclxuXHJcbi5jb3B5cmlnaHR7XHJcbiAgY29sb3I6ICR3aGl0ZTtcclxuICBmb250LXNpemU6IDE1cHg7XHJcblxyXG4gICZfX2NvbXBhbnl7XHJcbiAgICBtYXJnaW46IDA7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgfVxyXG5cclxuICAmX190ZXh0e1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gIH1cclxufVxyXG5cclxuLnNvY2lhbHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG5cclxuICAmX190ZXh0e1xyXG4gICAgZm9udC1zaXplOiAxN3B4O1xyXG4gICAgY29sb3I6ICR3aGl0ZTtcclxuICB9XHJcbn1cclxuXHJcbi5zb2NpYWxJY29uc3tcclxuXHJcbiAgJl9faWNvbntcclxuICAgIHdpZHRoOiAzNXB4O1xyXG4gICAgaGVpZ2h0OiAzNXB4O1xyXG4gIH1cclxufVxyXG5cclxuXHJcblxyXG4uYm94IHtcclxuICAmX2NvbC0yIHtcclxuICAgIGRpc3BsYXk6IGdyaWQ7XHJcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XHJcbiAgICBncmlkLWNvbHVtbi1nYXA6IDMwcHg7XHJcbiAgfVxyXG5cclxuICAmX2dyYXl7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjNmM2YzO1xyXG4gIH1cclxufVxyXG5cclxuLmJnLWJveCB7XHJcbiAgYmFja2dyb3VuZDogdXJsKCcuL3Jlc291cmNlcy9pbWFnZXMvYm94LWJnLmpwZycpIG5vLXJlcGVhdDtcclxuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xyXG4gIGJhY2tncm91bmQtcG9zaXRpb24teDogcmlnaHQ7XHJcbn1cclxuXHJcbi5taW5pLWJveHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGZsZXgtd3JhcDogd3JhcDtcclxuXHJcbiAgJl9ncmF5e1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI0YzRjNGMztcclxuICB9XHJcblxyXG4gICZfYmx1ZXtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNFNkVFRjg7XHJcbiAgfVxyXG5cclxuICAmX3Bpbmt7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjVFMEU5O1xyXG4gIH1cclxuXHJcbiAgJl9jZW50ZXJ7XHJcbiAgICBtYXJnaW46IGF1dG87XHJcbiAgfVxyXG5cclxuICAmX2JpZ3tcclxuICAgIHdpZHRoOiAzOTBweDtcclxuICAgIGhlaWdodDogMzAwcHg7XHJcbiAgfVxyXG59IiwiQGNoYXJzZXQgJ1VURi04JztcclxuQGltcG9ydCAnLi4vLi4vbWFpbi5zY3NzJztcclxuXHJcbi5zbGlkZXItYm94e1xyXG4gIEBpbmNsdWRlIHdyYXBwZXIoKTtcclxufVxyXG5cclxuLnNsaWRlci1yb3d7XHJcbiAgQGluY2x1ZGUgcm93LWZsZXgoKTtcclxuICBAaW5jbHVkZSBzaXplKDEwKTtcclxuICBAaW5jbHVkZSBzaGlmdC1sZWZ0KDEpO1xyXG59XHJcblxyXG4uY29udGFpbmVyX3NsaWRlci1jb250YWluZXJ7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4uc2xpZGVyX19pdGVtIHtcclxuICBoZWlnaHQ6IDQwMHB4O1xyXG59XHJcblxyXG4uc2xpZGVyLWJveF9fYXJyb3d7XHJcbiAgd2lkdGg6IDM2cHg7XHJcbiAgaGVpZ2h0OiAzNnB4O1xyXG4gIHBhZGRpbmc6IDEwcHggMTRweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAkZm91cnRoO1xyXG4gIGZpbGw6ICR3aGl0ZTtcclxuICBib3JkZXItcmFkaXVzOiAxOHB4O1xyXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuICB0b3A6IDUwJTtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgb3BhY2l0eTogMTtcclxuXHJcbiAgJl9uZXh0e1xyXG4gICAgcmlnaHQ6IDA7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgyMDAlLCAtMTAwJSk7XHJcbiAgfVxyXG5cclxuICAmX3ByZXZ7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoLTIwMCUsIC0xMDAlKTtcclxuICB9XHJcblxyXG4gICYuc2xpY2stZGlzYWJsZWR7XHJcbiAgICBvcGFjaXR5OiAuMztcclxuICB9XHJcbn1cclxuXHJcbi5zbGlkZXItYm94X19kb3RzIHtcclxuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XHJcbiAgcGFkZGluZzogMDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGN1cnNvcjogcG9pbnRlcjtcclxuICBsaXtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICRmb3VydGg7XHJcbiAgICB3aWR0aDogMTJweDtcclxuICAgIGhlaWdodDogMTJweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDZweDtcclxuICAgIG1hcmdpbjogMCAxMHB4O1xyXG4gICAgb3BhY2l0eTogLjM7XHJcblxyXG4gICAgJi5zbGljay1hY3RpdmV7XHJcbiAgICAgIG9wYWNpdHk6IDE7XHJcbiAgICB9XHJcbiAgfVxyXG4gIGJ1dHRvbntcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG59XHJcbiIsIkBjaGFyc2V0IFwiVVRGLThcIjtcbi8qISBub3JtYWxpemUuY3NzIHY4LjAuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cbiAqL1xuQGltcG9ydCB1cmwoLi4vbm9kZV9tb2R1bGVzL3NsaWNrLWNhcm91c2VsL3NsaWNrL3NsaWNrLmNzcyk7XG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovIH1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cbiAqL1xuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuXG4vKipcbiAqIFJlbmRlciB0aGUgYG1haW5gIGVsZW1lbnQgY29uc2lzdGVudGx5IGluIElFLlxuICovXG5tYWluIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwOyB9XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMSAqL1xuICBoZWlnaHQ6IDA7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgfVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5iLCBzdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuY29kZSwga2JkLCBzYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTsgfVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsIHN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTsgfVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbiwgaW5wdXQsIG9wdGdyb3VwLCBzZWxlY3QsIHRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxMDAlO1xuICAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIG1hcmdpbjogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5idXR0b24sIGlucHV0IHtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5idXR0b24sIHNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sIFt0eXBlPVwiYnV0dG9uXCJdLCBbdHlwZT1cInJlc2V0XCJdLCBbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLCBbdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lciwgW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lciwgW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZywgW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsIFt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsIFt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0OyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAvKiAxICovIH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxuICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXG4gKi9cblt0eXBlPVwiY2hlY2tib3hcIl0sIFt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sIFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqLyB9XG4gIFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXG4gKi9cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi8gfVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxuICovXG5kZXRhaWxzIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTsgfVxuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMCsuXG4gKi9cbnRlbXBsYXRlLCBbaGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC5cbiAqL1xuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxuaHRtbCB7XG4gIGNvbG9yOiAjMzQzMDM3O1xuICBmb250LWZhbWlseTogJ09wZW4gU2FucycsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMTdweDsgfVxuXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2IHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qIExheW91dCAqL1xuYm9keSB7XG4gIGRpc3BsYXk6IGZsZXg7IH1cblxuaGVhZGVyLmhlYWRlciB7XG4gIGhlaWdodDogNTBweDsgfVxuXG5hc2lkZS5hc2lkZSB7XG4gIHdpZHRoOiAyNTBweDsgfVxuXG4uY29udGVudCB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgLSAyNTBweCk7IH1cblxuLmgxIHtcbiAgZm9udC1zaXplOiA1NXB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXdlaWdodDogODAwOyB9XG5cbi5oMiB7XG4gIGZvbnQtc2l6ZTogNDJweDtcbiAgZm9udC13ZWlnaHQ6IDgwMDsgfVxuXG4uaDMge1xuICBmb250LXNpemU6IDM2cHg7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7IH1cbiAgLmgzX3doaXRlIHtcbiAgICBjb2xvcjogI2ZmZjsgfVxuXG4uaDQge1xuICBmb250LXNpemU6IDI4cHg7IH1cblxuLmg1IHtcbiAgZm9udC1zaXplOiAyMnB4OyB9XG4gIC5oNV93aGl0ZSB7XG4gICAgY29sb3I6ICNmZmY7IH1cblxuLmg2IHtcbiAgZm9udC1zaXplOiAxN3B4OyB9XG5cbi50ZXh0Q2VudGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbi53aGl0ZSB7XG4gIGNvbG9yOiAjZmZmOyB9XG5cbi5hY2NlbnQge1xuICBjb2xvcjogI0REMTc4MTsgfVxuXG4uc2VtaUJvbGQge1xuICBmb250LXdlaWdodDogNjAwOyB9XG5cbi5ib2xkIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDsgfVxuXG4uZXh0cmFCb2xkIHtcbiAgZm9udC13ZWlnaHQ6IDgwMDsgfVxuXG4udXBwZXIge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG5cbi50ZXh0U2l6ZTQ2IHtcbiAgZm9udC1zaXplOiA0NnB4OyB9XG5cbi50ZXh0U2l6ZTIyIHtcbiAgZm9udC1zaXplOiAyMnB4OyB9XG5cbi50ZXh0U2l6ZTE0IHtcbiAgZm9udC1zaXplOiAxNHB4OyB9XG5cbi50ZXh0U2l6ZTEzIHtcbiAgZm9udC1zaXplOiAxM3B4OyB9XG5cbi50ZXh0IHtcbiAgbGluZS1oZWlnaHQ6IDI0cHg7IH1cbiAgLnRleHRfb3BhY2l0eTUge1xuICAgIG9wYWNpdHk6IC41OyB9XG5cbi8qINCo0YDQuNGE0YLRiyAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgc3JjOiB1cmwoXCJmb250cy9PcGVuU2Fucy53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiZm9udHMvT3BlblNhbnMud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCJmb250cy9PcGVuU2Fucy50dGZcIikgZm9ybWF0KFwidHRmXCIpO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgc3JjOiB1cmwoXCJmb250cy9PcGVuU2Fucy1TZW1pYm9sZC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiZm9udHMvT3BlblNhbnMtU2VtaWJvbGQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCJmb250cy9PcGVuU2Fucy1TZW1pYm9sZC50dGZcIikgZm9ybWF0KFwidHRmXCIpO1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgc3JjOiB1cmwoXCJmb250cy9PcGVuU2Fucy1Cb2xkLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCJmb250cy9PcGVuU2Fucy1Cb2xkLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiZm9udHMvT3BlblNhbnMtQm9sZC50dGZcIikgZm9ybWF0KFwidHRmXCIpO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgc3JjOiB1cmwoXCJmb250cy9PcGVuU2Fucy1FeHRyYWJvbGQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcImZvbnRzL09wZW5TYW5zLUV4dHJhYm9sZC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcImZvbnRzL09wZW5TYW5zLUV4dHJhYm9sZC50dGZcIikgZm9ybWF0KFwidHRmXCIpO1xuICBmb250LXdlaWdodDogODAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7IH1cblxuLyogTWFyZ2luIFggKi9cbi5teDEwIHtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gIG1hcmdpbi1yaWdodDogMTBweDsgfVxuXG4ubXgyMCB7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDIwcHg7IH1cblxuLm14MzAge1xuICBtYXJnaW4tbGVmdDogMzBweDtcbiAgbWFyZ2luLXJpZ2h0OiAzMHB4OyB9XG5cbi8qIE1hcmdpbiBZICovXG4ubXkzMCB7XG4gIG1hcmdpbi10b3A6IDMwcHg7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7IH1cblxuLm15NDAge1xuICBtYXJnaW4tdG9wOiA0MHB4O1xuICBtYXJnaW4tYm90dG9tOiA0MHB4OyB9XG5cbi5teTUwIHtcbiAgbWFyZ2luLXRvcDogNTBweDtcbiAgbWFyZ2luLWJvdHRvbTogNTBweDsgfVxuXG4ubXk4MCB7XG4gIG1hcmdpbi10b3A6IDgwcHg7XG4gIG1hcmdpbi1ib3R0b206IDgwcHg7IH1cblxuLyogTWFyZ2luIFJpZ2h0ICovXG4ubXIzMCB7XG4gIG1hcmdpbi1yaWdodDogMzBweDsgfVxuXG4ubXI1MCB7XG4gIG1hcmdpbi1yaWdodDogNTBweDsgfVxuXG4vKiBNYXJnaW4gVG9wICovXG4ubXQxMCB7XG4gIG1hcmdpbi10b3A6IDEwcHg7IH1cblxuLm10MjAge1xuICBtYXJnaW4tdG9wOiAyMHB4OyB9XG5cbi5tdDMwIHtcbiAgbWFyZ2luLXRvcDogMzBweDsgfVxuXG4ubXQ2MCB7XG4gIG1hcmdpbi10b3A6IDYwcHg7IH1cblxuLyogTWFyZ2luIEJvdHRvbSAqL1xuLm1iMCB7XG4gIG1hcmdpbi1ib3R0b206IDBweDsgfVxuXG4ubWIxMCB7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7IH1cblxuLm1iMTUge1xuICBtYXJnaW4tYm90dG9tOiAxNXB4OyB9XG5cbi5tYjIwIHtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDsgfVxuXG4ubWIzMCB7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7IH1cblxuLm1iMzUge1xuICBtYXJnaW4tYm90dG9tOiAzNXB4OyB9XG5cbi5tYjQwIHtcbiAgbWFyZ2luLWJvdHRvbTogNDBweDsgfVxuXG4ubWI1MCB7XG4gIG1hcmdpbi1ib3R0b206IDUwcHg7IH1cblxuLm1iNTUge1xuICBtYXJnaW4tYm90dG9tOiA1NXB4OyB9XG5cbi5tYjc1IHtcbiAgbWFyZ2luLWJvdHRvbTogNzVweDsgfVxuXG4ubWI5MCB7XG4gIG1hcmdpbi1ib3R0b206IDkwcHg7IH1cblxuLyogUGFkZGluZyAqL1xuLnA2MCB7XG4gIHBhZGRpbmc6IDYwcHg7IH1cblxuLyogUGFkZGluZyBYICovXG4ucHgyMCB7XG4gIHBhZGRpbmctbGVmdDogMjBweDtcbiAgcGFkZGluZy1yaWdodDogMjBweDsgfVxuXG4ucHgzMCB7XG4gIHBhZGRpbmctbGVmdDogMzBweDtcbiAgcGFkZGluZy1yaWdodDogMzBweDsgfVxuXG4ucHg1MCB7XG4gIHBhZGRpbmctbGVmdDogNTBweDtcbiAgcGFkZGluZy1yaWdodDogNTBweDsgfVxuXG4vKiBQYWRkaW5nIFkgKi9cbi5weTEwIHtcbiAgcGFkZGluZy10b3A6IDEwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAxMHB4OyB9XG5cbi5weTIwIHtcbiAgcGFkZGluZy10b3A6IDIwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAyMHB4OyB9XG5cbi5weTMwIHtcbiAgcGFkZGluZy10b3A6IDMwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAzMHB4OyB9XG5cbi5weTM1IHtcbiAgcGFkZGluZy10b3A6IDM1cHg7XG4gIHBhZGRpbmctYm90dG9tOiAzNXB4OyB9XG5cbi5weTYwIHtcbiAgcGFkZGluZy10b3A6IDYwcHg7XG4gIHBhZGRpbmctYm90dG9tOiA2MHB4OyB9XG5cbi5weTgwIHtcbiAgcGFkZGluZy10b3A6IDgwcHg7XG4gIHBhZGRpbmctYm90dG9tOiA4MHB4OyB9XG5cbi8qIFBhZGRpbmcgVG9wICovXG4ucHQ4MCB7XG4gIHBhZGRpbmctdG9wOiA4MHB4OyB9XG5cbi8qIFBhZGRpbmcgQm90dG9tICovXG4ucGIxMjAge1xuICBwYWRkaW5nLWJvdHRvbTogMTIwcHg7IH1cblxuLyogUGFkZGluZyBMZWZ0ICovXG4ucGwyMCB7XG4gIHBhZGRpbmctbGVmdDogMjBweDsgfVxuXG5cblxuQGNoYXJzZXQgXCJVVEYtOFwiO1xuLyohIG5vcm1hbGl6ZS5jc3MgdjguMC4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxuICovXG5AaW1wb3J0IHVybCguLi9ub2RlX21vZHVsZXMvc2xpY2stY2Fyb3VzZWwvc2xpY2svc2xpY2suY3NzKTtcbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi8gfVxuXG4vKiBTZWN0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qKlxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXG4gKi9cbm1haW4ge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7IH1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAvKiAxICovXG4gIGhlaWdodDogMDtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovIH1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cbmIsIHN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLCBrYmQsIHNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1Yiwgc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07IH1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07IH1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lOyB9XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLCBpbnB1dCwgb3B0Z3JvdXAsIHNlbGVjdCwgdGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7XG4gIC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cbmJ1dHRvbiwgaW5wdXQge1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbiwgc2VsZWN0IHtcbiAgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbiwgW3R5cGU9XCJidXR0b25cIl0sIFt0eXBlPVwicmVzZXRcIl0sIFt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsIFt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLCBbdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLCBbdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDsgfVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuYnV0dG9uOi1tb3otZm9jdXNyaW5nLCBbdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZywgW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZywgW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIC8qIDEgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cbiAqL1xuW3R5cGU9XCJjaGVja2JveFwiXSwgW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbiwgW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xuICAvKiAyICovIH1cbiAgW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqLyB9XG5cbi8qIEludGVyYWN0aXZlXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFIDEwKywgYW5kIEZpcmVmb3guXG4gKi9cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtOyB9XG5cbi8qIE1pc2NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cbiAqL1xudGVtcGxhdGUsIFtoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxuICovXG4qIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG5odG1sIHtcbiAgY29sb3I6ICMzNDMwMzc7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxN3B4OyB9XG5cbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xuICBtYXJnaW46IDA7IH1cblxuLyogTGF5b3V0ICovXG5ib2R5IHtcbiAgZGlzcGxheTogZmxleDsgfVxuXG5oZWFkZXIuaGVhZGVyIHtcbiAgaGVpZ2h0OiA1MHB4OyB9XG5cbmFzaWRlLmFzaWRlIHtcbiAgd2lkdGg6IDI1MHB4OyB9XG5cbi5jb250ZW50IHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDI1MHB4KTsgfVxuXG4uaDEge1xuICBmb250LXNpemU6IDU1cHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtd2VpZ2h0OiA4MDA7IH1cblxuLmgyIHtcbiAgZm9udC1zaXplOiA0MnB4O1xuICBmb250LXdlaWdodDogODAwOyB9XG5cbi5oMyB7XG4gIGZvbnQtc2l6ZTogMzZweDtcbiAgZm9udC13ZWlnaHQ6IDcwMDsgfVxuICAuaDNfd2hpdGUge1xuICAgIGNvbG9yOiAjZmZmOyB9XG5cbi5oNCB7XG4gIGZvbnQtc2l6ZTogMjhweDsgfVxuXG4uaDUge1xuICBmb250LXNpemU6IDIycHg7IH1cbiAgLmg1X3doaXRlIHtcbiAgICBjb2xvcjogI2ZmZjsgfVxuXG4uaDYge1xuICBmb250LXNpemU6IDE3cHg7IH1cblxuLnRleHRDZW50ZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuLndoaXRlIHtcbiAgY29sb3I6ICNmZmY7IH1cblxuLmFjY2VudCB7XG4gIGNvbG9yOiAjREQxNzgxOyB9XG5cbi5zZW1pQm9sZCB7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7IH1cblxuLmJvbGQge1xuICBmb250LXdlaWdodDogNzAwOyB9XG5cbi5leHRyYUJvbGQge1xuICBmb250LXdlaWdodDogODAwOyB9XG5cbi51cHBlciB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cblxuLnRleHRTaXplNDYge1xuICBmb250LXNpemU6IDQ2cHg7IH1cblxuLnRleHRTaXplMjIge1xuICBmb250LXNpemU6IDIycHg7IH1cblxuLnRleHRTaXplMTQge1xuICBmb250LXNpemU6IDE0cHg7IH1cblxuLnRleHRTaXplMTMge1xuICBmb250LXNpemU6IDEzcHg7IH1cblxuLnRleHQge1xuICBsaW5lLWhlaWdodDogMjRweDsgfVxuICAudGV4dF9vcGFjaXR5NSB7XG4gICAgb3BhY2l0eTogLjU7IH1cblxuLyog0KjRgNC40YTRgtGLICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xuICBzcmM6IHVybChcImZvbnRzL09wZW5TYW5zLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCJmb250cy9PcGVuU2Fucy53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcImZvbnRzL09wZW5TYW5zLnR0ZlwiKSBmb3JtYXQoXCJ0dGZcIik7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xuICBzcmM6IHVybChcImZvbnRzL09wZW5TYW5zLVNlbWlib2xkLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCJmb250cy9PcGVuU2Fucy1TZW1pYm9sZC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcImZvbnRzL09wZW5TYW5zLVNlbWlib2xkLnR0ZlwiKSBmb3JtYXQoXCJ0dGZcIik7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xuICBzcmM6IHVybChcImZvbnRzL09wZW5TYW5zLUJvbGQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcImZvbnRzL09wZW5TYW5zLUJvbGQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCJmb250cy9PcGVuU2Fucy1Cb2xkLnR0ZlwiKSBmb3JtYXQoXCJ0dGZcIik7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xuICBzcmM6IHVybChcImZvbnRzL09wZW5TYW5zLUV4dHJhYm9sZC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiZm9udHMvT3BlblNhbnMtRXh0cmFib2xkLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiZm9udHMvT3BlblNhbnMtRXh0cmFib2xkLnR0ZlwiKSBmb3JtYXQoXCJ0dGZcIik7XG4gIGZvbnQtd2VpZ2h0OiA4MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDsgfVxuXG4vKiBNYXJnaW4gWCAqL1xuLm14MTAge1xuICBtYXJnaW4tbGVmdDogMTBweDtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4OyB9XG5cbi5teDIwIHtcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XG4gIG1hcmdpbi1yaWdodDogMjBweDsgfVxuXG4ubXgzMCB7XG4gIG1hcmdpbi1sZWZ0OiAzMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDMwcHg7IH1cblxuLyogTWFyZ2luIFkgKi9cbi5teTMwIHtcbiAgbWFyZ2luLXRvcDogMzBweDtcbiAgbWFyZ2luLWJvdHRvbTogMzBweDsgfVxuXG4ubXk0MCB7XG4gIG1hcmdpbi10b3A6IDQwcHg7XG4gIG1hcmdpbi1ib3R0b206IDQwcHg7IH1cblxuLm15NTAge1xuICBtYXJnaW4tdG9wOiA1MHB4O1xuICBtYXJnaW4tYm90dG9tOiA1MHB4OyB9XG5cbi5teTgwIHtcbiAgbWFyZ2luLXRvcDogODBweDtcbiAgbWFyZ2luLWJvdHRvbTogODBweDsgfVxuXG4vKiBNYXJnaW4gUmlnaHQgKi9cbi5tcjMwIHtcbiAgbWFyZ2luLXJpZ2h0OiAzMHB4OyB9XG5cbi5tcjUwIHtcbiAgbWFyZ2luLXJpZ2h0OiA1MHB4OyB9XG5cbi8qIE1hcmdpbiBUb3AgKi9cbi5tdDEwIHtcbiAgbWFyZ2luLXRvcDogMTBweDsgfVxuXG4ubXQyMCB7XG4gIG1hcmdpbi10b3A6IDIwcHg7IH1cblxuLm10MzAge1xuICBtYXJnaW4tdG9wOiAzMHB4OyB9XG5cbi5tdDYwIHtcbiAgbWFyZ2luLXRvcDogNjBweDsgfVxuXG4vKiBNYXJnaW4gQm90dG9tICovXG4ubWIwIHtcbiAgbWFyZ2luLWJvdHRvbTogMHB4OyB9XG5cbi5tYjEwIHtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDsgfVxuXG4ubWIxNSB7XG4gIG1hcmdpbi1ib3R0b206IDE1cHg7IH1cblxuLm1iMjAge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4OyB9XG5cbi5tYjMwIHtcbiAgbWFyZ2luLWJvdHRvbTogMzBweDsgfVxuXG4ubWIzNSB7XG4gIG1hcmdpbi1ib3R0b206IDM1cHg7IH1cblxuLm1iNDAge1xuICBtYXJnaW4tYm90dG9tOiA0MHB4OyB9XG5cbi5tYjUwIHtcbiAgbWFyZ2luLWJvdHRvbTogNTBweDsgfVxuXG4ubWI1NSB7XG4gIG1hcmdpbi1ib3R0b206IDU1cHg7IH1cblxuLm1iNzUge1xuICBtYXJnaW4tYm90dG9tOiA3NXB4OyB9XG5cbi5tYjkwIHtcbiAgbWFyZ2luLWJvdHRvbTogOTBweDsgfVxuXG4vKiBQYWRkaW5nICovXG4ucDYwIHtcbiAgcGFkZGluZzogNjBweDsgfVxuXG4vKiBQYWRkaW5nIFggKi9cbi5weDIwIHtcbiAgcGFkZGluZy1sZWZ0OiAyMHB4O1xuICBwYWRkaW5nLXJpZ2h0OiAyMHB4OyB9XG5cbi5weDMwIHtcbiAgcGFkZGluZy1sZWZ0OiAzMHB4O1xuICBwYWRkaW5nLXJpZ2h0OiAzMHB4OyB9XG5cbi5weDUwIHtcbiAgcGFkZGluZy1sZWZ0OiA1MHB4O1xuICBwYWRkaW5nLXJpZ2h0OiA1MHB4OyB9XG5cbi8qIFBhZGRpbmcgWSAqL1xuLnB5MTAge1xuICBwYWRkaW5nLXRvcDogMTBweDtcbiAgcGFkZGluZy1ib3R0b206IDEwcHg7IH1cblxuLnB5MjAge1xuICBwYWRkaW5nLXRvcDogMjBweDtcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7IH1cblxuLnB5MzAge1xuICBwYWRkaW5nLXRvcDogMzBweDtcbiAgcGFkZGluZy1ib3R0b206IDMwcHg7IH1cblxuLnB5MzUge1xuICBwYWRkaW5nLXRvcDogMzVweDtcbiAgcGFkZGluZy1ib3R0b206IDM1cHg7IH1cblxuLnB5NjAge1xuICBwYWRkaW5nLXRvcDogNjBweDtcbiAgcGFkZGluZy1ib3R0b206IDYwcHg7IH1cblxuLnB5ODAge1xuICBwYWRkaW5nLXRvcDogODBweDtcbiAgcGFkZGluZy1ib3R0b206IDgwcHg7IH1cblxuLyogUGFkZGluZyBUb3AgKi9cbi5wdDgwIHtcbiAgcGFkZGluZy10b3A6IDgwcHg7IH1cblxuLyogUGFkZGluZyBCb3R0b20gKi9cbi5wYjEyMCB7XG4gIHBhZGRpbmctYm90dG9tOiAxMjBweDsgfVxuXG4vKiBQYWRkaW5nIExlZnQgKi9cbi5wbDIwIHtcbiAgcGFkZGluZy1sZWZ0OiAyMHB4OyB9XG5cbi5hc2lkZSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMzNDMwMzc7IH1cbiAgLmFzaWRlIC5sb2dvLWNvbnRhaW5lciB7XG4gICAgbWFyZ2luLWJvdHRvbTogNTBweDtcbiAgICBtYXJnaW4tbGVmdDogMTRweDsgfVxuXG4ubG9nbyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGZvbnQtc2l6ZTogMjVweDsgfVxuICAubG9nbyAubG9nb19faWNvbiB7XG4gICAgd2lkdGg6IDQwcHg7XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIGZpbGw6ICNmZmY7XG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4OyB9XG4gIC5sb2dvIC5sb2dvX190ZXh0IHtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBmb250LXdlaWdodDogNDAwO1xuICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cbiAgICAubG9nbyAubG9nb19fdGV4dCBzcGFuIHtcbiAgICAgIGZvbnQtd2VpZ2h0OiA2MDA7IH1cblxuLmxpbmsge1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmc6IDIwcHggMjVweCAyMHB4IDIwcHg7IH1cbiAgLmxpbms6aG92ZXIge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNERDE3ODE7IH1cbiAgLmxpbmtfX2ljb24ge1xuICAgIHdpZHRoOiAyMHB4O1xuICAgIGhlaWdodDogMjBweDtcbiAgICBmaWxsOiAjZmZmO1xuICAgIG1hcmdpbi1yaWdodDogMjBweDsgfVxuICAubGlua19faWNvbi1hcnJvdyB7XG4gICAgd2lkdGg6IDEwcHg7XG4gICAgaGVpZ2h0OiAxMHB4O1xuICAgIGZpbGw6ICNmZmY7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHJpZ2h0OiAyMHB4OyB9XG4gIC5saW5rX190ZXh0IHtcbiAgICBmb250LXNpemU6IDEzcHg7IH1cblxuLmRlZmF1bHQtYnV0dG9uIHtcbiAgcGFkZGluZzogMjBweCAyNXB4O1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgY3Vyc29yOiBwb2ludGVyOyB9XG4gIC5kZWZhdWx0LWJ1dHRvbl9faWNvbi1iZyB7XG4gICAgd2lkdGg6IDI1cHg7XG4gICAgaGVpZ2h0OiAyNXB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNERDE3ODE7XG4gICAgcGFkZGluZzogNXB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDEycHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIG1hcmdpbi1yaWdodDogMjBweDsgfVxuICAuZGVmYXVsdC1idXR0b25fX2ljb24ge1xuICAgIHdpZHRoOiAxMHB4O1xuICAgIGhlaWdodDogMTBweDtcbiAgICBmaWxsOiAjZmZmOyB9XG5cbi5tb2RhbC1ibG9ja19fY3VydGFpbiB7XG4gIHdpZHRoOiAxMDB2dztcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNTIsIDQ4LCA1NSwgMC43KTtcbiAgZGlzcGxheTogbm9uZTtcbiAgei1pbmRleDogMTsgfVxuXG4ubW9kYWwge1xuICB3aWR0aDogNzY4cHg7XG4gIGhlaWdodDogZml0LWNvbnRlbnQ7XG4gIHRvcDogMDtcbiAgYm90dG9tOiAwO1xuICBsZWZ0OiAwO1xuICByaWdodDogMDtcbiAgcG9zaXRpb246IGZpeGVkO1xuICBwYWRkaW5nOiAxMDBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YzZjNmMztcbiAgbWFyZ2luOiBhdXRvO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGRpc3BsYXk6IG5vbmU7XG4gIHotaW5kZXg6IDI7IH1cblxuLm1vZGFsLWlubmVyIHtcbiAgd2lkdGg6IDI4MHB4O1xuICBtYXJnaW46IGF1dG87XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4ubW9kYWxfX2Nsb3NlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRvcDogNTBweDtcbiAgcmlnaHQ6IDY1cHg7XG4gIHdpZHRoOiAyNXB4O1xuICBoZWlnaHQ6IDI1cHg7XG4gIGZpbGw6ICMzNDMwMzc7XG4gIHotaW5kZXg6IDM7IH1cblxuLm1vZGFsX19oZWFkZXIge1xuICBmb250LXNpemU6IDQ2cHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtd2VpZ2h0OiA4MDA7IH1cblxuLm1vZGFsX19oaW50IHtcbiAgY29sb3I6ICM5YjliOWI7XG4gIGZvbnQtc2l6ZTogMTRweDsgfVxuICAubW9kYWxfX2hpbnRfYWxpZ24tbGVmdCB7XG4gICAgdGV4dC1hbGlnbjogbGVmdDsgfVxuXG4ubW9kYWxfX2FjY2VudC10ZXh0IHtcbiAgY29sb3I6ICNERDE3ODE7IH1cblxuLmlucHV0IHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDAlOyB9XG4gIC5pbnB1dCAuaW5wdXRfX2ZpZWxkIHtcbiAgICBwYWRkaW5nOiAxMHB4IDE1cHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI2U2ZTZlNjtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAgIC5pbnB1dCAuaW5wdXRfX2ZpZWxkOmZvY3VzIHtcbiAgICAgIG91dGxpbmU6IDA7XG4gICAgICBib3JkZXItY29sb3I6ICM5YjliOWI7IH1cbiAgICAuaW5wdXQgLmlucHV0X19maWVsZDpmb2N1cyArIC5pbnB1dF9faWNvbiB7XG4gICAgICBmaWxsOiAjOWI5YjliO1xuICAgICAgb3BhY2l0eTogMTsgfVxuICAuaW5wdXQgLmlucHV0X19pY29uIHtcbiAgICB3aWR0aDogMTVweDtcbiAgICBoZWlnaHQ6IDIwcHg7XG4gICAgZmlsbDogI2U2ZTZlNjtcbiAgICBvcGFjaXR5OiAuNTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgcmlnaHQ6IDIwcHg7XG4gICAgdG9wOiAxMXB4OyB9XG4gIC5pbnB1dF9fZXJyb3Ige1xuICAgIGZvbnQtc2l6ZTogMTRweDtcbiAgICBjb2xvcjogI0REMTc4MTtcbiAgICBtYXJnaW46IDEwcHggMDtcbiAgICBkaXNwbGF5OiBub25lOyB9XG5cbi52aWRlby1ibG9ja19fY3VydGFpbiB7XG4gIHdpZHRoOiAxMDB2dztcbiAgaGVpZ2h0OiAxMDB2aDtcbiAgcG9zaXRpb246IGZpeGVkO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNTIsIDQ4LCA1NSwgMC43KTtcbiAgZGlzcGxheTogbm9uZTtcbiAgei1pbmRleDogMTsgfVxuXG4udmlkZW8tYmxvY2tfX2ZyYW1lIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgbWFyZ2luOiBhdXRvO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogMDtcbiAgbGVmdDogMDtcbiAgcmlnaHQ6IDA7XG4gIGJvdHRvbTogMDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIHotaW5kZXg6IDI7IH1cblxuLnZpZGVvX19jbG9zZSB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0b3A6IDUwcHg7XG4gIHJpZ2h0OiA2NXB4O1xuICB3aWR0aDogMjVweDtcbiAgaGVpZ2h0OiAyNXB4O1xuICBmaWxsOiAjZmZmO1xuICB6LWluZGV4OiAzOyB9XG5cbkBjaGFyc2V0IFwiVVRGLThcIjtcbi8qISBub3JtYWxpemUuY3NzIHY4LjAuMSB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cbi8qIERvY3VtZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluIGlPUy5cbiAqL1xuQGltcG9ydCB1cmwoLi4vbm9kZV9tb2R1bGVzL3NsaWNrLWNhcm91c2VsL3NsaWNrL3NsaWNrLmNzcyk7XG5odG1sIHtcbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAyICovIH1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2Vycy5cbiAqL1xuYm9keSB7XG4gIG1hcmdpbjogMDsgfVxuXG4vKipcbiAqIFJlbmRlciB0aGUgYG1haW5gIGVsZW1lbnQgY29uc2lzdGVudGx5IGluIElFLlxuICovXG5tYWluIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXG4gKiBgYXJ0aWNsZWAgY29udGV4dHMgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgU2FmYXJpLlxuICovXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwOyB9XG5cbi8qIEdyb3VwaW5nIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuaHIge1xuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDtcbiAgLyogMSAqL1xuICBoZWlnaHQ6IDA7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnByZSB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGdyYXkgYmFja2dyb3VuZCBvbiBhY3RpdmUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmEge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDsgfVxuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgYm90dG9tIGJvcmRlciBpbiBDaHJvbWUgNTctXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxuICovXG5iLCBzdHJvbmcge1xuICBmb250LXdlaWdodDogYm9sZGVyOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xuY29kZSwga2JkLCBzYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqL1xuc21hbGwge1xuICBmb250LXNpemU6IDgwJTsgfVxuXG4vKipcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxuICogYWxsIGJyb3dzZXJzLlxuICovXG5zdWIsIHN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAuXG4gKi9cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTsgfVxuXG4vKiBGb3Jtc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ2hhbmdlIHRoZSBmb250IHN0eWxlcyBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbiwgaW5wdXQsIG9wdGdyb3VwLCBzZWxlY3QsIHRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IGluaGVyaXQ7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxMDAlO1xuICAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIG1hcmdpbjogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXG4gKiAxLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlLlxuICovXG5idXR0b24sIGlucHV0IHtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxuICogMS4gUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBGaXJlZm94LlxuICovXG5idXR0b24sIHNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sIFt0eXBlPVwiYnV0dG9uXCJdLCBbdHlwZT1cInJlc2V0XCJdLCBbdHlwZT1cInN1Ym1pdFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLCBbdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lciwgW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lciwgW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZywgW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsIFt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsIFt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0OyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5maWVsZHNldCB7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjc1ZW0gMC42MjVlbTsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXG4gKiAyLiBDb3JyZWN0IHRoZSBjb2xvciBpbmhlcml0YW5jZSBmcm9tIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gSUUuXG4gKiAzLiBSZW1vdmUgdGhlIHBhZGRpbmcgc28gZGV2ZWxvcGVycyBhcmUgbm90IGNhdWdodCBvdXQgd2hlbiB0aGV5IHplcm8gb3V0XG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cbiAqL1xubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDtcbiAgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTtcbiAgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsO1xuICAvKiAxICovIH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5wcm9ncmVzcyB7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUgMTArLlxuICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAuXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAuXG4gKi9cblt0eXBlPVwiY2hlY2tib3hcIl0sIFt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sIFt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcbiAgaGVpZ2h0OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuW3R5cGU9XCJzZWFyY2hcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcbiAgLyogMSAqL1xuICBvdXRsaW5lLW9mZnNldDogLTJweDtcbiAgLyogMiAqLyB9XG4gIFt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIHBhZGRpbmcgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXG4gKi9cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqIDIuIENoYW5nZSBmb250IHByb3BlcnRpZXMgdG8gYGluaGVyaXRgIGluIFNhZmFyaS5cbiAqL1xuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uO1xuICAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7XG4gIC8qIDIgKi8gfVxuXG4vKiBJbnRlcmFjdGl2ZVxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBFZGdlLCBJRSAxMCssIGFuZCBGaXJlZm94LlxuICovXG5kZXRhaWxzIHtcbiAgZGlzcGxheTogYmxvY2s7IH1cblxuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cbiAqL1xuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTsgfVxuXG4vKiBNaXNjXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMCsuXG4gKi9cbnRlbXBsYXRlLCBbaGlkZGVuXSB7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC5cbiAqL1xuKiB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxuaHRtbCB7XG4gIGNvbG9yOiAjMzQzMDM3O1xuICBmb250LWZhbWlseTogJ09wZW4gU2FucycsIHNhbnMtc2VyaWY7XG4gIGZvbnQtc2l6ZTogMTdweDsgfVxuXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2IHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qIExheW91dCAqL1xuYm9keSB7XG4gIGRpc3BsYXk6IGZsZXg7IH1cblxuaGVhZGVyLmhlYWRlciB7XG4gIGhlaWdodDogNTBweDsgfVxuXG5hc2lkZS5hc2lkZSB7XG4gIHdpZHRoOiAyNTBweDsgfVxuXG4uY29udGVudCB7XG4gIHdpZHRoOiBjYWxjKDEwMCUgLSAyNTBweCk7IH1cblxuLmgxIHtcbiAgZm9udC1zaXplOiA1NXB4O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXdlaWdodDogODAwOyB9XG5cbi5oMiB7XG4gIGZvbnQtc2l6ZTogNDJweDtcbiAgZm9udC13ZWlnaHQ6IDgwMDsgfVxuXG4uaDMge1xuICBmb250LXNpemU6IDM2cHg7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7IH1cbiAgLmgzX3doaXRlIHtcbiAgICBjb2xvcjogI2ZmZjsgfVxuXG4uaDQge1xuICBmb250LXNpemU6IDI4cHg7IH1cblxuLmg1IHtcbiAgZm9udC1zaXplOiAyMnB4OyB9XG4gIC5oNV93aGl0ZSB7XG4gICAgY29sb3I6ICNmZmY7IH1cblxuLmg2IHtcbiAgZm9udC1zaXplOiAxN3B4OyB9XG5cbi50ZXh0Q2VudGVyIHtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbi53aGl0ZSB7XG4gIGNvbG9yOiAjZmZmOyB9XG5cbi5hY2NlbnQge1xuICBjb2xvcjogI0REMTc4MTsgfVxuXG4uc2VtaUJvbGQge1xuICBmb250LXdlaWdodDogNjAwOyB9XG5cbi5ib2xkIHtcbiAgZm9udC13ZWlnaHQ6IDcwMDsgfVxuXG4uZXh0cmFCb2xkIHtcbiAgZm9udC13ZWlnaHQ6IDgwMDsgfVxuXG4udXBwZXIge1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlOyB9XG5cbi50ZXh0U2l6ZTQ2IHtcbiAgZm9udC1zaXplOiA0NnB4OyB9XG5cbi50ZXh0U2l6ZTIyIHtcbiAgZm9udC1zaXplOiAyMnB4OyB9XG5cbi50ZXh0U2l6ZTE0IHtcbiAgZm9udC1zaXplOiAxNHB4OyB9XG5cbi50ZXh0U2l6ZTEzIHtcbiAgZm9udC1zaXplOiAxM3B4OyB9XG5cbi50ZXh0IHtcbiAgbGluZS1oZWlnaHQ6IDI0cHg7IH1cbiAgLnRleHRfb3BhY2l0eTUge1xuICAgIG9wYWNpdHk6IC41OyB9XG5cbi8qINCo0YDQuNGE0YLRiyAqL1xuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgc3JjOiB1cmwoXCJmb250cy9PcGVuU2Fucy53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiZm9udHMvT3BlblNhbnMud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCJmb250cy9PcGVuU2Fucy50dGZcIikgZm9ybWF0KFwidHRmXCIpO1xuICBmb250LXdlaWdodDogNDAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgc3JjOiB1cmwoXCJmb250cy9PcGVuU2Fucy1TZW1pYm9sZC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiZm9udHMvT3BlblNhbnMtU2VtaWJvbGQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCJmb250cy9PcGVuU2Fucy1TZW1pYm9sZC50dGZcIikgZm9ybWF0KFwidHRmXCIpO1xuICBmb250LXdlaWdodDogNjAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgc3JjOiB1cmwoXCJmb250cy9PcGVuU2Fucy1Cb2xkLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCJmb250cy9PcGVuU2Fucy1Cb2xkLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiZm9udHMvT3BlblNhbnMtQm9sZC50dGZcIikgZm9ybWF0KFwidHRmXCIpO1xuICBmb250LXdlaWdodDogNzAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7IH1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJztcbiAgc3JjOiB1cmwoXCJmb250cy9PcGVuU2Fucy1FeHRyYWJvbGQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcImZvbnRzL09wZW5TYW5zLUV4dHJhYm9sZC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcImZvbnRzL09wZW5TYW5zLUV4dHJhYm9sZC50dGZcIikgZm9ybWF0KFwidHRmXCIpO1xuICBmb250LXdlaWdodDogODAwO1xuICBmb250LXN0eWxlOiBub3JtYWw7IH1cblxuLyogTWFyZ2luIFggKi9cbi5teDEwIHtcbiAgbWFyZ2luLWxlZnQ6IDEwcHg7XG4gIG1hcmdpbi1yaWdodDogMTBweDsgfVxuXG4ubXgyMCB7XG4gIG1hcmdpbi1sZWZ0OiAyMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDIwcHg7IH1cblxuLm14MzAge1xuICBtYXJnaW4tbGVmdDogMzBweDtcbiAgbWFyZ2luLXJpZ2h0OiAzMHB4OyB9XG5cbi8qIE1hcmdpbiBZICovXG4ubXkzMCB7XG4gIG1hcmdpbi10b3A6IDMwcHg7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7IH1cblxuLm15NDAge1xuICBtYXJnaW4tdG9wOiA0MHB4O1xuICBtYXJnaW4tYm90dG9tOiA0MHB4OyB9XG5cbi5teTUwIHtcbiAgbWFyZ2luLXRvcDogNTBweDtcbiAgbWFyZ2luLWJvdHRvbTogNTBweDsgfVxuXG4ubXk4MCB7XG4gIG1hcmdpbi10b3A6IDgwcHg7XG4gIG1hcmdpbi1ib3R0b206IDgwcHg7IH1cblxuLyogTWFyZ2luIFJpZ2h0ICovXG4ubXIzMCB7XG4gIG1hcmdpbi1yaWdodDogMzBweDsgfVxuXG4ubXI1MCB7XG4gIG1hcmdpbi1yaWdodDogNTBweDsgfVxuXG4vKiBNYXJnaW4gVG9wICovXG4ubXQxMCB7XG4gIG1hcmdpbi10b3A6IDEwcHg7IH1cblxuLm10MjAge1xuICBtYXJnaW4tdG9wOiAyMHB4OyB9XG5cbi5tdDMwIHtcbiAgbWFyZ2luLXRvcDogMzBweDsgfVxuXG4ubXQ2MCB7XG4gIG1hcmdpbi10b3A6IDYwcHg7IH1cblxuLyogTWFyZ2luIEJvdHRvbSAqL1xuLm1iMCB7XG4gIG1hcmdpbi1ib3R0b206IDBweDsgfVxuXG4ubWIxMCB7XG4gIG1hcmdpbi1ib3R0b206IDEwcHg7IH1cblxuLm1iMTUge1xuICBtYXJnaW4tYm90dG9tOiAxNXB4OyB9XG5cbi5tYjIwIHtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDsgfVxuXG4ubWIzMCB7XG4gIG1hcmdpbi1ib3R0b206IDMwcHg7IH1cblxuLm1iMzUge1xuICBtYXJnaW4tYm90dG9tOiAzNXB4OyB9XG5cbi5tYjQwIHtcbiAgbWFyZ2luLWJvdHRvbTogNDBweDsgfVxuXG4ubWI1MCB7XG4gIG1hcmdpbi1ib3R0b206IDUwcHg7IH1cblxuLm1iNTUge1xuICBtYXJnaW4tYm90dG9tOiA1NXB4OyB9XG5cbi5tYjc1IHtcbiAgbWFyZ2luLWJvdHRvbTogNzVweDsgfVxuXG4ubWI5MCB7XG4gIG1hcmdpbi1ib3R0b206IDkwcHg7IH1cblxuLyogUGFkZGluZyAqL1xuLnA2MCB7XG4gIHBhZGRpbmc6IDYwcHg7IH1cblxuLyogUGFkZGluZyBYICovXG4ucHgyMCB7XG4gIHBhZGRpbmctbGVmdDogMjBweDtcbiAgcGFkZGluZy1yaWdodDogMjBweDsgfVxuXG4ucHgzMCB7XG4gIHBhZGRpbmctbGVmdDogMzBweDtcbiAgcGFkZGluZy1yaWdodDogMzBweDsgfVxuXG4ucHg1MCB7XG4gIHBhZGRpbmctbGVmdDogNTBweDtcbiAgcGFkZGluZy1yaWdodDogNTBweDsgfVxuXG4vKiBQYWRkaW5nIFkgKi9cbi5weTEwIHtcbiAgcGFkZGluZy10b3A6IDEwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAxMHB4OyB9XG5cbi5weTIwIHtcbiAgcGFkZGluZy10b3A6IDIwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAyMHB4OyB9XG5cbi5weTMwIHtcbiAgcGFkZGluZy10b3A6IDMwcHg7XG4gIHBhZGRpbmctYm90dG9tOiAzMHB4OyB9XG5cbi5weTM1IHtcbiAgcGFkZGluZy10b3A6IDM1cHg7XG4gIHBhZGRpbmctYm90dG9tOiAzNXB4OyB9XG5cbi5weTYwIHtcbiAgcGFkZGluZy10b3A6IDYwcHg7XG4gIHBhZGRpbmctYm90dG9tOiA2MHB4OyB9XG5cbi5weTgwIHtcbiAgcGFkZGluZy10b3A6IDgwcHg7XG4gIHBhZGRpbmctYm90dG9tOiA4MHB4OyB9XG5cbi8qIFBhZGRpbmcgVG9wICovXG4ucHQ4MCB7XG4gIHBhZGRpbmctdG9wOiA4MHB4OyB9XG5cbi8qIFBhZGRpbmcgQm90dG9tICovXG4ucGIxMjAge1xuICBwYWRkaW5nLWJvdHRvbTogMTIwcHg7IH1cblxuLyogUGFkZGluZyBMZWZ0ICovXG4ucGwyMCB7XG4gIHBhZGRpbmctbGVmdDogMjBweDsgfVxuXG4uaGVhZGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzM0MzAzNztcbiAgaGVpZ2h0OiA1MHB4OyB9XG4gIC5oZWFkZXJXcmFwcGVyIHtcbiAgICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG4gICAgcGFkZGluZy1yaWdodDogMTBweDsgfVxuICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgICAuaGVhZGVyV3JhcHBlciB7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMTVweDtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMTVweDsgfSB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzIwcHgpIHtcbiAgICAgIC5oZWFkZXJXcmFwcGVyIHtcbiAgICAgICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICAgICAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4OyB9IH1cbiAgLmhlYWRlclJvdyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgbWFyZ2luLWxlZnQ6IC0xMHB4O1xuICAgIG1hcmdpbi1yaWdodDogLTEwcHg7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDsgfVxuXG5AY2hhcnNldCBcIlVURi04XCI7XG4vKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG4vKiBEb2N1bWVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXG4gKi9cbkBpbXBvcnQgdXJsKC4uL25vZGVfbW9kdWxlcy9zbGljay1jYXJvdXNlbC9zbGljay9zbGljay5jc3MpO1xuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqLyB9XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7IH1cblxuLyoqXG4gKiBSZW5kZXIgdGhlIGBtYWluYCBlbGVtZW50IGNvbnNpc3RlbnRseSBpbiBJRS5cbiAqL1xubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDsgfVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDEgKi9cbiAgaGVpZ2h0OiAwO1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuYiwgc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmNvZGUsIGtiZCwgc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7IH1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuc3ViLCBzdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxuICovXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7IH1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sIGlucHV0LCBvcHRncm91cCwgc2VsZWN0LCB0ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuYnV0dG9uLCBpbnB1dCB7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uLCBzZWxlY3Qge1xuICAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLCBbdHlwZT1cImJ1dHRvblwiXSwgW3R5cGU9XCJyZXNldFwiXSwgW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lciwgW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsIFt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsIFt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5idXR0b246LW1vei1mb2N1c3JpbmcsIFt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLCBbdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLCBbdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuZmllbGRzZXQge1xuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7XG4gIC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgLyogMSAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLlxuICovXG5bdHlwZT1cImNoZWNrYm94XCJdLCBbdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLCBbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bzsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIC8qIDIgKi8gfVxuICBbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovIH1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cbiAqL1xuZGV0YWlscyB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07IH1cblxuLyogTWlzY1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxuICovXG50ZW1wbGF0ZSwgW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXG4gKi9cbioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbmh0bWwge1xuICBjb2xvcjogIzM0MzAzNztcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDE3cHg7IH1cblxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiB7XG4gIG1hcmdpbjogMDsgfVxuXG4vKiBMYXlvdXQgKi9cbmJvZHkge1xuICBkaXNwbGF5OiBmbGV4OyB9XG5cbmhlYWRlci5oZWFkZXIge1xuICBoZWlnaHQ6IDUwcHg7IH1cblxuYXNpZGUuYXNpZGUge1xuICB3aWR0aDogMjUwcHg7IH1cblxuLmNvbnRlbnQge1xuICB3aWR0aDogY2FsYygxMDAlIC0gMjUwcHgpOyB9XG5cbi5oMSB7XG4gIGZvbnQtc2l6ZTogNTVweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC13ZWlnaHQ6IDgwMDsgfVxuXG4uaDIge1xuICBmb250LXNpemU6IDQycHg7XG4gIGZvbnQtd2VpZ2h0OiA4MDA7IH1cblxuLmgzIHtcbiAgZm9udC1zaXplOiAzNnB4O1xuICBmb250LXdlaWdodDogNzAwOyB9XG4gIC5oM193aGl0ZSB7XG4gICAgY29sb3I6ICNmZmY7IH1cblxuLmg0IHtcbiAgZm9udC1zaXplOiAyOHB4OyB9XG5cbi5oNSB7XG4gIGZvbnQtc2l6ZTogMjJweDsgfVxuICAuaDVfd2hpdGUge1xuICAgIGNvbG9yOiAjZmZmOyB9XG5cbi5oNiB7XG4gIGZvbnQtc2l6ZTogMTdweDsgfVxuXG4udGV4dENlbnRlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4ud2hpdGUge1xuICBjb2xvcjogI2ZmZjsgfVxuXG4uYWNjZW50IHtcbiAgY29sb3I6ICNERDE3ODE7IH1cblxuLnNlbWlCb2xkIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDsgfVxuXG4uYm9sZCB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7IH1cblxuLmV4dHJhQm9sZCB7XG4gIGZvbnQtd2VpZ2h0OiA4MDA7IH1cblxuLnVwcGVyIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuXG4udGV4dFNpemU0NiB7XG4gIGZvbnQtc2l6ZTogNDZweDsgfVxuXG4udGV4dFNpemUyMiB7XG4gIGZvbnQtc2l6ZTogMjJweDsgfVxuXG4udGV4dFNpemUxNCB7XG4gIGZvbnQtc2l6ZTogMTRweDsgfVxuXG4udGV4dFNpemUxMyB7XG4gIGZvbnQtc2l6ZTogMTNweDsgfVxuXG4udGV4dCB7XG4gIGxpbmUtaGVpZ2h0OiAyNHB4OyB9XG4gIC50ZXh0X29wYWNpdHk1IHtcbiAgICBvcGFjaXR5OiAuNTsgfVxuXG4vKiDQqNGA0LjRhNGC0YsgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIHNyYzogdXJsKFwiZm9udHMvT3BlblNhbnMud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcImZvbnRzL09wZW5TYW5zLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiZm9udHMvT3BlblNhbnMudHRmXCIpIGZvcm1hdChcInR0ZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIHNyYzogdXJsKFwiZm9udHMvT3BlblNhbnMtU2VtaWJvbGQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcImZvbnRzL09wZW5TYW5zLVNlbWlib2xkLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiZm9udHMvT3BlblNhbnMtU2VtaWJvbGQudHRmXCIpIGZvcm1hdChcInR0ZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIHNyYzogdXJsKFwiZm9udHMvT3BlblNhbnMtQm9sZC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiZm9udHMvT3BlblNhbnMtQm9sZC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcImZvbnRzL09wZW5TYW5zLUJvbGQudHRmXCIpIGZvcm1hdChcInR0ZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIHNyYzogdXJsKFwiZm9udHMvT3BlblNhbnMtRXh0cmFib2xkLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCJmb250cy9PcGVuU2Fucy1FeHRyYWJvbGQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCJmb250cy9PcGVuU2Fucy1FeHRyYWJvbGQudHRmXCIpIGZvcm1hdChcInR0ZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDgwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG5cbi8qIE1hcmdpbiBYICovXG4ubXgxMCB7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7IH1cblxuLm14MjAge1xuICBtYXJnaW4tbGVmdDogMjBweDtcbiAgbWFyZ2luLXJpZ2h0OiAyMHB4OyB9XG5cbi5teDMwIHtcbiAgbWFyZ2luLWxlZnQ6IDMwcHg7XG4gIG1hcmdpbi1yaWdodDogMzBweDsgfVxuXG4vKiBNYXJnaW4gWSAqL1xuLm15MzAge1xuICBtYXJnaW4tdG9wOiAzMHB4O1xuICBtYXJnaW4tYm90dG9tOiAzMHB4OyB9XG5cbi5teTQwIHtcbiAgbWFyZ2luLXRvcDogNDBweDtcbiAgbWFyZ2luLWJvdHRvbTogNDBweDsgfVxuXG4ubXk1MCB7XG4gIG1hcmdpbi10b3A6IDUwcHg7XG4gIG1hcmdpbi1ib3R0b206IDUwcHg7IH1cblxuLm15ODAge1xuICBtYXJnaW4tdG9wOiA4MHB4O1xuICBtYXJnaW4tYm90dG9tOiA4MHB4OyB9XG5cbi8qIE1hcmdpbiBSaWdodCAqL1xuLm1yMzAge1xuICBtYXJnaW4tcmlnaHQ6IDMwcHg7IH1cblxuLm1yNTAge1xuICBtYXJnaW4tcmlnaHQ6IDUwcHg7IH1cblxuLyogTWFyZ2luIFRvcCAqL1xuLm10MTAge1xuICBtYXJnaW4tdG9wOiAxMHB4OyB9XG5cbi5tdDIwIHtcbiAgbWFyZ2luLXRvcDogMjBweDsgfVxuXG4ubXQzMCB7XG4gIG1hcmdpbi10b3A6IDMwcHg7IH1cblxuLm10NjAge1xuICBtYXJnaW4tdG9wOiA2MHB4OyB9XG5cbi8qIE1hcmdpbiBCb3R0b20gKi9cbi5tYjAge1xuICBtYXJnaW4tYm90dG9tOiAwcHg7IH1cblxuLm1iMTAge1xuICBtYXJnaW4tYm90dG9tOiAxMHB4OyB9XG5cbi5tYjE1IHtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDsgfVxuXG4ubWIyMCB7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7IH1cblxuLm1iMzAge1xuICBtYXJnaW4tYm90dG9tOiAzMHB4OyB9XG5cbi5tYjM1IHtcbiAgbWFyZ2luLWJvdHRvbTogMzVweDsgfVxuXG4ubWI0MCB7XG4gIG1hcmdpbi1ib3R0b206IDQwcHg7IH1cblxuLm1iNTAge1xuICBtYXJnaW4tYm90dG9tOiA1MHB4OyB9XG5cbi5tYjU1IHtcbiAgbWFyZ2luLWJvdHRvbTogNTVweDsgfVxuXG4ubWI3NSB7XG4gIG1hcmdpbi1ib3R0b206IDc1cHg7IH1cblxuLm1iOTAge1xuICBtYXJnaW4tYm90dG9tOiA5MHB4OyB9XG5cbi8qIFBhZGRpbmcgKi9cbi5wNjAge1xuICBwYWRkaW5nOiA2MHB4OyB9XG5cbi8qIFBhZGRpbmcgWCAqL1xuLnB4MjAge1xuICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDIwcHg7IH1cblxuLnB4MzAge1xuICBwYWRkaW5nLWxlZnQ6IDMwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDMwcHg7IH1cblxuLnB4NTAge1xuICBwYWRkaW5nLWxlZnQ6IDUwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDUwcHg7IH1cblxuLyogUGFkZGluZyBZICovXG4ucHkxMCB7XG4gIHBhZGRpbmctdG9wOiAxMHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMTBweDsgfVxuXG4ucHkyMCB7XG4gIHBhZGRpbmctdG9wOiAyMHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMjBweDsgfVxuXG4ucHkzMCB7XG4gIHBhZGRpbmctdG9wOiAzMHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMzBweDsgfVxuXG4ucHkzNSB7XG4gIHBhZGRpbmctdG9wOiAzNXB4O1xuICBwYWRkaW5nLWJvdHRvbTogMzVweDsgfVxuXG4ucHk2MCB7XG4gIHBhZGRpbmctdG9wOiA2MHB4O1xuICBwYWRkaW5nLWJvdHRvbTogNjBweDsgfVxuXG4ucHk4MCB7XG4gIHBhZGRpbmctdG9wOiA4MHB4O1xuICBwYWRkaW5nLWJvdHRvbTogODBweDsgfVxuXG4vKiBQYWRkaW5nIFRvcCAqL1xuLnB0ODAge1xuICBwYWRkaW5nLXRvcDogODBweDsgfVxuXG4vKiBQYWRkaW5nIEJvdHRvbSAqL1xuLnBiMTIwIHtcbiAgcGFkZGluZy1ib3R0b206IDEyMHB4OyB9XG5cbi8qIFBhZGRpbmcgTGVmdCAqL1xuLnBsMjAge1xuICBwYWRkaW5nLWxlZnQ6IDIwcHg7IH1cblxuLm5hdmlnYXRpb24ge1xuICBoZWlnaHQ6IDIxMHB4O1xuICBiYWNrZ3JvdW5kOiB1cmwoXCIuL3Jlc291cmNlcy9pbWFnZXMvbmF2aWdhdGlvbi1iZy5qcGdcIikgbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uLXg6IGNlbnRlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgcGFkZGluZy10b3A6IDQwcHg7XG4gIHBhZGRpbmctYm90dG9tOiA3MHB4OyB9XG5cbi5saW5rLWJhY2sge1xuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgY29sb3I6ICNmZmY7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lOyB9XG4gIC5saW5rLWJhY2sgLmxpbmstYmFja19faWNvbiB7XG4gICAgd2lkdGg6IDE1cHg7XG4gICAgaGVpZ2h0OiAxNXB4O1xuICAgIGZpbGw6ICNmZmY7XG4gICAgbWFyZ2luLXJpZ2h0OiAxMHB4OyB9XG4gIC5saW5rLWJhY2s6YWN0aXZlIHtcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxuXG4ubmF2aWdhdGlvbl9fcGFnZSB7XG4gIGNvbG9yOiAjZmZmO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBmb250LXdlaWdodDogODAwO1xuICBmb250LXNpemU6IDU2cHg7IH1cblxuQGNoYXJzZXQgXCJVVEYtOFwiO1xuLyohIG5vcm1hbGl6ZS5jc3MgdjguMC4xIHwgTUlUIExpY2Vuc2UgfCBnaXRodWIuY29tL25lY29sYXMvbm9ybWFsaXplLmNzcyAqL1xuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW4gaU9TLlxuICovXG5AaW1wb3J0IHVybCguLi9ub2RlX21vZHVsZXMvc2xpY2stY2Fyb3VzZWwvc2xpY2svc2xpY2suY3NzKTtcbmh0bWwge1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDIgKi8gfVxuXG4vKiBTZWN0aW9uc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzLlxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qKlxuICogUmVuZGVyIHRoZSBgbWFpbmAgZWxlbWVudCBjb25zaXN0ZW50bHkgaW4gSUUuXG4gKi9cbm1haW4ge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7IH1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAvKiAxICovXG4gIGhlaWdodDogMDtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovIH1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyB9XG5cbi8qKlxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIENocm9tZSA1Ny1cbiAqIDIuIEFkZCB0aGUgY29ycmVjdCB0ZXh0IGRlY29yYXRpb24gaW4gQ2hyb21lLCBFZGdlLCBJRSwgT3BlcmEsIGFuZCBTYWZhcmkuXG4gKi9cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTtcbiAgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTtcbiAgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHdlaWdodCBpbiBDaHJvbWUsIEVkZ2UsIGFuZCBTYWZhcmkuXG4gKi9cbmIsIHN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLCBrYmQsIHNhbXAge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1Yiwgc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgfVxuXG5zdWIge1xuICBib3R0b206IC0wLjI1ZW07IH1cblxuc3VwIHtcbiAgdG9wOiAtMC41ZW07IH1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC5cbiAqL1xuaW1nIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lOyB9XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGZvbnQgc3R5bGVzIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLCBpbnB1dCwgb3B0Z3JvdXAsIHNlbGVjdCwgdGV4dGFyZWEge1xuICBmb250LWZhbWlseTogaW5oZXJpdDtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDEwMCU7XG4gIC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDEgKi9cbiAgbWFyZ2luOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBTaG93IHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXG4gKi9cbmJ1dHRvbiwgaW5wdXQge1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbiwgc2VsZWN0IHtcbiAgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbiwgW3R5cGU9XCJidXR0b25cIl0sIFt0eXBlPVwicmVzZXRcIl0sIFt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5idXR0b246Oi1tb3otZm9jdXMtaW5uZXIsIFt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLCBbdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLCBbdHlwZT1cInN1Ym1pdFwiXTo6LW1vei1mb2N1cy1pbm5lciB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbiAgcGFkZGluZzogMDsgfVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuYnV0dG9uOi1tb3otZm9jdXNyaW5nLCBbdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZywgW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZywgW3R5cGU9XCJzdWJtaXRcIl06LW1vei1mb2N1c3Jpbmcge1xuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7IH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmZpZWxkc2V0IHtcbiAgcGFkZGluZzogMC4zNWVtIDAuNzVlbSAwLjYyNWVtOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIC8qIDEgKi8gfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCB2ZXJ0aWNhbCBhbGlnbm1lbnQgaW4gQ2hyb21lLCBGaXJlZm94LCBhbmQgT3BlcmEuXG4gKi9cbnByb2dyZXNzIHtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBkZWZhdWx0IHZlcnRpY2FsIHNjcm9sbGJhciBpbiBJRSAxMCsuXG4gKi9cbnRleHRhcmVhIHtcbiAgb3ZlcmZsb3c6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSB0aGUgcGFkZGluZyBpbiBJRSAxMC5cbiAqL1xuW3R5cGU9XCJjaGVja2JveFwiXSwgW3R5cGU9XCJyYWRpb1wiXSB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgcGFkZGluZzogMDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbiwgW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cbiAqIDIuIENvcnJlY3QgdGhlIG91dGxpbmUgc3R5bGUgaW4gU2FmYXJpLlxuICovXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xuICAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4O1xuICAvKiAyICovIH1cbiAgW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqLyB9XG5cbi8qIEludGVyYWN0aXZlXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFIDEwKywgYW5kIEZpcmVmb3guXG4gKi9cbmRldGFpbHMge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zdW1tYXJ5IHtcbiAgZGlzcGxheTogbGlzdC1pdGVtOyB9XG5cbi8qIE1pc2NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwKy5cbiAqL1xudGVtcGxhdGUsIFtoaWRkZW5dIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLlxuICovXG4qIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxuXG5odG1sIHtcbiAgY29sb3I6ICMzNDMwMzc7XG4gIGZvbnQtZmFtaWx5OiAnT3BlbiBTYW5zJywgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxN3B4OyB9XG5cbmgxLCBoMiwgaDMsIGg0LCBoNSwgaDYge1xuICBtYXJnaW46IDA7IH1cblxuLyogTGF5b3V0ICovXG5ib2R5IHtcbiAgZGlzcGxheTogZmxleDsgfVxuXG5oZWFkZXIuaGVhZGVyIHtcbiAgaGVpZ2h0OiA1MHB4OyB9XG5cbmFzaWRlLmFzaWRlIHtcbiAgd2lkdGg6IDI1MHB4OyB9XG5cbi5jb250ZW50IHtcbiAgd2lkdGg6IGNhbGMoMTAwJSAtIDI1MHB4KTsgfVxuXG4uaDEge1xuICBmb250LXNpemU6IDU1cHg7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtd2VpZ2h0OiA4MDA7IH1cblxuLmgyIHtcbiAgZm9udC1zaXplOiA0MnB4O1xuICBmb250LXdlaWdodDogODAwOyB9XG5cbi5oMyB7XG4gIGZvbnQtc2l6ZTogMzZweDtcbiAgZm9udC13ZWlnaHQ6IDcwMDsgfVxuICAuaDNfd2hpdGUge1xuICAgIGNvbG9yOiAjZmZmOyB9XG5cbi5oNCB7XG4gIGZvbnQtc2l6ZTogMjhweDsgfVxuXG4uaDUge1xuICBmb250LXNpemU6IDIycHg7IH1cbiAgLmg1X3doaXRlIHtcbiAgICBjb2xvcjogI2ZmZjsgfVxuXG4uaDYge1xuICBmb250LXNpemU6IDE3cHg7IH1cblxuLnRleHRDZW50ZXIge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7IH1cblxuLndoaXRlIHtcbiAgY29sb3I6ICNmZmY7IH1cblxuLmFjY2VudCB7XG4gIGNvbG9yOiAjREQxNzgxOyB9XG5cbi5zZW1pQm9sZCB7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7IH1cblxuLmJvbGQge1xuICBmb250LXdlaWdodDogNzAwOyB9XG5cbi5leHRyYUJvbGQge1xuICBmb250LXdlaWdodDogODAwOyB9XG5cbi51cHBlciB7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7IH1cblxuLnRleHRTaXplNDYge1xuICBmb250LXNpemU6IDQ2cHg7IH1cblxuLnRleHRTaXplMjIge1xuICBmb250LXNpemU6IDIycHg7IH1cblxuLnRleHRTaXplMTQge1xuICBmb250LXNpemU6IDE0cHg7IH1cblxuLnRleHRTaXplMTMge1xuICBmb250LXNpemU6IDEzcHg7IH1cblxuLnRleHQge1xuICBsaW5lLWhlaWdodDogMjRweDsgfVxuICAudGV4dF9vcGFjaXR5NSB7XG4gICAgb3BhY2l0eTogLjU7IH1cblxuLyog0KjRgNC40YTRgtGLICovXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xuICBzcmM6IHVybChcImZvbnRzL09wZW5TYW5zLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCJmb250cy9PcGVuU2Fucy53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcImZvbnRzL09wZW5TYW5zLnR0ZlwiKSBmb3JtYXQoXCJ0dGZcIik7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xuICBzcmM6IHVybChcImZvbnRzL09wZW5TYW5zLVNlbWlib2xkLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCJmb250cy9PcGVuU2Fucy1TZW1pYm9sZC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcImZvbnRzL09wZW5TYW5zLVNlbWlib2xkLnR0ZlwiKSBmb3JtYXQoXCJ0dGZcIik7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xuICBzcmM6IHVybChcImZvbnRzL09wZW5TYW5zLUJvbGQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcImZvbnRzL09wZW5TYW5zLUJvbGQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCJmb250cy9PcGVuU2Fucy1Cb2xkLnR0ZlwiKSBmb3JtYXQoXCJ0dGZcIik7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDsgfVxuXG5AZm9udC1mYWNlIHtcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnO1xuICBzcmM6IHVybChcImZvbnRzL09wZW5TYW5zLUV4dHJhYm9sZC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiZm9udHMvT3BlblNhbnMtRXh0cmFib2xkLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiZm9udHMvT3BlblNhbnMtRXh0cmFib2xkLnR0ZlwiKSBmb3JtYXQoXCJ0dGZcIik7XG4gIGZvbnQtd2VpZ2h0OiA4MDA7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDsgfVxuXG4vKiBNYXJnaW4gWCAqL1xuLm14MTAge1xuICBtYXJnaW4tbGVmdDogMTBweDtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4OyB9XG5cbi5teDIwIHtcbiAgbWFyZ2luLWxlZnQ6IDIwcHg7XG4gIG1hcmdpbi1yaWdodDogMjBweDsgfVxuXG4ubXgzMCB7XG4gIG1hcmdpbi1sZWZ0OiAzMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDMwcHg7IH1cblxuLyogTWFyZ2luIFkgKi9cbi5teTMwIHtcbiAgbWFyZ2luLXRvcDogMzBweDtcbiAgbWFyZ2luLWJvdHRvbTogMzBweDsgfVxuXG4ubXk0MCB7XG4gIG1hcmdpbi10b3A6IDQwcHg7XG4gIG1hcmdpbi1ib3R0b206IDQwcHg7IH1cblxuLm15NTAge1xuICBtYXJnaW4tdG9wOiA1MHB4O1xuICBtYXJnaW4tYm90dG9tOiA1MHB4OyB9XG5cbi5teTgwIHtcbiAgbWFyZ2luLXRvcDogODBweDtcbiAgbWFyZ2luLWJvdHRvbTogODBweDsgfVxuXG4vKiBNYXJnaW4gUmlnaHQgKi9cbi5tcjMwIHtcbiAgbWFyZ2luLXJpZ2h0OiAzMHB4OyB9XG5cbi5tcjUwIHtcbiAgbWFyZ2luLXJpZ2h0OiA1MHB4OyB9XG5cbi8qIE1hcmdpbiBUb3AgKi9cbi5tdDEwIHtcbiAgbWFyZ2luLXRvcDogMTBweDsgfVxuXG4ubXQyMCB7XG4gIG1hcmdpbi10b3A6IDIwcHg7IH1cblxuLm10MzAge1xuICBtYXJnaW4tdG9wOiAzMHB4OyB9XG5cbi5tdDYwIHtcbiAgbWFyZ2luLXRvcDogNjBweDsgfVxuXG4vKiBNYXJnaW4gQm90dG9tICovXG4ubWIwIHtcbiAgbWFyZ2luLWJvdHRvbTogMHB4OyB9XG5cbi5tYjEwIHtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDsgfVxuXG4ubWIxNSB7XG4gIG1hcmdpbi1ib3R0b206IDE1cHg7IH1cblxuLm1iMjAge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4OyB9XG5cbi5tYjMwIHtcbiAgbWFyZ2luLWJvdHRvbTogMzBweDsgfVxuXG4ubWIzNSB7XG4gIG1hcmdpbi1ib3R0b206IDM1cHg7IH1cblxuLm1iNDAge1xuICBtYXJnaW4tYm90dG9tOiA0MHB4OyB9XG5cbi5tYjUwIHtcbiAgbWFyZ2luLWJvdHRvbTogNTBweDsgfVxuXG4ubWI1NSB7XG4gIG1hcmdpbi1ib3R0b206IDU1cHg7IH1cblxuLm1iNzUge1xuICBtYXJnaW4tYm90dG9tOiA3NXB4OyB9XG5cbi5tYjkwIHtcbiAgbWFyZ2luLWJvdHRvbTogOTBweDsgfVxuXG4vKiBQYWRkaW5nICovXG4ucDYwIHtcbiAgcGFkZGluZzogNjBweDsgfVxuXG4vKiBQYWRkaW5nIFggKi9cbi5weDIwIHtcbiAgcGFkZGluZy1sZWZ0OiAyMHB4O1xuICBwYWRkaW5nLXJpZ2h0OiAyMHB4OyB9XG5cbi5weDMwIHtcbiAgcGFkZGluZy1sZWZ0OiAzMHB4O1xuICBwYWRkaW5nLXJpZ2h0OiAzMHB4OyB9XG5cbi5weDUwIHtcbiAgcGFkZGluZy1sZWZ0OiA1MHB4O1xuICBwYWRkaW5nLXJpZ2h0OiA1MHB4OyB9XG5cbi8qIFBhZGRpbmcgWSAqL1xuLnB5MTAge1xuICBwYWRkaW5nLXRvcDogMTBweDtcbiAgcGFkZGluZy1ib3R0b206IDEwcHg7IH1cblxuLnB5MjAge1xuICBwYWRkaW5nLXRvcDogMjBweDtcbiAgcGFkZGluZy1ib3R0b206IDIwcHg7IH1cblxuLnB5MzAge1xuICBwYWRkaW5nLXRvcDogMzBweDtcbiAgcGFkZGluZy1ib3R0b206IDMwcHg7IH1cblxuLnB5MzUge1xuICBwYWRkaW5nLXRvcDogMzVweDtcbiAgcGFkZGluZy1ib3R0b206IDM1cHg7IH1cblxuLnB5NjAge1xuICBwYWRkaW5nLXRvcDogNjBweDtcbiAgcGFkZGluZy1ib3R0b206IDYwcHg7IH1cblxuLnB5ODAge1xuICBwYWRkaW5nLXRvcDogODBweDtcbiAgcGFkZGluZy1ib3R0b206IDgwcHg7IH1cblxuLyogUGFkZGluZyBUb3AgKi9cbi5wdDgwIHtcbiAgcGFkZGluZy10b3A6IDgwcHg7IH1cblxuLyogUGFkZGluZyBCb3R0b20gKi9cbi5wYjEyMCB7XG4gIHBhZGRpbmctYm90dG9tOiAxMjBweDsgfVxuXG4vKiBQYWRkaW5nIExlZnQgKi9cbi5wbDIwIHtcbiAgcGFkZGluZy1sZWZ0OiAyMHB4OyB9XG5cbi5jb250YWluZXIge1xuICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmctbGVmdDogMTBweDtcbiAgcGFkZGluZy1yaWdodDogMTBweDsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5jb250YWluZXIge1xuICAgICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICAgICAgcGFkZGluZy1yaWdodDogMTVweDsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDMyMHB4KSB7XG4gICAgLmNvbnRhaW5lciB7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4OyB9IH1cblxuLnRleHRCb3gtcm93IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBtYXJnaW4tbGVmdDogLTEwcHg7XG4gIG1hcmdpbi1yaWdodDogLTEwcHg7XG4gIG1hcmdpbi1sZWZ0OiBjYWxjKDguMzMzMzMlICsgMTBweCk7XG4gIHdpZHRoOiBjYWxjKDU4LjMzMzMzJSAtIDIwcHgpO1xuICBtYXJnaW4tdG9wOiA3MHB4O1xuICBtYXJnaW4tYm90dG9tOiA3MHB4OyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLnRleHRCb3gtcm93IHtcbiAgICAgIG1hcmdpbi1sZWZ0OiBjYWxjKDAlICsgMTBweCk7IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzMjBweCkge1xuICAgIC50ZXh0Qm94LXJvdyB7XG4gICAgICB3aWR0aDogY2FsYygzMy4zMzMzMyUgLSAyMHB4KTsgfSB9XG5cbi5saXN0Qm94IHtcbiAgbWF4LXdpZHRoOiAxMjAwcHg7XG4gIG1hcmdpbjogMCBhdXRvO1xuICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDEwcHg7XG4gIGJhY2tncm91bmQ6IHVybChcIi4vcmVzb3VyY2VzL2ltYWdlcy9ib3gtYmcuanBnXCIpIG5vLXJlcGVhdDtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbi14OiByaWdodDsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5saXN0Qm94IHtcbiAgICAgIHBhZGRpbmctbGVmdDogMTVweDtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzMjBweCkge1xuICAgIC5saXN0Qm94IHtcbiAgICAgIHBhZGRpbmctbGVmdDogMTVweDtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7IH0gfVxuXG4ubGlzdEJveC1yb3cge1xuICBtYXJnaW4tYm90dG9tOiA1NXB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIG1hcmdpbi1sZWZ0OiAtMTBweDtcbiAgbWFyZ2luLXJpZ2h0OiAtMTBweDtcbiAgbWFyZ2luLXJpZ2h0OiBjYWxjKDguMzMzMzMlICsgMTBweCk7XG4gIG1hcmdpbi1sZWZ0OiBjYWxjKDguMzMzMzMlICsgMTBweCk7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAubGlzdEJveC1yb3cge1xuICAgICAgbWFyZ2luLWxlZnQ6IGNhbGMoMCUgKyAxMHB4KTsgfSB9XG5cbi5saXN0Qm94LWNvbCB7XG4gIHdpZHRoOiBjYWxjKDQxLjY2NjY3JSAtIDIwcHgpOyB9XG4gIC5saXN0Qm94LWNvbDpmaXJzdC1jaGlsZCB7XG4gICAgbWFyZ2luLXJpZ2h0OiA4MHB4OyB9XG5cbi5saXN0SXRlbSB7XG4gIHBhZGRpbmctbGVmdDogMjBweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDsgfVxuICAubGlzdEl0ZW1fYmx1ZS1tYXJrZXJzIHtcbiAgICBjb2xvcjogIzNCOTFFNjsgfVxuICAubGlzdEl0ZW1fbnVtYmVycyB7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBkZWNpbWFsOyB9XG4gIC5saXN0SXRlbV9jaGVja2VycyB7XG4gICAgbGlzdC1zdHlsZS10eXBlOiBub25lOyB9XG4gIC5saXN0SXRlbV9faXRlbUljb24ge1xuICAgIHdpZHRoOiAyMHB4O1xuICAgIGhlaWdodDogMjBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM0I5MUU2O1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgcGFkZGluZzogNXB4O1xuICAgIGZpbGw6ICNmZmY7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC0xMDAlLCAxMCUpOyB9XG4gICAgLmxpc3RJdGVtX19pdGVtSWNvbl9jaGVjay1ibGFjayB7XG4gICAgICBmaWxsOiAjMDAwOyB9XG4gICAgLmxpc3RJdGVtX19pdGVtSWNvbiArIC5saXN0SXRlbV9faXRlbSB7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7IH1cbiAgLmxpc3RJdGVtIC5saXN0SXRlbV9faXRlbSAubGlzdEl0ZW1fX3RleHQge1xuICAgIGNvbG9yOiAjMzQzMDM3O1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgbGluZS1oZWlnaHQ6IDI0cHg7IH1cbiAgICAubGlzdEl0ZW0gLmxpc3RJdGVtX19pdGVtIC5saXN0SXRlbV9fdGV4dF93aGl0ZSB7XG4gICAgICBjb2xvcjogI2ZmZjsgfVxuXG4ubGlua3Mtcm93IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBtYXJnaW4tbGVmdDogLTEwcHg7XG4gIG1hcmdpbi1yaWdodDogLTEwcHg7XG4gIG1hcmdpbi1sZWZ0OiBjYWxjKDguMzMzMzMlICsgMTBweCk7XG4gIG1hcmdpbi1ib3R0b206IDcwcHg7IH1cbiAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAubGlua3Mtcm93IHtcbiAgICAgIG1hcmdpbi1sZWZ0OiBjYWxjKDAlICsgMTBweCk7IH0gfVxuXG4ubGlua3MtY29sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xuICBtYXJnaW4tbGVmdDogMTBweDtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDQwcHg7IH1cblxuLmxpbmtCb3gge1xuICBjb2xvcjogIzNCOTFFNjtcbiAgZmlsbDogIzNCOTFFNjtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBkaXNwbGF5OiBpbmxpbmUtZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAubGlua0JveF9faWNvbiB7XG4gICAgd2lkdGg6IDIwcHg7XG4gICAgaGVpZ2h0OiAyMHB4O1xuICAgIG1hcmdpbi1yaWdodDogMTBweDsgfVxuICAubGlua0JveF9fdGV4dCB7XG4gICAgZm9udC1zaXplOiAxN3B4O1xuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyB9XG4gIC5saW5rQm94OnZpc2l0ZWQge1xuICAgIGNvbG9yOiAjNzhiNWYwOyB9XG5cbi5ncmFkaWVudC1yb3cge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIG1hcmdpbi1sZWZ0OiAtMTBweDtcbiAgbWFyZ2luLXJpZ2h0OiAtMTBweDtcbiAgbWFyZ2luLWxlZnQ6IGNhbGMoOC4zMzMzMyUgKyAxMHB4KTtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbiAgcGFkZGluZzogMTVweCAwO1xuICBmb250LXNpemU6IDIycHg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBjb2xvcjogI2ZmZjtcbiAgZm9udC13ZWlnaHQ6IDYwMDsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5ncmFkaWVudC1yb3cge1xuICAgICAgbWFyZ2luLWxlZnQ6IGNhbGMoMCUgKyAxMHB4KTsgfSB9XG4gIC5ncmFkaWVudC1yb3dfZ3JhZGllbnQxIHtcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsICMzQjkxRTYgMCUsICM3QjVGQzYgNzAlLCB0cmFuc3BhcmVudCAxMDAlKTsgfVxuICAuZ3JhZGllbnQtcm93X2dyYWRpZW50MiB7XG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCAjRTlDN0Q0IDAlLCB0cmFuc3BhcmVudCAxMDAlKTsgfVxuICAuZ3JhZGllbnQtcm93X2dyYWRpZW50MyB7XG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCAjQjU0NDZFIDAlLCAjOUQ0NEI0IDEwMCUpOyB9XG4gIC5ncmFkaWVudC1yb3dfZGFyayB7XG4gICAgY29sb3I6ICMzNDMwMzc7IH1cbiAgLmdyYWRpZW50LXJvd191cHBlciB7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuICAuZ3JhZGllbnQtcm93X2ZhdCB7XG4gICAgZm9udC13ZWlnaHQ6IDkwMDsgfVxuICAuZ3JhZGllbnQtcm93X3NtIHtcbiAgICB3aWR0aDogY2FsYygyNSUgLSAyMHB4KTsgfVxuICAuZ3JhZGllbnQtcm93X2xnIHtcbiAgICB3aWR0aDogY2FsYyg0MS42NjY2NyUgLSAyMHB4KTsgfVxuICAuZ3JhZGllbnQtcm93X21iMzAge1xuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7IH1cblxuLmJ0bi1ib3gtb3V0ZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIG1hcmdpbi1sZWZ0OiAtMTBweDtcbiAgbWFyZ2luLXJpZ2h0OiAtMTBweDtcbiAgbWFyZ2luLWxlZnQ6IGNhbGMoOC4zMzMzMyUgKyAxMHB4KTtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogMjVweDsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5idG4tYm94LW91dGVyIHtcbiAgICAgIG1hcmdpbi1sZWZ0OiBjYWxjKDAlICsgMTBweCk7IH0gfVxuXG4uZGVidWdnZXIge1xuICBoZWlnaHQ6IDEwMHZoO1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIHdpZHRoOiAxMDAlOyB9XG4gIC5kZWJ1Z2dlciA+IGRpdiB7XG4gICAgaGVpZ2h0OiBpbmhlcml0O1xuICAgIG1heC13aWR0aDogMTIwMHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIHBhZGRpbmctbGVmdDogMTBweDtcbiAgICBwYWRkaW5nLXJpZ2h0OiAxMHB4OyB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcbiAgICAgIC5kZWJ1Z2dlciA+IGRpdiB7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMTVweDtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMTVweDsgfSB9XG4gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMzIwcHgpIHtcbiAgICAgIC5kZWJ1Z2dlciA+IGRpdiB7XG4gICAgICAgIHBhZGRpbmctbGVmdDogMTVweDtcbiAgICAgICAgcGFkZGluZy1yaWdodDogMTVweDsgfSB9XG4gICAgLmRlYnVnZ2VyID4gZGl2ID4gZGl2IHtcbiAgICAgIGhlaWdodDogaW5oZXJpdDtcbiAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICBtYXJnaW4tbGVmdDogLTEwcHg7XG4gICAgICBtYXJnaW4tcmlnaHQ6IC0xMHB4OyB9XG4gICAgICAuZGVidWdnZXIgPiBkaXYgPiBkaXYgPiBkaXYge1xuICAgICAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgICAgICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gICAgICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gICAgICAgIHdpZHRoOiBjYWxjKDguMzMzMzMlIC0gMjBweCk7XG4gICAgICAgIGhlaWdodDogaW5oZXJpdDtcbiAgICAgICAgb3V0bGluZTogIzAwMDtcbiAgICAgICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDE2NiwgMCwgMC4yOTQpOyB9XG4gIC5kZWJ1Z2dlciA+IGRpdiB7XG4gICAgbWFyZ2luLWxlZnQ6IDA7IH1cblxuLmJ1dHRvbiB7XG4gIGhlaWdodDogNTBweDtcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjREQxNzgxO1xuICBjb2xvcjogI2ZmZjtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgYm94LXNoYWRvdzogMHB4IDVweCAxMHB4IDBweCByZ2JhKDAsIDAsIDAsIDAuNCk7XG4gIGJvcmRlcjogMDtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW4tcmlnaHQ6IDM1cHg7IH1cbiAgLmJ1dHRvbl9zbSB7XG4gICAgd2lkdGg6IDIxMHB4O1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgZm9udC1zaXplOiAxNXB4OyB9XG4gIC5idXR0b25fbGcge1xuICAgIHdpZHRoOiAzMjVweDtcbiAgICBmb250LXdlaWdodDogNjAwOyB9XG4gIC5idXR0b25fcmFkaXVzIHtcbiAgICBib3JkZXItcmFkaXVzOiAzMHB4OyB9XG4gIC5idXR0b25fbS1hdXRvIHtcbiAgICBtYXJnaW46IGF1dG87IH1cbiAgLmJ1dHRvbl93aGl0ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgICBjb2xvcjogI0REMTc4MTtcbiAgICBib3JkZXI6IDNweCBzb2xpZCAjREQxNzgxOyB9XG4gIC5idXR0b246Zm9jdXMge1xuICAgIG91dGxpbmU6IDA7IH1cblxuLmNoZWNrUmFkaW8ge1xuICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmctbGVmdDogMTBweDtcbiAgcGFkZGluZy1yaWdodDogMTBweDtcbiAgbWFyZ2luLXRvcDogMTAwcHg7XG4gIG1hcmdpbi1ib3R0b206IDEwMHB4OyB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDc2OHB4KSB7XG4gICAgLmNoZWNrUmFkaW8ge1xuICAgICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICAgICAgcGFkZGluZy1yaWdodDogMTVweDsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDMyMHB4KSB7XG4gICAgLmNoZWNrUmFkaW8ge1xuICAgICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICAgICAgcGFkZGluZy1yaWdodDogMTVweDsgfSB9XG4gIC5jaGVja1JhZGlvLXJvdyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgbWFyZ2luLWxlZnQ6IC0xMHB4O1xuICAgIG1hcmdpbi1yaWdodDogLTEwcHg7XG4gICAgbWFyZ2luLWxlZnQ6IGNhbGMoOC4zMzMzMyUgKyAxMHB4KTtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyOyB9XG4gIC5jaGVja1JhZGlvLWNvbDpmaXJzdC1jaGlsZCB7XG4gICAgbWFyZ2luLXJpZ2h0OiBjYWxjKDguMzMzMzMlICsgMTBweCk7IH1cblxuLmNoZWNrIHtcbiAgZGlzcGxheTogZmxleDsgfVxuXG4ub3B0aW9uIHtcbiAgZGlzcGxheTogaW5saW5lLWZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgLm9wdGlvbl92dG9wIHtcbiAgICBhbGlnbi1pdGVtczogZmxleC1zdGFydDsgfVxuICAub3B0aW9uX190aXRsZSB7XG4gICAgbWFyZ2luOiAwOyB9XG4gIC5vcHRpb25fX3N0cmluZyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luLXRvcDogMTVweDsgfVxuICAub3B0aW9uX19pbnB1dCB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuICAgIC5vcHRpb25fX2lucHV0X2NoZWNrOmNoZWNrZWQgKyAub3B0aW9uX19pdGVtIC5vcHRpb25fX3RpY2sge1xuICAgICAgdmlzaWJpbGl0eTogdmlzaWJsZTsgfVxuICAgIC5vcHRpb25fX2lucHV0X3JhZGlvOmNoZWNrZWQgKyAub3B0aW9uX19pdGVtIC5vcHRpb25fX2RvdCB7XG4gICAgICB2aXNpYmlsaXR5OiB2aXNpYmxlOyB9XG4gIC5vcHRpb25fX2l0ZW0ge1xuICAgIHdpZHRoOiAyNHB4O1xuICAgIGhlaWdodDogMjRweDtcbiAgICBib3JkZXItd2lkdGg6IDJweDtcbiAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xuICAgIG1hcmdpbi1yaWdodDogMTVweDtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgYm9yZGVyLXJhZGl1czogM3B4OyB9XG4gICAgLm9wdGlvbl9faXRlbV9jaXJjbGUge1xuICAgICAgYm9yZGVyLXJhZGl1czogNTAlOyB9XG4gICAgLm9wdGlvbl9faXRlbV93aGl0ZSB7XG4gICAgICBib3JkZXItY29sb3I6ICNmZmY7IH1cbiAgICAgIC5vcHRpb25fX2l0ZW1fd2hpdGUgLm9wdGlvbl9fZG90IHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsgfVxuICAgICAgLm9wdGlvbl9faXRlbV93aGl0ZSAub3B0aW9uX190aWNrIHtcbiAgICAgICAgZmlsbDogI2ZmZjsgfVxuICAgICAgLm9wdGlvbl9faXRlbV93aGl0ZSArIC5vcHRpb25fX3RpdGxlIHtcbiAgICAgICAgY29sb3I6ICNmZmY7IH1cbiAgLm9wdGlvbl9fdGljayB7XG4gICAgd2lkdGg6IDIwcHg7XG4gICAgaGVpZ2h0OiAyMHB4O1xuICAgIHBhZGRpbmc6IDVweDtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XG4gICAgZmlsbDogI0REMTc4MTsgfVxuICAub3B0aW9uX19kb3Qge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcbiAgICB3aWR0aDogMTBweDtcbiAgICBoZWlnaHQ6IDEwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogMTBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjREQxNzgxOyB9XG4gIC5vcHRpb25fX3RpdGxlIHtcbiAgICBmb250LXNpemU6IDE1cHg7IH1cblxuLnRvb2dsZSB7XG4gIHdpZHRoOiA1NjVweDtcbiAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDkwZGVnLCAjQjU0NDZFIDAlLCAjOUQ0NEI0IDEwMCUpO1xuICBwYWRkaW5nOiA0MHB4IDI1cHggMjVweCAyNXB4OyB9XG5cbi5hY2NvcmRlb25Cb3gge1xuICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmctbGVmdDogMTBweDtcbiAgcGFkZGluZy1yaWdodDogMTBweDtcbiAgbWFyZ2luLWJvdHRvbTogNTVweDsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5hY2NvcmRlb25Cb3gge1xuICAgICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xuICAgICAgcGFkZGluZy1yaWdodDogMTVweDsgfSB9XG4gIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDMyMHB4KSB7XG4gICAgLmFjY29yZGVvbkJveCB7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG4gICAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4OyB9IH1cbiAgLmFjY29yZGVvbkJveC1yb3cge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC13cmFwOiB3cmFwO1xuICAgIG1hcmdpbi1sZWZ0OiAtMTBweDtcbiAgICBtYXJnaW4tcmlnaHQ6IC0xMHB4O1xuICAgIG1hcmdpbi1sZWZ0OiBjYWxjKDguMzMzMzMlICsgMTBweCk7XG4gICAgd2lkdGg6IGNhbGMoMTAwJSAvIDEyICogMTAgLSAwKTsgfVxuXG4uYWNjb3JkZW9uIHtcbiAgYm9yZGVyOiAxcHggc29saWQgI0VDRUNFQzsgfVxuICAuYWNjb3JkZW9uX19pdGVtIHtcbiAgICBib3JkZXItbGVmdDogM3B4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAuYWNjb3JkZW9uX19pdGVtOm5vdCg6bGFzdC1jaGlsZCkge1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjRUNFQ0VDOyB9XG4gIC5hY2NvcmRlb25fX2l0ZW06aG92ZXIge1xuICAgIGJveC1zaGFkb3c6IDBweCAwcHggMzVweCAwcHggcmdiYSgwLCAwLCAwLCAwLjE0KTtcbiAgICBib3JkZXItbGVmdC1jb2xvcjogI0REMTc4MTsgfVxuXG4uYWNjb3JkZW9uLXRpdGxlIHtcbiAgaGVpZ2h0OiA3NXB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIHBhZGRpbmc6IDAgMzBweDsgfVxuICAuYWNjb3JkZW9uLXRpdGxlX19pY29uIHtcbiAgICB3aWR0aDogMjBweDtcbiAgICBmaWxsOiAjRDFEMUQxO1xuICAgIGZsZXgtc2hyaW5rOiAwOyB9XG5cbi5hY2NvcmRlb24tY29udGVudCB7XG4gIHBhZGRpbmc6IDAgMzBweDtcbiAgZGlzcGxheTogbm9uZTsgfVxuICAuYWNjb3JkZW9uLWNvbnRlbnRfX3RleHQge1xuICAgIGxpbmUtaGVpZ2h0OiAyMnB4O1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nLWJvdHRvbTogMzBweDtcbiAgICBwYWRkaW5nLXRvcDogMTBweDsgfVxuICAuYWNjb3JkZW9uLWNvbnRlbnRfX3N1YnRpdGxlIHtcbiAgICBmb250LXdlaWdodDogNjAwOyB9XG5cbi5hcnRpY2xlX19pbWdfbXQzNSB7XG4gIG1hcmdpbi10b3A6IDM1cHg7IH1cblxuLm1lc3NhZ2UtaW5uZXIge1xuICBtYXJnaW46IDAgYXV0bzsgfVxuICAubWVzc2FnZS1pbm5lcl9sZyB7XG4gICAgd2lkdGg6IDU4MHB4OyB9XG4gIC5tZXNzYWdlLWlubmVyX3NtIHtcbiAgICB3aWR0aDogNDE0cHg7IH1cblxuLm1lc3NhZ2VfX3Bob25lIHtcbiAgY29sb3I6ICNmZmY7XG4gIGZvbnQtc2l6ZTogNDVweDtcbiAgcGFkZGluZzogMjBweCAwcHg7XG4gIGJvcmRlcjogM3B4IHNvbGlkICNERDE3ODE7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuICAubWVzc2FnZV9fcGhvbmUgc3BhbiB7XG4gICAgZm9udC13ZWlnaHQ6IDgwMDsgfVxuXG4udGV4dGFyZWEge1xuICByZXNpemU6IG5vbmU7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlNmU2ZTY7XG4gIHdpZHRoOiAxMDAlO1xuICBwYWRkaW5nOiAxMHB4IDE1cHg7XG4gIGhlaWdodDogMTAwJTsgfVxuICAudGV4dGFyZWE6Zm9jdXMge1xuICAgIG91dGxpbmU6IDA7XG4gICAgYm9yZGVyLWNvbG9yOiAjOWI5YjliOyB9XG5cbi5ib3gtY29sMiB7XG4gIGRpc3BsYXk6IGdyaWQ7XG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogNTAlIDUwJTtcbiAgZ3JpZC1jb2x1bW4tZ2FwOiAyNXB4OyB9XG5cbi5kcm9wZG93biB7XG4gIGN1cnNvcjogcG9pbnRlcjsgfVxuICAuZHJvcGRvd25fX2l0ZW0ge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7IH1cbiAgLmRyb3Bkb3duX19pdGVtOm5vdCguc2VsZWN0ZWQpIHtcbiAgICBwYWRkaW5nOiAxMHB4IDE1cHg7IH1cbiAgLmRyb3Bkb3duX19pdGVtOmhvdmVyOm5vdCguc2VsZWN0ZWQpIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjNGM0YzOyB9XG4gIC5kcm9wZG93bi5kaXNhYmxlZCB7XG4gICAgY29sb3I6ICNFNkU2RTY7IH1cbiAgICAuZHJvcGRvd24uZGlzYWJsZWQgLmRyb3Bkb3duX19hcnJvdyB7XG4gICAgICBmaWxsOiAjRTZFNkU2OyB9XG4gICAgLmRyb3Bkb3duLmRpc2FibGVkIC5kcm9wZG93bl9faGVhZCB7XG4gICAgICBib3JkZXItY29sb3I6ICNFNkU2RTY7IH1cblxuLmRyb3Bkb3duX19oZWFkIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBib3JkZXI6IDFweCBzb2xpZCAjOTM5MzkzO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xuICBwYWRkaW5nOiAxMHB4IDE1cHg7IH1cbiAgLmRyb3Bkb3duX19oZWFkIC5kcm9wZG93bl9fYXJyb3cge1xuICAgIGZpbGw6ICMzNDMwMzc7XG4gICAgd2lkdGg6IDEycHg7XG4gICAgaGVpZ2h0OiAxOXB4OyB9XG5cbi5kcm9wZG93bl9fYm9keSB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNFNkU2RTY7XG4gIGJvcmRlci10b3A6IDA7XG4gIGRpc3BsYXk6IG5vbmU7IH1cblxuLmluY29ycmVjdCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNERDE3ODE7IH1cbiAgLmluY29ycmVjdCB+IC5pbnB1dF9faWNvbiB7XG4gICAgZmlsbDogI0REMTc4MTsgfVxuICAuaW5jb3JyZWN0LmlucHV0X19maWVsZDpmb2N1cyB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgI0REMTc4MTsgfVxuICAuaW5jb3JyZWN0LmlucHV0X19maWVsZDpmb2N1cyB+IC5pbnB1dF9faWNvbiB7XG4gICAgZmlsbDogI0REMTc4MTsgfVxuXG4uY29ycmVjdCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlNmU2ZTY7IH1cbiAgLmNvcnJlY3QgfiAuaW5wdXRfX2ljb24ge1xuICAgIGZpbGw6ICMzQjkxRTY7IH1cbiAgLmNvcnJlY3QuaW5wdXRfX2ZpZWxkOmZvY3VzIH4gLmlucHV0X19pY29uIHtcbiAgICBmaWxsOiAjM0I5MUU2OyB9XG4gIC5jb3JyZWN0LmlucHV0X19maWVsZDpmb2N1cyB7XG4gICAgYm9yZGVyOiAxcHggc29saWQgIzNCOTFFNjsgfVxuICAuY29ycmVjdC5pbnB1dF9fZmllbGQ6Zm9jdXMgfiAuaW5wdXRfX2ljb24ge1xuICAgIGZpbGw6ICMzQjkxRTY7IH1cblxuLnR1bWJsZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgcGFkZGluZzogMnB4IDA7XG4gIGJvcmRlci1yYWRpdXM6IDYwcHg7IH1cbiAgLnR1bWJsZXJfcGluayB7XG4gICAgYm9yZGVyOiAycHggc29saWQgI0REMTc4MTsgfVxuICAgIC50dW1ibGVyX3BpbmsgLnR1bWJsZXJfX2l0ZW1fYWN0aXZlIHtcbiAgICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgLnR1bWJsZXJfcGluayAudHVtYmxlcl9fcG9pbnQge1xuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI0REMTc4MTsgfVxuICAudHVtYmxlcl93aGl0ZSB7XG4gICAgYm9yZGVyOiAycHggc29saWQgI2ZmZjtcbiAgICBjb2xvcjogI2ZmZjsgfVxuICAgIC50dW1ibGVyX3doaXRlIC50dW1ibGVyX19pdGVtX2FjdGl2ZSB7XG4gICAgICBjb2xvcjogIzM0MzAzNzsgfVxuICAgIC50dW1ibGVyX3doaXRlIC50dW1ibGVyX19wb2ludCB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOyB9XG4gIC50dW1ibGVyX19pdGVtIHtcbiAgICBwYWRkaW5nOiAxNXB4IDMwcHg7XG4gICAgYm9yZGVyLXJhZGl1czogNjBweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgICB0cmFuc2l0aW9uOiBjb2xvciAuNXM7XG4gICAgei1pbmRleDogMTsgfVxuICAudHVtYmxlcl9fcG9pbnQge1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICB6LWluZGV4OiAwO1xuICAgIGJvcmRlci1yYWRpdXM6IDYwcHg7IH1cblxuLnRhcmlmX3doaXRlIC50YXJpZl9fb3B0aW9uIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyMjYsIDIyNiwgMjI2LCAwLjMpO1xuICBjb2xvcjogI2ZmZjsgfVxuXG4udGFyaWZfd2hpdGUgLnRhcmlmX19vcHRpb25fYWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbiAgY29sb3I6ICNERDE3ODE7IH1cblxuLnRhcmlmX3BpbmsgLnRhcmlmX19vcHRpb25fYWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0REMTc4MTtcbiAgY29sb3I6ICNmZmY7IH1cblxuLnRhcmlmX19vcHRpb24ge1xuICBib3JkZXI6IDA7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgYmFja2dyb3VuZC1jb2xvcjogI0U3RTdFNztcbiAgdHJhbnNpdGlvbjogYWxsIC41IGVhc2U7IH1cbiAgLnRhcmlmX19vcHRpb246Zm9jdXMge1xuICAgIG91dGxpbmU6IDA7IH1cbiAgLnRhcmlmX19vcHRpb25fbGcge1xuICAgIHdpZHRoOiAxNzZweDtcbiAgICBoZWlnaHQ6IDUwcHg7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBmb250LXNpemU6IDE1cHg7IH1cbiAgLnRhcmlmX19vcHRpb25fc20ge1xuICAgIHdpZHRoOiA4N3B4O1xuICAgIGhlaWdodDogMzBweDsgfVxuXG4uaW5mb1dyYXBwZXIge1xuICBkaXNwbGF5OiBncmlkO1xuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7IH1cblxuLmluZm8ge1xuICBwYWRkaW5nOiAyMHB4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgZmxleC13cmFwOiB3cmFwOyB9XG4gIC5pbmZvX2JnIHtcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsICNCNTQ0NkUgMCUsICM5RDQ0QjQgMTAwJSk7IH1cbiAgLmluZm9fX3RpdGxlIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbGluZS1oZWlnaHQ6IDIycHg7XG4gICAgbWFyZ2luOiAwOyB9XG4gICAgLmluZm9fX3RpdGxlX3doaXRlIHtcbiAgICAgIGNvbG9yOiAjZmZmOyB9XG4gIC5pbmZvX19pY29uIHtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgd2lkdGg6IDIwcHg7XG4gICAgaGVpZ2h0OiAyMHB4O1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBsaW5lLWhlaWdodDogMTkuNXB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gICAgZm9udC1zaXplOiAxM3B4O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBsZWZ0OiA1cHg7XG4gICAgYm90dG9tOiAycHg7XG4gICAgZm9udC13ZWlnaHQ6IDYwMDsgfVxuICAgIC5pbmZvX19pY29uX3doaXRlIHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICBjb2xvcjogIzM0MzAzNzsgfVxuICAgIC5pbmZvX19pY29uX3Bpbmsge1xuICAgICAgYm9yZGVyOiAxcHggc29saWQgI0REMTc4MTtcbiAgICAgIGNvbG9yOiAjREQxNzgxOyB9XG4gIC5pbmZvX190ZXh0IHtcbiAgICBmb250LXNpemU6IDEzcHg7XG4gICAgbWFyZ2luOiAwOyB9XG5cbi5pbmZvRGVzY3JpcHRpb24ge1xuICBib3gtc2hhZG93OiAwcHggMHB4IDhweCAwcHggcmdiYSgwLCAwLCAwLCAwLjMpO1xuICBwYWRkaW5nOiAxNXB4IDI1cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gIHdpZHRoOiAzMDBweDsgfVxuXG4udGFibGUge1xuICBib3JkZXI6IDNweCBzb2xpZCB0cmFuc3BhcmVudDtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7IH1cbiAgLnRhYmxlX190aXRsZSB7XG4gICAgbWFyZ2luLWJvdHRvbTogMTBweDtcbiAgICBmb250LXdlaWdodDogNjAwOyB9XG4gIC50YWJsZV9waW5rIHtcbiAgICBib3JkZXItY29sb3I6ICNERDE3ODE7XG4gICAgY29sb3I6ICMzNDMwMzc7IH1cbiAgICAudGFibGVfcGluayAudGFibGVfX3RpdGxlLXJvdyB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjREQxNzgxO1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgICAudGFibGVfcGluayAudGFibGVfX3JvdzpudGgtY2hpbGQoMm4gKyAxKSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjBGMEYwOyB9XG4gICAgLnRhYmxlX3BpbmsgLnRhYmxlX19jb2x1bW46bnRoLWNoaWxkKDJuKSB7XG4gICAgICBib3JkZXItbGVmdDogM3B4IHNvbGlkICNFN0U3RTc7XG4gICAgICBib3JkZXItcmlnaHQ6IDNweCBzb2xpZCAjRTdFN0U3OyB9XG4gIC50YWJsZV93aGl0ZSB7XG4gICAgYm9yZGVyLWNvbG9yOiAjZmZmO1xuICAgIGNvbG9yOiAjZmZmOyB9XG4gICAgLnRhYmxlX3doaXRlIC50YWJsZV9fdGl0bGUtcm93IHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG4gICAgICBjb2xvcjogI0REMTc4MTsgfVxuICAgIC50YWJsZV93aGl0ZSAudGFibGVfX3JvdzpudGgtY2hpbGQoMm4gKyAxKSB7XG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNSk7IH1cbiAgICAudGFibGVfd2hpdGUgLnRhYmxlX19jb2x1bW46bnRoLWNoaWxkKDJuKSB7XG4gICAgICBib3JkZXItbGVmdDogM3B4IHNvbGlkICNmZmY7XG4gICAgICBib3JkZXItcmlnaHQ6IDNweCBzb2xpZCAjZmZmOyB9XG4gICAgLnRhYmxlX3doaXRlIC50YWJsZV9fcm93IHtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4yKTsgfVxuICAudGFibGVfX3RpdGxlIHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0OyB9XG4gIC50YWJsZV9fdGl0bGUtY29sdW1uIHtcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG4gICAgcGFkZGluZzogMzBweCAxNXB4OyB9XG4gIC50YWJsZV9fY29sdW1uIHtcbiAgICBwYWRkaW5nOiAyNXB4IDE1cHg7IH1cblxuLnBhZ2luYXRpb24ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG4gIC5wYWdpbmF0aW9uX19hcnJvdyB7XG4gICAgd2lkdGg6IDM2cHg7XG4gICAgaGVpZ2h0OiAzNnB4O1xuICAgIHBhZGRpbmc6IDEwcHggMTRweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjM0I5MUU2O1xuICAgIGZpbGw6ICNmZmY7XG4gICAgYm9yZGVyLXJhZGl1czogMThweDtcbiAgICBjdXJzb3I6IHBvaW50ZXI7XG4gICAgb3BhY2l0eTogMTsgfVxuICAgIC5wYWdpbmF0aW9uX19hcnJvd19kaXNhYmxlZCB7XG4gICAgICBvcGFjaXR5OiAuMzsgfVxuXG4ubnVtYmVycyB7XG4gIGRpc3BsYXk6IGZsZXg7IH1cbiAgLm51bWJlcnNfX2l0ZW0ge1xuICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBjb2xvcjogIzNCOTFFNjtcbiAgICBtYXJnaW46IDA7XG4gICAgd2lkdGg6IDUwcHg7XG4gICAgaGVpZ2h0OiA1MHB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjsgfVxuICAgIC5udW1iZXJzX19pdGVtX3N0dWIge1xuICAgICAgZGlzcGxheTogZmxleDsgfVxuICAgIC5udW1iZXJzX19pdGVtX3N0dWIgLm51bWJlcnNfX251bWJlciB7XG4gICAgICB2aXNpYmlsaXR5OiBoaWRkZW47IH1cbiAgICAubnVtYmVyc19faXRlbV9hY3RpdmUge1xuICAgICAgYm9yZGVyLXJhZGl1czogMTAwJTtcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNFNkVGRjg7XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB0b3A6IC0zcHg7IH1cbiAgICAgIC5udW1iZXJzX19pdGVtX2FjdGl2ZSAubnVtYmVyc19fZG90cyB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7IH1cbiAgLm51bWJlcnNfX2RvdHMge1xuICAgIGxpbmUtaGVpZ2h0OiAwcHg7XG4gICAgaGVpZ2h0OiAxMHB4OyB9XG5cbi5pbnN0YSAuaW5zdGFCbG9jayB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4uaW5zdGEgLmluc3RhSW5uZXIge1xuICBkaXNwbGF5OiBmbGV4OyB9XG5cbi5pbnN0YV9fdGl0bGUge1xuICBoZWlnaHQ6IDc1cHg7IH1cblxuLmluc3RhX19pdGVtIGltZyB7XG4gIHdpZHRoOiAyMTBweDsgfVxuXG4uZm9vdGVyIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzM0MzAzNztcbiAgaGVpZ2h0OiAxMjVweDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAuZm9vdGVySW5uZXIge1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cblxuLmNvcHlyaWdodCB7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LXNpemU6IDE1cHg7IH1cbiAgLmNvcHlyaWdodF9fY29tcGFueSB7XG4gICAgbWFyZ2luOiAwO1xuICAgIG1hcmdpbi1ib3R0b206IDVweDsgfVxuICAuY29weXJpZ2h0X190ZXh0IHtcbiAgICBtYXJnaW46IDA7IH1cblxuLnNvY2lhbCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjsgfVxuICAuc29jaWFsX190ZXh0IHtcbiAgICBmb250LXNpemU6IDE3cHg7XG4gICAgY29sb3I6ICNmZmY7IH1cblxuLnNvY2lhbEljb25zX19pY29uIHtcbiAgd2lkdGg6IDM1cHg7XG4gIGhlaWdodDogMzVweDsgfVxuXG4uYm94X2NvbC0yIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyO1xuICBncmlkLWNvbHVtbi1nYXA6IDMwcHg7IH1cblxuLmJveF9ncmF5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YzZjNmMzsgfVxuXG4uYmctYm94IHtcbiAgYmFja2dyb3VuZDogdXJsKFwiLi9yZXNvdXJjZXMvaW1hZ2VzL2JveC1iZy5qcGdcIikgbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uLXg6IHJpZ2h0OyB9XG5cbi5taW5pLWJveCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgZmxleC13cmFwOiB3cmFwOyB9XG4gIC5taW5pLWJveF9ncmF5IHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjNGM0YzOyB9XG4gIC5taW5pLWJveF9ibHVlIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRTZFRUY4OyB9XG4gIC5taW5pLWJveF9waW5rIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjRjVFMEU5OyB9XG4gIC5taW5pLWJveF9jZW50ZXIge1xuICAgIG1hcmdpbjogYXV0bzsgfVxuICAubWluaS1ib3hfYmlnIHtcbiAgICB3aWR0aDogMzkwcHg7XG4gICAgaGVpZ2h0OiAzMDBweDsgfVxuXG5AY2hhcnNldCBcIlVURi04XCI7XG4vKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG4vKiBEb2N1bWVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXG4gKi9cbkBpbXBvcnQgdXJsKC4uL25vZGVfbW9kdWxlcy9zbGljay1jYXJvdXNlbC9zbGljay9zbGljay5jc3MpO1xuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqLyB9XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7IH1cblxuLyoqXG4gKiBSZW5kZXIgdGhlIGBtYWluYCBlbGVtZW50IGNvbnNpc3RlbnRseSBpbiBJRS5cbiAqL1xubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDsgfVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDEgKi9cbiAgaGVpZ2h0OiAwO1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuYiwgc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmNvZGUsIGtiZCwgc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7IH1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuc3ViLCBzdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxuICovXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7IH1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sIGlucHV0LCBvcHRncm91cCwgc2VsZWN0LCB0ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuYnV0dG9uLCBpbnB1dCB7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uLCBzZWxlY3Qge1xuICAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLCBbdHlwZT1cImJ1dHRvblwiXSwgW3R5cGU9XCJyZXNldFwiXSwgW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lciwgW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsIFt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsIFt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5idXR0b246LW1vei1mb2N1c3JpbmcsIFt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLCBbdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLCBbdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuZmllbGRzZXQge1xuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7XG4gIC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgLyogMSAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLlxuICovXG5bdHlwZT1cImNoZWNrYm94XCJdLCBbdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLCBbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bzsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIC8qIDIgKi8gfVxuICBbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovIH1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cbiAqL1xuZGV0YWlscyB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07IH1cblxuLyogTWlzY1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxuICovXG50ZW1wbGF0ZSwgW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXG4gKi9cbioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbmh0bWwge1xuICBjb2xvcjogIzM0MzAzNztcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDE3cHg7IH1cblxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiB7XG4gIG1hcmdpbjogMDsgfVxuXG4vKiBMYXlvdXQgKi9cbmJvZHkge1xuICBkaXNwbGF5OiBmbGV4OyB9XG5cbmhlYWRlci5oZWFkZXIge1xuICBoZWlnaHQ6IDUwcHg7IH1cblxuYXNpZGUuYXNpZGUge1xuICB3aWR0aDogMjUwcHg7IH1cblxuLmNvbnRlbnQge1xuICB3aWR0aDogY2FsYygxMDAlIC0gMjUwcHgpOyB9XG5cbi5oMSB7XG4gIGZvbnQtc2l6ZTogNTVweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC13ZWlnaHQ6IDgwMDsgfVxuXG4uaDIge1xuICBmb250LXNpemU6IDQycHg7XG4gIGZvbnQtd2VpZ2h0OiA4MDA7IH1cblxuLmgzIHtcbiAgZm9udC1zaXplOiAzNnB4O1xuICBmb250LXdlaWdodDogNzAwOyB9XG4gIC5oM193aGl0ZSB7XG4gICAgY29sb3I6ICNmZmY7IH1cblxuLmg0IHtcbiAgZm9udC1zaXplOiAyOHB4OyB9XG5cbi5oNSB7XG4gIGZvbnQtc2l6ZTogMjJweDsgfVxuICAuaDVfd2hpdGUge1xuICAgIGNvbG9yOiAjZmZmOyB9XG5cbi5oNiB7XG4gIGZvbnQtc2l6ZTogMTdweDsgfVxuXG4udGV4dENlbnRlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4ud2hpdGUge1xuICBjb2xvcjogI2ZmZjsgfVxuXG4uYWNjZW50IHtcbiAgY29sb3I6ICNERDE3ODE7IH1cblxuLnNlbWlCb2xkIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDsgfVxuXG4uYm9sZCB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7IH1cblxuLmV4dHJhQm9sZCB7XG4gIGZvbnQtd2VpZ2h0OiA4MDA7IH1cblxuLnVwcGVyIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuXG4udGV4dFNpemU0NiB7XG4gIGZvbnQtc2l6ZTogNDZweDsgfVxuXG4udGV4dFNpemUyMiB7XG4gIGZvbnQtc2l6ZTogMjJweDsgfVxuXG4udGV4dFNpemUxNCB7XG4gIGZvbnQtc2l6ZTogMTRweDsgfVxuXG4udGV4dFNpemUxMyB7XG4gIGZvbnQtc2l6ZTogMTNweDsgfVxuXG4udGV4dCB7XG4gIGxpbmUtaGVpZ2h0OiAyNHB4OyB9XG4gIC50ZXh0X29wYWNpdHk1IHtcbiAgICBvcGFjaXR5OiAuNTsgfVxuXG4vKiDQqNGA0LjRhNGC0YsgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIHNyYzogdXJsKFwiZm9udHMvT3BlblNhbnMud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcImZvbnRzL09wZW5TYW5zLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiZm9udHMvT3BlblNhbnMudHRmXCIpIGZvcm1hdChcInR0ZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIHNyYzogdXJsKFwiZm9udHMvT3BlblNhbnMtU2VtaWJvbGQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcImZvbnRzL09wZW5TYW5zLVNlbWlib2xkLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiZm9udHMvT3BlblNhbnMtU2VtaWJvbGQudHRmXCIpIGZvcm1hdChcInR0ZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIHNyYzogdXJsKFwiZm9udHMvT3BlblNhbnMtQm9sZC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiZm9udHMvT3BlblNhbnMtQm9sZC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcImZvbnRzL09wZW5TYW5zLUJvbGQudHRmXCIpIGZvcm1hdChcInR0ZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIHNyYzogdXJsKFwiZm9udHMvT3BlblNhbnMtRXh0cmFib2xkLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCJmb250cy9PcGVuU2Fucy1FeHRyYWJvbGQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCJmb250cy9PcGVuU2Fucy1FeHRyYWJvbGQudHRmXCIpIGZvcm1hdChcInR0ZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDgwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG5cbi8qIE1hcmdpbiBYICovXG4ubXgxMCB7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7IH1cblxuLm14MjAge1xuICBtYXJnaW4tbGVmdDogMjBweDtcbiAgbWFyZ2luLXJpZ2h0OiAyMHB4OyB9XG5cbi5teDMwIHtcbiAgbWFyZ2luLWxlZnQ6IDMwcHg7XG4gIG1hcmdpbi1yaWdodDogMzBweDsgfVxuXG4vKiBNYXJnaW4gWSAqL1xuLm15MzAge1xuICBtYXJnaW4tdG9wOiAzMHB4O1xuICBtYXJnaW4tYm90dG9tOiAzMHB4OyB9XG5cbi5teTQwIHtcbiAgbWFyZ2luLXRvcDogNDBweDtcbiAgbWFyZ2luLWJvdHRvbTogNDBweDsgfVxuXG4ubXk1MCB7XG4gIG1hcmdpbi10b3A6IDUwcHg7XG4gIG1hcmdpbi1ib3R0b206IDUwcHg7IH1cblxuLm15ODAge1xuICBtYXJnaW4tdG9wOiA4MHB4O1xuICBtYXJnaW4tYm90dG9tOiA4MHB4OyB9XG5cbi8qIE1hcmdpbiBSaWdodCAqL1xuLm1yMzAge1xuICBtYXJnaW4tcmlnaHQ6IDMwcHg7IH1cblxuLm1yNTAge1xuICBtYXJnaW4tcmlnaHQ6IDUwcHg7IH1cblxuLyogTWFyZ2luIFRvcCAqL1xuLm10MTAge1xuICBtYXJnaW4tdG9wOiAxMHB4OyB9XG5cbi5tdDIwIHtcbiAgbWFyZ2luLXRvcDogMjBweDsgfVxuXG4ubXQzMCB7XG4gIG1hcmdpbi10b3A6IDMwcHg7IH1cblxuLm10NjAge1xuICBtYXJnaW4tdG9wOiA2MHB4OyB9XG5cbi8qIE1hcmdpbiBCb3R0b20gKi9cbi5tYjAge1xuICBtYXJnaW4tYm90dG9tOiAwcHg7IH1cblxuLm1iMTAge1xuICBtYXJnaW4tYm90dG9tOiAxMHB4OyB9XG5cbi5tYjE1IHtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDsgfVxuXG4ubWIyMCB7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7IH1cblxuLm1iMzAge1xuICBtYXJnaW4tYm90dG9tOiAzMHB4OyB9XG5cbi5tYjM1IHtcbiAgbWFyZ2luLWJvdHRvbTogMzVweDsgfVxuXG4ubWI0MCB7XG4gIG1hcmdpbi1ib3R0b206IDQwcHg7IH1cblxuLm1iNTAge1xuICBtYXJnaW4tYm90dG9tOiA1MHB4OyB9XG5cbi5tYjU1IHtcbiAgbWFyZ2luLWJvdHRvbTogNTVweDsgfVxuXG4ubWI3NSB7XG4gIG1hcmdpbi1ib3R0b206IDc1cHg7IH1cblxuLm1iOTAge1xuICBtYXJnaW4tYm90dG9tOiA5MHB4OyB9XG5cbi8qIFBhZGRpbmcgKi9cbi5wNjAge1xuICBwYWRkaW5nOiA2MHB4OyB9XG5cbi8qIFBhZGRpbmcgWCAqL1xuLnB4MjAge1xuICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDIwcHg7IH1cblxuLnB4MzAge1xuICBwYWRkaW5nLWxlZnQ6IDMwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDMwcHg7IH1cblxuLnB4NTAge1xuICBwYWRkaW5nLWxlZnQ6IDUwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDUwcHg7IH1cblxuLyogUGFkZGluZyBZICovXG4ucHkxMCB7XG4gIHBhZGRpbmctdG9wOiAxMHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMTBweDsgfVxuXG4ucHkyMCB7XG4gIHBhZGRpbmctdG9wOiAyMHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMjBweDsgfVxuXG4ucHkzMCB7XG4gIHBhZGRpbmctdG9wOiAzMHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMzBweDsgfVxuXG4ucHkzNSB7XG4gIHBhZGRpbmctdG9wOiAzNXB4O1xuICBwYWRkaW5nLWJvdHRvbTogMzVweDsgfVxuXG4ucHk2MCB7XG4gIHBhZGRpbmctdG9wOiA2MHB4O1xuICBwYWRkaW5nLWJvdHRvbTogNjBweDsgfVxuXG4ucHk4MCB7XG4gIHBhZGRpbmctdG9wOiA4MHB4O1xuICBwYWRkaW5nLWJvdHRvbTogODBweDsgfVxuXG4vKiBQYWRkaW5nIFRvcCAqL1xuLnB0ODAge1xuICBwYWRkaW5nLXRvcDogODBweDsgfVxuXG4vKiBQYWRkaW5nIEJvdHRvbSAqL1xuLnBiMTIwIHtcbiAgcGFkZGluZy1ib3R0b206IDEyMHB4OyB9XG5cbi8qIFBhZGRpbmcgTGVmdCAqL1xuLnBsMjAge1xuICBwYWRkaW5nLWxlZnQ6IDIwcHg7IH1cblxuLnNsaWRlci1ib3gge1xuICBtYXgtd2lkdGg6IDEyMDBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIHBhZGRpbmctbGVmdDogMTBweDtcbiAgcGFkZGluZy1yaWdodDogMTBweDsgfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC5zbGlkZXItYm94IHtcbiAgICAgIHBhZGRpbmctbGVmdDogMTVweDtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7IH0gfVxuICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAzMjBweCkge1xuICAgIC5zbGlkZXItYm94IHtcbiAgICAgIHBhZGRpbmctbGVmdDogMTVweDtcbiAgICAgIHBhZGRpbmctcmlnaHQ6IDE1cHg7IH0gfVxuXG4uc2xpZGVyLXJvdyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgbWFyZ2luLWxlZnQ6IC0xMHB4O1xuICBtYXJnaW4tcmlnaHQ6IC0xMHB4O1xuICB3aWR0aDogY2FsYyg4My4zMzMzMyUgLSAyMHB4KTtcbiAgbWFyZ2luLWxlZnQ6IGNhbGMoOC4zMzMzMyUgKyAxMHB4KTsgfVxuXG4uY29udGFpbmVyX3NsaWRlci1jb250YWluZXIge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cblxuLnNsaWRlcl9faXRlbSB7XG4gIGhlaWdodDogNDAwcHg7IH1cblxuLnNsaWRlci1ib3hfX2Fycm93IHtcbiAgd2lkdGg6IDM2cHg7XG4gIGhlaWdodDogMzZweDtcbiAgcGFkZGluZzogMTBweCAxNHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjM0I5MUU2O1xuICBmaWxsOiAjZmZmO1xuICBib3JkZXItcmFkaXVzOiAxOHB4O1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIG9wYWNpdHk6IDE7IH1cbiAgLnNsaWRlci1ib3hfX2Fycm93X25leHQge1xuICAgIHJpZ2h0OiAwO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKDIwMCUsIC0xMDAlKTsgfVxuICAuc2xpZGVyLWJveF9fYXJyb3dfcHJldiB7XG4gICAgbGVmdDogMDtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtMjAwJSwgLTEwMCUpOyB9XG4gIC5zbGlkZXItYm94X19hcnJvdy5zbGljay1kaXNhYmxlZCB7XG4gICAgb3BhY2l0eTogLjM7IH1cblxuLnNsaWRlci1ib3hfX2RvdHMge1xuICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICBjdXJzb3I6IHBvaW50ZXI7IH1cbiAgLnNsaWRlci1ib3hfX2RvdHMgbGkge1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMzQjkxRTY7XG4gICAgd2lkdGg6IDEycHg7XG4gICAgaGVpZ2h0OiAxMnB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgICBtYXJnaW46IDAgMTBweDtcbiAgICBvcGFjaXR5OiAuMzsgfVxuICAgIC5zbGlkZXItYm94X19kb3RzIGxpLnNsaWNrLWFjdGl2ZSB7XG4gICAgICBvcGFjaXR5OiAxOyB9XG4gIC5zbGlkZXItYm94X19kb3RzIGJ1dHRvbiB7XG4gICAgZGlzcGxheTogbm9uZTsgfVxuXG5AY2hhcnNldCBcIlVURi04XCI7XG4vKiEgbm9ybWFsaXplLmNzcyB2OC4wLjEgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG4vKiBEb2N1bWVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgbGluZSBoZWlnaHQgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUHJldmVudCBhZGp1c3RtZW50cyBvZiBmb250IHNpemUgYWZ0ZXIgb3JpZW50YXRpb24gY2hhbmdlcyBpbiBpT1MuXG4gKi9cbkBpbXBvcnQgdXJsKC4uL25vZGVfbW9kdWxlcy9zbGljay1jYXJvdXNlbC9zbGljay9zbGljay5jc3MpO1xuaHRtbCB7XG4gIGxpbmUtaGVpZ2h0OiAxLjE1O1xuICAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1zaXplLWFkanVzdDogMTAwJTtcbiAgLyogMiAqLyB9XG5cbi8qIFNlY3Rpb25zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmJvZHkge1xuICBtYXJnaW46IDA7IH1cblxuLyoqXG4gKiBSZW5kZXIgdGhlIGBtYWluYCBlbGVtZW50IGNvbnNpc3RlbnRseSBpbiBJRS5cbiAqL1xubWFpbiB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuaDEge1xuICBmb250LXNpemU6IDJlbTtcbiAgbWFyZ2luOiAwLjY3ZW0gMDsgfVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBGaXJlZm94LlxuICogMi4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZSBhbmQgSUUuXG4gKi9cbmhyIHtcbiAgYm94LXNpemluZzogY29udGVudC1ib3g7XG4gIC8qIDEgKi9cbiAgaGVpZ2h0OiAwO1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5wcmUge1xuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7XG4gIC8qIDEgKi9cbiAgZm9udC1zaXplOiAxZW07XG4gIC8qIDIgKi8gfVxuXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogUmVtb3ZlIHRoZSBncmF5IGJhY2tncm91bmQgb24gYWN0aXZlIGxpbmtzIGluIElFIDEwLlxuICovXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gQ2hyb21lIDU3LVxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHRleHQgZGVjb3JhdGlvbiBpbiBDaHJvbWUsIEVkZ2UsIElFLCBPcGVyYSwgYW5kIFNhZmFyaS5cbiAqL1xuYWJiclt0aXRsZV0ge1xuICBib3JkZXItYm90dG9tOiBub25lO1xuICAvKiAxICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xuICAvKiAyICovXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lIGRvdHRlZDtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuYiwgc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmNvZGUsIGtiZCwgc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7IH1cblxuLyoqXG4gKiBQcmV2ZW50IGBzdWJgIGFuZCBgc3VwYCBlbGVtZW50cyBmcm9tIGFmZmVjdGluZyB0aGUgbGluZSBoZWlnaHQgaW5cbiAqIGFsbCBicm93c2Vycy5cbiAqL1xuc3ViLCBzdXAge1xuICBmb250LXNpemU6IDc1JTtcbiAgbGluZS1oZWlnaHQ6IDA7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lOyB9XG5cbnN1YiB7XG4gIGJvdHRvbTogLTAuMjVlbTsgfVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTsgfVxuXG4vKiBFbWJlZGRlZCBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLlxuICovXG5pbWcge1xuICBib3JkZXItc3R5bGU6IG5vbmU7IH1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gUmVtb3ZlIHRoZSBtYXJnaW4gaW4gRmlyZWZveCBhbmQgU2FmYXJpLlxuICovXG5idXR0b24sIGlucHV0LCBvcHRncm91cCwgc2VsZWN0LCB0ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBpbmhlcml0O1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuYnV0dG9uLCBpbnB1dCB7XG4gIC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEVkZ2UsIEZpcmVmb3gsIGFuZCBJRS5cbiAqIDEuIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uLCBzZWxlY3Qge1xuICAvKiAxICovXG4gIHRleHQtdHJhbnNmb3JtOiBub25lOyB9XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgaW5hYmlsaXR5IHRvIHN0eWxlIGNsaWNrYWJsZSB0eXBlcyBpbiBpT1MgYW5kIFNhZmFyaS5cbiAqL1xuYnV0dG9uLCBbdHlwZT1cImJ1dHRvblwiXSwgW3R5cGU9XCJyZXNldFwiXSwgW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjsgfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lciwgW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsIFt0eXBlPVwicmVzZXRcIl06Oi1tb3otZm9jdXMtaW5uZXIsIFt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwOyB9XG5cbi8qKlxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxuICovXG5idXR0b246LW1vei1mb2N1c3JpbmcsIFt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLCBbdHlwZT1cInJlc2V0XCJdOi1tb3otZm9jdXNyaW5nLCBbdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuZmllbGRzZXQge1xuICBwYWRkaW5nOiAwLjM1ZW0gMC43NWVtIDAuNjI1ZW07IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbmxlZ2VuZCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG4gIC8qIDEgKi9cbiAgY29sb3I6IGluaGVyaXQ7XG4gIC8qIDIgKi9cbiAgZGlzcGxheTogdGFibGU7XG4gIC8qIDEgKi9cbiAgbWF4LXdpZHRoOiAxMDAlO1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDMgKi9cbiAgd2hpdGUtc3BhY2U6IG5vcm1hbDtcbiAgLyogMSAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xucHJvZ3Jlc3Mge1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFIDEwKy5cbiAqL1xudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bzsgfVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIElFIDEwLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLlxuICovXG5bdHlwZT1cImNoZWNrYm94XCJdLCBbdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXG4gKi9cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLCBbdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bzsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIC8qIDIgKi8gfVxuICBbdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtZGVjb3JhdGlvbiB7XG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGluIENocm9tZSBhbmQgU2FmYXJpIG9uIG1hY09TLlxuICovXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cbjo6LXdlYmtpdC1maWxlLXVwbG9hZC1idXR0b24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMSAqL1xuICBmb250OiBpbmhlcml0O1xuICAvKiAyICovIH1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUgMTArLCBhbmQgRmlyZWZveC5cbiAqL1xuZGV0YWlscyB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07IH1cblxuLyogTWlzY1xuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTArLlxuICovXG50ZW1wbGF0ZSwgW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgMTAuXG4gKi9cbioge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XG5cbmh0bWwge1xuICBjb2xvcjogIzM0MzAzNztcbiAgZm9udC1mYW1pbHk6ICdPcGVuIFNhbnMnLCBzYW5zLXNlcmlmO1xuICBmb250LXNpemU6IDE3cHg7IH1cblxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiB7XG4gIG1hcmdpbjogMDsgfVxuXG4vKiBMYXlvdXQgKi9cbmJvZHkge1xuICBkaXNwbGF5OiBmbGV4OyB9XG5cbmhlYWRlci5oZWFkZXIge1xuICBoZWlnaHQ6IDUwcHg7IH1cblxuYXNpZGUuYXNpZGUge1xuICB3aWR0aDogMjUwcHg7IH1cblxuLmNvbnRlbnQge1xuICB3aWR0aDogY2FsYygxMDAlIC0gMjUwcHgpOyB9XG5cbi5oMSB7XG4gIGZvbnQtc2l6ZTogNTVweDtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgZm9udC13ZWlnaHQ6IDgwMDsgfVxuXG4uaDIge1xuICBmb250LXNpemU6IDQycHg7XG4gIGZvbnQtd2VpZ2h0OiA4MDA7IH1cblxuLmgzIHtcbiAgZm9udC1zaXplOiAzNnB4O1xuICBmb250LXdlaWdodDogNzAwOyB9XG4gIC5oM193aGl0ZSB7XG4gICAgY29sb3I6ICNmZmY7IH1cblxuLmg0IHtcbiAgZm9udC1zaXplOiAyOHB4OyB9XG5cbi5oNSB7XG4gIGZvbnQtc2l6ZTogMjJweDsgfVxuICAuaDVfd2hpdGUge1xuICAgIGNvbG9yOiAjZmZmOyB9XG5cbi5oNiB7XG4gIGZvbnQtc2l6ZTogMTdweDsgfVxuXG4udGV4dENlbnRlciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4ud2hpdGUge1xuICBjb2xvcjogI2ZmZjsgfVxuXG4uYWNjZW50IHtcbiAgY29sb3I6ICNERDE3ODE7IH1cblxuLnNlbWlCb2xkIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDsgfVxuXG4uYm9sZCB7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7IH1cblxuLmV4dHJhQm9sZCB7XG4gIGZvbnQtd2VpZ2h0OiA4MDA7IH1cblxuLnVwcGVyIHtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuXG4udGV4dFNpemU0NiB7XG4gIGZvbnQtc2l6ZTogNDZweDsgfVxuXG4udGV4dFNpemUyMiB7XG4gIGZvbnQtc2l6ZTogMjJweDsgfVxuXG4udGV4dFNpemUxNCB7XG4gIGZvbnQtc2l6ZTogMTRweDsgfVxuXG4udGV4dFNpemUxMyB7XG4gIGZvbnQtc2l6ZTogMTNweDsgfVxuXG4udGV4dCB7XG4gIGxpbmUtaGVpZ2h0OiAyNHB4OyB9XG4gIC50ZXh0X29wYWNpdHk1IHtcbiAgICBvcGFjaXR5OiAuNTsgfVxuXG4vKiDQqNGA0LjRhNGC0YsgKi9cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIHNyYzogdXJsKFwiZm9udHMvT3BlblNhbnMud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcImZvbnRzL09wZW5TYW5zLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiZm9udHMvT3BlblNhbnMudHRmXCIpIGZvcm1hdChcInR0ZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIHNyYzogdXJsKFwiZm9udHMvT3BlblNhbnMtU2VtaWJvbGQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcImZvbnRzL09wZW5TYW5zLVNlbWlib2xkLndvZmZcIikgZm9ybWF0KFwid29mZlwiKSwgdXJsKFwiZm9udHMvT3BlblNhbnMtU2VtaWJvbGQudHRmXCIpIGZvcm1hdChcInR0ZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIHNyYzogdXJsKFwiZm9udHMvT3BlblNhbnMtQm9sZC53b2ZmMlwiKSBmb3JtYXQoXCJ3b2ZmMlwiKSwgdXJsKFwiZm9udHMvT3BlblNhbnMtQm9sZC53b2ZmXCIpIGZvcm1hdChcIndvZmZcIiksIHVybChcImZvbnRzL09wZW5TYW5zLUJvbGQudHRmXCIpIGZvcm1hdChcInR0ZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ09wZW4gU2Fucyc7XG4gIHNyYzogdXJsKFwiZm9udHMvT3BlblNhbnMtRXh0cmFib2xkLndvZmYyXCIpIGZvcm1hdChcIndvZmYyXCIpLCB1cmwoXCJmb250cy9PcGVuU2Fucy1FeHRyYWJvbGQud29mZlwiKSBmb3JtYXQoXCJ3b2ZmXCIpLCB1cmwoXCJmb250cy9PcGVuU2Fucy1FeHRyYWJvbGQudHRmXCIpIGZvcm1hdChcInR0ZlwiKTtcbiAgZm9udC13ZWlnaHQ6IDgwMDtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG5cbi8qIE1hcmdpbiBYICovXG4ubXgxMCB7XG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICBtYXJnaW4tcmlnaHQ6IDEwcHg7IH1cblxuLm14MjAge1xuICBtYXJnaW4tbGVmdDogMjBweDtcbiAgbWFyZ2luLXJpZ2h0OiAyMHB4OyB9XG5cbi5teDMwIHtcbiAgbWFyZ2luLWxlZnQ6IDMwcHg7XG4gIG1hcmdpbi1yaWdodDogMzBweDsgfVxuXG4vKiBNYXJnaW4gWSAqL1xuLm15MzAge1xuICBtYXJnaW4tdG9wOiAzMHB4O1xuICBtYXJnaW4tYm90dG9tOiAzMHB4OyB9XG5cbi5teTQwIHtcbiAgbWFyZ2luLXRvcDogNDBweDtcbiAgbWFyZ2luLWJvdHRvbTogNDBweDsgfVxuXG4ubXk1MCB7XG4gIG1hcmdpbi10b3A6IDUwcHg7XG4gIG1hcmdpbi1ib3R0b206IDUwcHg7IH1cblxuLm15ODAge1xuICBtYXJnaW4tdG9wOiA4MHB4O1xuICBtYXJnaW4tYm90dG9tOiA4MHB4OyB9XG5cbi8qIE1hcmdpbiBSaWdodCAqL1xuLm1yMzAge1xuICBtYXJnaW4tcmlnaHQ6IDMwcHg7IH1cblxuLm1yNTAge1xuICBtYXJnaW4tcmlnaHQ6IDUwcHg7IH1cblxuLyogTWFyZ2luIFRvcCAqL1xuLm10MTAge1xuICBtYXJnaW4tdG9wOiAxMHB4OyB9XG5cbi5tdDIwIHtcbiAgbWFyZ2luLXRvcDogMjBweDsgfVxuXG4ubXQzMCB7XG4gIG1hcmdpbi10b3A6IDMwcHg7IH1cblxuLm10NjAge1xuICBtYXJnaW4tdG9wOiA2MHB4OyB9XG5cbi8qIE1hcmdpbiBCb3R0b20gKi9cbi5tYjAge1xuICBtYXJnaW4tYm90dG9tOiAwcHg7IH1cblxuLm1iMTAge1xuICBtYXJnaW4tYm90dG9tOiAxMHB4OyB9XG5cbi5tYjE1IHtcbiAgbWFyZ2luLWJvdHRvbTogMTVweDsgfVxuXG4ubWIyMCB7XG4gIG1hcmdpbi1ib3R0b206IDIwcHg7IH1cblxuLm1iMzAge1xuICBtYXJnaW4tYm90dG9tOiAzMHB4OyB9XG5cbi5tYjM1IHtcbiAgbWFyZ2luLWJvdHRvbTogMzVweDsgfVxuXG4ubWI0MCB7XG4gIG1hcmdpbi1ib3R0b206IDQwcHg7IH1cblxuLm1iNTAge1xuICBtYXJnaW4tYm90dG9tOiA1MHB4OyB9XG5cbi5tYjU1IHtcbiAgbWFyZ2luLWJvdHRvbTogNTVweDsgfVxuXG4ubWI3NSB7XG4gIG1hcmdpbi1ib3R0b206IDc1cHg7IH1cblxuLm1iOTAge1xuICBtYXJnaW4tYm90dG9tOiA5MHB4OyB9XG5cbi8qIFBhZGRpbmcgKi9cbi5wNjAge1xuICBwYWRkaW5nOiA2MHB4OyB9XG5cbi8qIFBhZGRpbmcgWCAqL1xuLnB4MjAge1xuICBwYWRkaW5nLWxlZnQ6IDIwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDIwcHg7IH1cblxuLnB4MzAge1xuICBwYWRkaW5nLWxlZnQ6IDMwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDMwcHg7IH1cblxuLnB4NTAge1xuICBwYWRkaW5nLWxlZnQ6IDUwcHg7XG4gIHBhZGRpbmctcmlnaHQ6IDUwcHg7IH1cblxuLyogUGFkZGluZyBZICovXG4ucHkxMCB7XG4gIHBhZGRpbmctdG9wOiAxMHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMTBweDsgfVxuXG4ucHkyMCB7XG4gIHBhZGRpbmctdG9wOiAyMHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMjBweDsgfVxuXG4ucHkzMCB7XG4gIHBhZGRpbmctdG9wOiAzMHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMzBweDsgfVxuXG4ucHkzNSB7XG4gIHBhZGRpbmctdG9wOiAzNXB4O1xuICBwYWRkaW5nLWJvdHRvbTogMzVweDsgfVxuXG4ucHk2MCB7XG4gIHBhZGRpbmctdG9wOiA2MHB4O1xuICBwYWRkaW5nLWJvdHRvbTogNjBweDsgfVxuXG4ucHk4MCB7XG4gIHBhZGRpbmctdG9wOiA4MHB4O1xuICBwYWRkaW5nLWJvdHRvbTogODBweDsgfVxuXG4vKiBQYWRkaW5nIFRvcCAqL1xuLnB0ODAge1xuICBwYWRkaW5nLXRvcDogODBweDsgfVxuXG4vKiBQYWRkaW5nIEJvdHRvbSAqL1xuLnBiMTIwIHtcbiAgcGFkZGluZy1ib3R0b206IDEyMHB4OyB9XG5cbi8qIFBhZGRpbmcgTGVmdCAqL1xuLnBsMjAge1xuICBwYWRkaW5nLWxlZnQ6IDIwcHg7IH1cblxuLmNpdHllcyB7XG4gIGNvbG9yOiAjZmZmO1xuICBmaWxsOiAjZmZmO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQzMDM3OyB9XG4gIC5jaXR5ZXNfdzI1MCB7XG4gICAgd2lkdGg6IDI1MHB4OyB9XG4gIC5jaXR5ZXNfaGVpZ2h0NTAge1xuICAgIGhlaWdodDogNTBweDsgfVxuXG4uaXRlbSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgaGVpZ2h0OiA1MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzQzMDM3O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLml0ZW1fZmxleC1lbmQge1xuICAgIGp1c3RpZnktY29udGVudDogZmxleC1lbmQ7IH1cbiAgLml0ZW1fb2Zmc2V0IHtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgbGVmdDogMjMwcHg7XG4gICAgdG9wOiAtNTBweDsgfVxuICAuaXRlbSAuaXRlbV9fY2l0eS1uYW1lX3VwcGVyY2FzZSB7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsgfVxuICAuaXRlbSBzcGFuIHtcbiAgICBmb250LXdlaWdodDogNjAwOyB9XG4gIC5pdGVtIC5pdGVtX19hcnJvdyB7XG4gICAgd2lkdGg6IDEwcHg7XG4gICAgaGVpZ2h0OiAxMHB4OyB9XG4gICAgLml0ZW0gLml0ZW1fX2Fycm93X2FsaWduLXJpZ2h0IHtcbiAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICAgIHJpZ2h0OiAyMHB4OyB9XG4gIC5pdGVtIC5pdGVtX19pY29uLXBob25lIHtcbiAgICB3aWR0aDogMTZweDtcbiAgICBoZWlnaHQ6IDE2cHg7IH1cblxuLml0ZW06bm90KC5hY3RpdmUpIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuIiwiQGltcG9ydCAnLi4vLi4vLi4vbWFpbic7XHJcblxyXG4uY2l0eWVzIHtcclxuICBjb2xvcjogJHdoaXRlO1xyXG4gIGZpbGw6ICR3aGl0ZTsgXHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJGZpcnN0O1xyXG4gIFxyXG4gICZfdzI1MCB7XHJcbiAgICB3aWR0aDogMjUwcHg7XHJcbiAgfVxyXG4gIFxyXG4gICZfaGVpZ2h0NTAge1xyXG4gICAgaGVpZ2h0OiA1MHB4O1xyXG4gIH1cclxufVxyXG5cclxuLml0ZW0ge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgaGVpZ2h0OiA1MHB4O1xyXG4gIFxyXG4gIGJhY2tncm91bmQtY29sb3I6ICRmaXJzdDtcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICZfZmxleC1lbmQge1xyXG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICB9XHJcblxyXG4gICZfb2Zmc2V0IHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGxlZnQ6IDIzMHB4O1xyXG4gICAgdG9wOiAtNTBweDtcclxuICB9XHJcblxyXG4gIC5pdGVtX19jaXR5LW5hbWV7XHJcblxyXG4gICAgJl91cHBlcmNhc2Uge1xyXG4gICAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgc3BhbiB7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG4gIH1cclxuXHJcbiAgLml0ZW1fX2Fycm93IHtcclxuICAgIHdpZHRoOiAxMHB4O1xyXG4gICAgaGVpZ2h0OiAxMHB4O1xyXG5cclxuICAgICZfYWxpZ24tcmlnaHQge1xyXG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgIHJpZ2h0OiAyMHB4O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLml0ZW1fX2ljb24tcGhvbmUge1xyXG4gICAgd2lkdGg6IDE2cHg7XHJcbiAgICBoZWlnaHQ6IDE2cHg7XHJcbiAgfVxyXG59XHJcblxyXG4uaXRlbTpub3QoLmFjdGl2ZSkge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn0iXX0= */
